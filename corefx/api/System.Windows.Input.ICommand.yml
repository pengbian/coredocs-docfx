items:
- uid: System.Windows.Input.ICommand
  id: ICommand
  parent: System.Windows.Input
  children:
  - System.Windows.Input.ICommand.CanExecute(System.Object)
  - System.Windows.Input.ICommand.CanExecuteChanged
  - System.Windows.Input.ICommand.Execute(System.Object)
  href: System.Windows.Input.ICommand.yml
  name: ICommand
  fullName: System.Windows.Input.ICommand
  type: Interface
  source:
    remote: &o0
      path: src/System.ObjectModel/src/System/Windows/Input/ICommand.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.ObjectModel/src/System/Windows/Input/ICommand.cs
    startLine: 12
  assemblies:
  - System.ObjectModel
  namespace: System.Windows.Input
  summary: An interface that allows an application author to define a method to be invoked.
  syntax:
    content: public interface ICommand
    content.vb: Public Interface ICommand
- uid: System.Windows.Input.ICommand.CanExecuteChanged
  id: CanExecuteChanged
  parent: System.Windows.Input.ICommand
  href: System.Windows.Input.ICommand.yml
  name: CanExecuteChanged
  fullName: System.Windows.Input.ICommand.CanExecuteChanged
  type: Event
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Windows/Input/ICommand.cs
    startLine: 17
  assemblies:
  - System.ObjectModel
  namespace: System.Windows.Input
  summary: Raised when the ability of the command to execute has changed.
  syntax:
    content: event EventHandler CanExecuteChanged
    content.vb: Event CanExecuteChanged As EventHandler
- uid: System.Windows.Input.ICommand.CanExecute(System.Object)
  id: CanExecute(System.Object)
  parent: System.Windows.Input.ICommand
  href: System.Windows.Input.ICommand.yml
  name: CanExecute(Object)
  fullName: System.Windows.Input.ICommand.CanExecute(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Windows/Input/ICommand.cs
    startLine: 24
  assemblies:
  - System.ObjectModel
  namespace: System.Windows.Input
  summary: Returns whether the command can be executed.
  syntax:
    content: bool CanExecute(object parameter)
    content.vb: Function CanExecute(parameter As Object) As Boolean
    parameters:
    - id: parameter
      type: System.Object
      description: A parameter that may be used in executing the command. This parameter may be ignored by some implementations.
    return:
      type: System.Boolean
      description: true if the command can be executed with the given parameter and current state. false otherwise.
- uid: System.Windows.Input.ICommand.Execute(System.Object)
  id: Execute(System.Object)
  parent: System.Windows.Input.ICommand
  href: System.Windows.Input.ICommand.yml
  name: Execute(Object)
  fullName: System.Windows.Input.ICommand.Execute(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Windows/Input/ICommand.cs
    startLine: 30
  assemblies:
  - System.ObjectModel
  namespace: System.Windows.Input
  summary: Defines the method that should be executed when the command is executed.
  syntax:
    content: void Execute(object parameter)
    content.vb: Sub Execute(parameter As Object)
    parameters:
    - id: parameter
      type: System.Object
      description: A parameter that may be used in executing the command. This parameter may be ignored by some implementations.
references:
- uid: System.Windows.Input
  isExternal: false
  name: System.Windows.Input
  fullName: System.Windows.Input
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
