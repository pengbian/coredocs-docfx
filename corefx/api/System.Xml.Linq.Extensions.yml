items:
- uid: System.Xml.Linq.Extensions
  id: Extensions
  parent: System.Xml.Linq
  children:
  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})
  - System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)
  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  - System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  - System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  - System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})
  - System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})
  - System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)
  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  - System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})
  - System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)
  - System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})
  - System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})
  - System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})
  - System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Xml.Linq.Extensions.yml
  name: Extensions
  fullName: System.Xml.Linq.Extensions
  type: Class
  source:
    remote: &o0
      path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 13
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Defines the LINQ to XML extension methods.
  syntax:
    content: public class Extensions
    content.vb: Public Class Extensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  id: Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  parent: System.Xml.Linq.Extensions
  href: System.Xml.Linq.Extensions.yml
  name: Attributes(IEnumerable<XElement>)
  name.vb: Attributes(IEnumerable(Of XElement))
  fullName: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>)
  fullName.vb: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XElement))
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 24
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Returns all of the <see cref="T:System.Xml.Linq.XAttribute" />s for each <see cref="T:System.Xml.Linq.XElement" /> of

    this <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" />.
  syntax:
    content: public static IEnumerable<XAttribute> Attributes(IEnumerable<XElement> source)
    content.vb: Public Shared Function Attributes(source As IEnumerable(Of XElement)) As IEnumerable(Of XAttribute)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute}
      description: >-
        An <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XAttribute" /> containing the XML

        Attributes for every <see cref="T:System.Xml.Linq.XElement" /> in the target <see cref="T:System.Collections.IEnumerable" />

        of <see cref="T:System.Xml.Linq.XElement" />.
- uid: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  id: Attributes(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  parent: System.Xml.Linq.Extensions
  href: System.Xml.Linq.Extensions.yml
  name: Attributes(IEnumerable<XElement>, XName)
  name.vb: Attributes(IEnumerable(Of XElement), XName)
  fullName: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>, System.Xml.Linq.XName)
  fullName.vb: System.Xml.Linq.Extensions.Attributes(System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XElement), System.Xml.Linq.XName)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 40
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Returns the <see cref="T:System.Xml.Linq.XAttribute" />s that have a matching <see cref="T:System.Xml.Linq.XName" />.  Each

    <see cref="T:System.Xml.Linq.XElement" />'s <see cref="T:System.Xml.Linq.XAttribute" />s in the target <see cref="T:System.Collections.IEnumerable" />

    of <see cref="T:System.Xml.Linq.XElement" /> are scanned for a matching <see cref="T:System.Xml.Linq.XName" />.
  syntax:
    content: public static IEnumerable<XAttribute> Attributes(IEnumerable<XElement> source, XName name)
    content.vb: Public Shared Function Attributes(source As IEnumerable(Of XElement), name As XName) As IEnumerable(Of XAttribute)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
    - id: name
      type: System.Xml.Linq.XName
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute}
      description: >-
        An <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XAttribute" /> containing the XML

        Attributes with a matching <see cref="T:System.Xml.Linq.XName" /> for every <see cref="T:System.Xml.Linq.XElement" /> in

        the target <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" />.
- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0})
  id: Ancestors``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Xml.Linq.Extensions
  href: System.Xml.Linq.Extensions.yml
  name: Ancestors<T>(IEnumerable<T>)
  name.vb: Ancestors(Of T)(IEnumerable(Of T))
  fullName: System.Xml.Linq.Extensions.Ancestors<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: System.Xml.Linq.Extensions.Ancestors(Of T)(System.Collections.Generic.IEnumerable(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 56
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Returns an <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" /> containing the ancestors (parent

    and it's parent up to the root) of each of the <see cref="T:System.Xml.Linq.XElement" />s in this

    <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" />.
  syntax:
    content: 'public static IEnumerable<XElement> Ancestors<T>(IEnumerable<T> source)where T : XNode'
    content.vb: Public Shared Function Ancestors(Of T As XNode)(source As IEnumerable(Of T)) As IEnumerable(Of XElement)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: >-
        An <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" /> containing the ancestors (parent

        and it's parent up to the root) of each of the <see cref="T:System.Xml.Linq.XElement" />s in this

        <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" />.
- uid: System.Xml.Linq.Extensions.Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)
  id: Ancestors``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)
  parent: System.Xml.Linq.Extensions
  href: System.Xml.Linq.Extensions.yml
  name: Ancestors<T>(IEnumerable<T>, XName)
  name.vb: Ancestors(Of T)(IEnumerable(Of T), XName)
  fullName: System.Xml.Linq.Extensions.Ancestors<T>(System.Collections.Generic.IEnumerable<T>, System.Xml.Linq.XName)
  fullName.vb: System.Xml.Linq.Extensions.Ancestors(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Xml.Linq.XName)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 72
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Returns an <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" /> containing the ancestors (parent

    and it's parent up to the root) that have a matching <see cref="T:System.Xml.Linq.XName" />.  This is done for each

    <see cref="T:System.Xml.Linq.XElement" /> in this <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" />.
  syntax:
    content: 'public static IEnumerable<XElement> Ancestors<T>(IEnumerable<T> source, XName name)where T : XNode'
    content.vb: Public Shared Function Ancestors(Of T As XNode)(source As IEnumerable(Of T), name As XName) As IEnumerable(Of XElement)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{T}}
    - id: name
      type: System.Xml.Linq.XName
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: >-
        An <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" /> containing the ancestors (parent

        and it's parent up to the root) that have a matching <see cref="T:System.Xml.Linq.XName" />.  This is done for each

        <see cref="T:System.Xml.Linq.XElement" /> in this <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" />.
- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  id: AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  parent: System.Xml.Linq.Extensions
  href: System.Xml.Linq.Extensions.yml
  name: AncestorsAndSelf(IEnumerable<XElement>)
  name.vb: AncestorsAndSelf(IEnumerable(Of XElement))
  fullName: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>)
  fullName.vb: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XElement))
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 90
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Returns an <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" /> containing the

    <see cref="T:System.Xml.Linq.XElement" /> and it's ancestors (parent and it's parent up to the root).

    This is done for each <see cref="T:System.Xml.Linq.XElement" /> in this <see cref="T:System.Collections.IEnumerable" /> of

    <see cref="T:System.Xml.Linq.XElement" />.
  syntax:
    content: public static IEnumerable<XElement> AncestorsAndSelf(IEnumerable<XElement> source)
    content.vb: Public Shared Function AncestorsAndSelf(source As IEnumerable(Of XElement)) As IEnumerable(Of XElement)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: >-
        An <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" /> containing the

        <see cref="T:System.Xml.Linq.XElement" /> and it's ancestors (parent and it's parent up to the root).

        This is done for each <see cref="T:System.Xml.Linq.XElement" /> in this <see cref="T:System.Collections.IEnumerable" /> of

        <see cref="T:System.Xml.Linq.XElement" />.
- uid: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  id: AncestorsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  parent: System.Xml.Linq.Extensions
  href: System.Xml.Linq.Extensions.yml
  name: AncestorsAndSelf(IEnumerable<XElement>, XName)
  name.vb: AncestorsAndSelf(IEnumerable(Of XElement), XName)
  fullName: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>, System.Xml.Linq.XName)
  fullName.vb: System.Xml.Linq.Extensions.AncestorsAndSelf(System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XElement), System.Xml.Linq.XName)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 108
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Returns an <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" /> containing the

    <see cref="T:System.Xml.Linq.XElement" /> and it's ancestors (parent and it's parent up to the root)

    that match the passed in <see cref="T:System.Xml.Linq.XName" />.  This is done for each

    <see cref="T:System.Xml.Linq.XElement" /> in this <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" />.
  syntax:
    content: public static IEnumerable<XElement> AncestorsAndSelf(IEnumerable<XElement> source, XName name)
    content.vb: Public Shared Function AncestorsAndSelf(source As IEnumerable(Of XElement), name As XName) As IEnumerable(Of XElement)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
    - id: name
      type: System.Xml.Linq.XName
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: >-
        An <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" /> containing the

        <see cref="T:System.Xml.Linq.XElement" /> and it's ancestors (parent and it's parent up to the root)

        that match the passed in <see cref="T:System.Xml.Linq.XName" />.  This is done for each

        <see cref="T:System.Xml.Linq.XElement" /> in this <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" />.
- uid: System.Xml.Linq.Extensions.Nodes``1(System.Collections.Generic.IEnumerable{``0})
  id: Nodes``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Xml.Linq.Extensions
  href: System.Xml.Linq.Extensions.yml
  name: Nodes<T>(IEnumerable<T>)
  name.vb: Nodes(Of T)(IEnumerable(Of T))
  fullName: System.Xml.Linq.Extensions.Nodes<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: System.Xml.Linq.Extensions.Nodes(Of T)(System.Collections.Generic.IEnumerable(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 117
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Returns an [System.Collections.IEnumerable]() of [System.Xml.Linq.XNode](System.Xml.Linq.XNode.yml) over the content of a set of nodes
  syntax:
    content: 'public static IEnumerable<XNode> Nodes<T>(IEnumerable<T> source)where T : XContainer'
    content.vb: Public Shared Function Nodes(Of T As XContainer)(source As IEnumerable(Of T)) As IEnumerable(Of XNode)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XNode}
- uid: System.Xml.Linq.Extensions.DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})
  id: DescendantNodes``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Xml.Linq.Extensions
  href: System.Xml.Linq.Extensions.yml
  name: DescendantNodes<T>(IEnumerable<T>)
  name.vb: DescendantNodes(Of T)(IEnumerable(Of T))
  fullName: System.Xml.Linq.Extensions.DescendantNodes<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: System.Xml.Linq.Extensions.DescendantNodes(Of T)(System.Collections.Generic.IEnumerable(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 140
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Returns an [System.Collections.IEnumerable]() of [System.Xml.Linq.XNode](System.Xml.Linq.XNode.yml) over the descendants of a set of nodes
  syntax:
    content: 'public static IEnumerable<XNode> DescendantNodes<T>(IEnumerable<T> source)where T : XContainer'
    content.vb: Public Shared Function DescendantNodes(Of T As XContainer)(source As IEnumerable(Of T)) As IEnumerable(Of XNode)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XNode}
- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0})
  id: Descendants``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Xml.Linq.Extensions
  href: System.Xml.Linq.Extensions.yml
  name: Descendants<T>(IEnumerable<T>)
  name.vb: Descendants(Of T)(IEnumerable(Of T))
  fullName: System.Xml.Linq.Extensions.Descendants<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: System.Xml.Linq.Extensions.Descendants(Of T)(System.Collections.Generic.IEnumerable(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 156
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Returns an <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" /> containing the descendants (children

    and their children down to the leaf level).  This is done for each <see cref="T:System.Xml.Linq.XElement" /> in

    this <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" />.
  syntax:
    content: 'public static IEnumerable<XElement> Descendants<T>(IEnumerable<T> source)where T : XContainer'
    content.vb: Public Shared Function Descendants(Of T As XContainer)(source As IEnumerable(Of T)) As IEnumerable(Of XElement)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: >-
        An <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" /> containing the descendants (children

        and their children down to the leaf level).  This is done for each <see cref="T:System.Xml.Linq.XElement" /> in

        this <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" />.
- uid: System.Xml.Linq.Extensions.Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)
  id: Descendants``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)
  parent: System.Xml.Linq.Extensions
  href: System.Xml.Linq.Extensions.yml
  name: Descendants<T>(IEnumerable<T>, XName)
  name.vb: Descendants(Of T)(IEnumerable(Of T), XName)
  fullName: System.Xml.Linq.Extensions.Descendants<T>(System.Collections.Generic.IEnumerable<T>, System.Xml.Linq.XName)
  fullName.vb: System.Xml.Linq.Extensions.Descendants(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Xml.Linq.XName)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 172
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Returns an <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" /> containing the descendants (children

    and their children down to the leaf level) that have a matching <see cref="T:System.Xml.Linq.XName" />.  This is done

    for each <see cref="T:System.Xml.Linq.XElement" /> in the target <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" />.
  syntax:
    content: 'public static IEnumerable<XElement> Descendants<T>(IEnumerable<T> source, XName name)where T : XContainer'
    content.vb: Public Shared Function Descendants(Of T As XContainer)(source As IEnumerable(Of T), name As XName) As IEnumerable(Of XElement)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{T}}
    - id: name
      type: System.Xml.Linq.XName
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: >-
        An <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" /> containing the descendants (children

        and their children down to the leaf level) that have a matching <see cref="T:System.Xml.Linq.XName" />.  This is done

        for each <see cref="T:System.Xml.Linq.XElement" /> in this <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" />.
- uid: System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  id: DescendantNodesAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  parent: System.Xml.Linq.Extensions
  href: System.Xml.Linq.Extensions.yml
  name: DescendantNodesAndSelf(IEnumerable<XElement>)
  name.vb: DescendantNodesAndSelf(IEnumerable(Of XElement))
  fullName: System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>)
  fullName.vb: System.Xml.Linq.Extensions.DescendantNodesAndSelf(System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XElement))
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 190
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Returns an <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" /> containing the

    <see cref="T:System.Xml.Linq.XElement" /> and it's descendants

    that match the passed in <see cref="T:System.Xml.Linq.XName" />.  This is done for each

    <see cref="T:System.Xml.Linq.XElement" /> in this <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" />.
  syntax:
    content: public static IEnumerable<XNode> DescendantNodesAndSelf(IEnumerable<XElement> source)
    content.vb: Public Shared Function DescendantNodesAndSelf(source As IEnumerable(Of XElement)) As IEnumerable(Of XNode)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XNode}
      description: >-
        An <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" /> containing the

        <see cref="T:System.Xml.Linq.XElement" /> and descendants.

        This is done for each

        <see cref="T:System.Xml.Linq.XElement" /> in this <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" />.
- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  id: DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement})
  parent: System.Xml.Linq.Extensions
  href: System.Xml.Linq.Extensions.yml
  name: DescendantsAndSelf(IEnumerable<XElement>)
  name.vb: DescendantsAndSelf(IEnumerable(Of XElement))
  fullName: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>)
  fullName.vb: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XElement))
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 208
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Returns an <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" /> containing the

    <see cref="T:System.Xml.Linq.XElement" /> and it's descendants (children and children's children down

    to the leaf nodes).  This is done for each <see cref="T:System.Xml.Linq.XElement" /> in this <see cref="T:System.Collections.IEnumerable" />

    of <see cref="T:System.Xml.Linq.XElement" />.
  syntax:
    content: public static IEnumerable<XElement> DescendantsAndSelf(IEnumerable<XElement> source)
    content.vb: Public Shared Function DescendantsAndSelf(source As IEnumerable(Of XElement)) As IEnumerable(Of XElement)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: >-
        An <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" /> containing the

        <see cref="T:System.Xml.Linq.XElement" /> and it's descendants (children and children's children down

        to the leaf nodes).  This is done for each <see cref="T:System.Xml.Linq.XElement" /> in this <see cref="T:System.Collections.IEnumerable" />

        of <see cref="T:System.Xml.Linq.XElement" />.
- uid: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  id: DescendantsAndSelf(System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement},System.Xml.Linq.XName)
  parent: System.Xml.Linq.Extensions
  href: System.Xml.Linq.Extensions.yml
  name: DescendantsAndSelf(IEnumerable<XElement>, XName)
  name.vb: DescendantsAndSelf(IEnumerable(Of XElement), XName)
  fullName: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>, System.Xml.Linq.XName)
  fullName.vb: System.Xml.Linq.Extensions.DescendantsAndSelf(System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XElement), System.Xml.Linq.XName)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 226
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Returns an <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" /> containing the

    <see cref="T:System.Xml.Linq.XElement" /> and it's descendants (children and children's children down

    to the leaf nodes) that match the passed in <see cref="T:System.Xml.Linq.XName" />.  This is done for

    each <see cref="T:System.Xml.Linq.XElement" /> in this <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" />.
  syntax:
    content: public static IEnumerable<XElement> DescendantsAndSelf(IEnumerable<XElement> source, XName name)
    content.vb: Public Shared Function DescendantsAndSelf(source As IEnumerable(Of XElement), name As XName) As IEnumerable(Of XElement)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
    - id: name
      type: System.Xml.Linq.XName
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: >-
        An <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" /> containing the

        <see cref="T:System.Xml.Linq.XElement" /> and it's descendants (children and children's children down

        to the leaf nodes) that match the passed in <see cref="T:System.Xml.Linq.XName" />.  This is done for

        each <see cref="T:System.Xml.Linq.XElement" /> in this <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" />.
- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0})
  id: Elements``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Xml.Linq.Extensions
  href: System.Xml.Linq.Extensions.yml
  name: Elements<T>(IEnumerable<T>)
  name.vb: Elements(Of T)(IEnumerable(Of T))
  fullName: System.Xml.Linq.Extensions.Elements<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: System.Xml.Linq.Extensions.Elements(Of T)(System.Collections.Generic.IEnumerable(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 240
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Returns an <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" /> containing the child elements

    for each <see cref="T:System.Xml.Linq.XElement" /> in this <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" />.
  syntax:
    content: 'public static IEnumerable<XElement> Elements<T>(IEnumerable<T> source)where T : XContainer'
    content.vb: Public Shared Function Elements(Of T As XContainer)(source As IEnumerable(Of T)) As IEnumerable(Of XElement)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: >-
        An <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" /> containing the child elements

        for each <see cref="T:System.Xml.Linq.XElement" /> in this <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" />.
- uid: System.Xml.Linq.Extensions.Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)
  id: Elements``1(System.Collections.Generic.IEnumerable{``0},System.Xml.Linq.XName)
  parent: System.Xml.Linq.Extensions
  href: System.Xml.Linq.Extensions.yml
  name: Elements<T>(IEnumerable<T>, XName)
  name.vb: Elements(Of T)(IEnumerable(Of T), XName)
  fullName: System.Xml.Linq.Extensions.Elements<T>(System.Collections.Generic.IEnumerable<T>, System.Xml.Linq.XName)
  fullName.vb: System.Xml.Linq.Extensions.Elements(Of T)(System.Collections.Generic.IEnumerable(Of T), System.Xml.Linq.XName)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 254
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Returns an <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" /> containing the child elements

    with a matching for each <see cref="T:System.Xml.Linq.XElement" /> in this <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" />.
  syntax:
    content: 'public static IEnumerable<XElement> Elements<T>(IEnumerable<T> source, XName name)where T : XContainer'
    content.vb: Public Shared Function Elements(Of T As XContainer)(source As IEnumerable(Of T), name As XName) As IEnumerable(Of XElement)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{T}}
    - id: name
      type: System.Xml.Linq.XName
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
      description: >-
        An <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" /> containing the child elements

        for each <see cref="T:System.Xml.Linq.XElement" /> in this <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" />.
- uid: System.Xml.Linq.Extensions.InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})
  id: InDocumentOrder``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Xml.Linq.Extensions
  href: System.Xml.Linq.Extensions.yml
  name: InDocumentOrder<T>(IEnumerable<T>)
  name.vb: InDocumentOrder(Of T)(IEnumerable(Of T))
  fullName: System.Xml.Linq.Extensions.InDocumentOrder<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: System.Xml.Linq.Extensions.InDocumentOrder(Of T)(System.Collections.Generic.IEnumerable(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 269
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Returns an <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" /> containing the child elements

    with a matching for each <see cref="T:System.Xml.Linq.XElement" /> in this <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" />.
  syntax:
    content: 'public static IEnumerable<T> InDocumentOrder<T>(IEnumerable<T> source)where T : XNode'
    content.vb: Public Shared Function InDocumentOrder(Of T As XNode)(source As IEnumerable(Of T)) As IEnumerable(Of T)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{T}}
    typeParameters:
    - id: T
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
      description: >-
        An <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" /> containing the child elements

        for each <see cref="T:System.Xml.Linq.XElement" /> in this <see cref="T:System.Collections.IEnumerable" /> of <see cref="T:System.Xml.Linq.XElement" />.

        in document order
- uid: System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})
  id: Remove(System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute})
  parent: System.Xml.Linq.Extensions
  href: System.Xml.Linq.Extensions.yml
  name: Remove(IEnumerable<XAttribute>)
  name.vb: Remove(IEnumerable(Of XAttribute))
  fullName: System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable<System.Xml.Linq.XAttribute>)
  fullName.vb: System.Xml.Linq.Extensions.Remove(System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XAttribute))
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 279
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Removes each <see cref="T:System.Xml.Linq.XAttribute" /> represented in this <see cref="T:System.Collections.IEnumerable" /> of

    <see cref="T:System.Xml.Linq.XAttribute" />.  Note that this method uses snapshot semantics (copies the

    attributes to a <see cref="T:System.Collections.Generic.List`1" /> before deleting each).
  syntax:
    content: public static void Remove(IEnumerable<XAttribute> source)
    content.vb: Public Shared Sub Remove(source As IEnumerable(Of XAttribute))
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute}
- uid: System.Xml.Linq.Extensions.Remove``1(System.Collections.Generic.IEnumerable{``0})
  id: Remove``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Xml.Linq.Extensions
  href: System.Xml.Linq.Extensions.yml
  name: Remove<T>(IEnumerable<T>)
  name.vb: Remove(Of T)(IEnumerable(Of T))
  fullName: System.Xml.Linq.Extensions.Remove<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: System.Xml.Linq.Extensions.Remove(Of T)(System.Collections.Generic.IEnumerable(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/Extensions.cs
    startLine: 291
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Removes each <see cref="T:System.Xml.Linq.XNode" /> represented in this <see cref="T:System.Collections.IEnumerable" />

    T which must be a derived from <see cref="T:System.Xml.Linq.XNode" />.  Note that this method uses snapshot semantics

    (copies the <see cref="T:System.Xml.Linq.XNode" />s to a List before deleting each).
  syntax:
    content: 'public static void Remove<T>(IEnumerable<T> source)where T : XNode'
    content.vb: Public Shared Sub Remove(Of T As XNode)(source As IEnumerable(Of T))
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{T}}
    typeParameters:
    - id: T
references:
- uid: System.Xml.Linq
  isExternal: false
  name: System.Xml.Linq
  fullName: System.Xml.Linq
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Xml.Linq.XAttribute
  parent: System.Xml.Linq
  isExternal: false
  href: System.Xml.Linq.XAttribute.yml
  name: XAttribute
  fullName: System.Xml.Linq.XAttribute
  type: Class
  summary: Represents an XML attribute.
- uid: System.Xml.Linq.XElement
  parent: System.Xml.Linq
  isExternal: false
  href: System.Xml.Linq.XElement.yml
  name: XElement
  fullName: System.Xml.Linq.XElement
  type: Class
  summary: Represents an XML element.
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections.Generic.IEnumerable{System.Xml.Linq.XElement}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: System.Xml.Linq.XElement.yml
  name: IEnumerable<XElement>
  name.vb: IEnumerable(Of XElement)
  fullName: System.Collections.Generic.IEnumerable<System.Xml.Linq.XElement>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XElement)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Xml.Linq.XElement
    name: XElement
    fullName: System.Xml.Linq.XElement
    href: System.Xml.Linq.XElement.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Xml.Linq.XElement
    name: XElement
    fullName: System.Xml.Linq.XElement
    href: System.Xml.Linq.XElement.yml
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Xml.Linq.XAttribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: System.Xml.Linq.XAttribute.yml
  name: IEnumerable<XAttribute>
  name.vb: IEnumerable(Of XAttribute)
  fullName: System.Collections.Generic.IEnumerable<System.Xml.Linq.XAttribute>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Xml.Linq.XAttribute
    name: XAttribute
    fullName: System.Xml.Linq.XAttribute
    href: System.Xml.Linq.XAttribute.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Xml.Linq.XAttribute
    name: XAttribute
    fullName: System.Xml.Linq.XAttribute
    href: System.Xml.Linq.XAttribute.yml
  - name: )
    fullName: )
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  name.vb: IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Xml.Linq.XName
  parent: System.Xml.Linq
  isExternal: false
  href: System.Xml.Linq.XName.yml
  name: XName
  fullName: System.Xml.Linq.XName
  type: Class
  summary: Represents a name of an XML element or attribute. This class cannot be inherited.
- uid: System.Collections.Generic.IEnumerable{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  name.vb: IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Xml.Linq.XNode
  parent: System.Xml.Linq
  isExternal: false
  href: System.Xml.Linq.XNode.yml
  name: XNode
  fullName: System.Xml.Linq.XNode
  type: Class
  summary: >-
    Represents nodes (elements, comments, document type, processing instruction,

    and text nodes) in the XML tree.
- uid: System.Collections.Generic.IEnumerable{System.Xml.Linq.XNode}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: System.Xml.Linq.XNode.yml
  name: IEnumerable<XNode>
  name.vb: IEnumerable(Of XNode)
  fullName: System.Collections.Generic.IEnumerable<System.Xml.Linq.XNode>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Xml.Linq.XNode)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Xml.Linq.XNode
    name: XNode
    fullName: System.Xml.Linq.XNode
    href: System.Xml.Linq.XNode.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Xml.Linq.XNode
    name: XNode
    fullName: System.Xml.Linq.XNode
    href: System.Xml.Linq.XNode.yml
  - name: )
    fullName: )
