items:
- uid: System.Reflection.Metadata.SignatureHeader
  id: SignatureHeader
  parent: System.Reflection.Metadata
  children:
  - System.Reflection.Metadata.SignatureHeader.#ctor(System.Byte)
  - System.Reflection.Metadata.SignatureHeader.Attributes
  - System.Reflection.Metadata.SignatureHeader.CallingConvention
  - System.Reflection.Metadata.SignatureHeader.CallingConventionOrKindMask
  - System.Reflection.Metadata.SignatureHeader.Equals(System.Object)
  - System.Reflection.Metadata.SignatureHeader.Equals(System.Reflection.Metadata.SignatureHeader)
  - System.Reflection.Metadata.SignatureHeader.GetHashCode
  - System.Reflection.Metadata.SignatureHeader.HasExplicitThis
  - System.Reflection.Metadata.SignatureHeader.IsGeneric
  - System.Reflection.Metadata.SignatureHeader.IsInstance
  - System.Reflection.Metadata.SignatureHeader.Kind
  - System.Reflection.Metadata.SignatureHeader.op_Equality(System.Reflection.Metadata.SignatureHeader,System.Reflection.Metadata.SignatureHeader)
  - System.Reflection.Metadata.SignatureHeader.op_Inequality(System.Reflection.Metadata.SignatureHeader,System.Reflection.Metadata.SignatureHeader)
  - System.Reflection.Metadata.SignatureHeader.RawValue
  - System.Reflection.Metadata.SignatureHeader.ToString
  href: System.Reflection.Metadata.SignatureHeader.yml
  name: SignatureHeader
  fullName: System.Reflection.Metadata.SignatureHeader
  type: Struct
  source:
    remote: &o0
      path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 14
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  summary: Represents the signature characteristics specified by the leading byte of signature blobs.
  remarks: >-
    This header byte is present in all method definition, method reference, standalone method, field,

    property, and local variable signatures, but not in type specification signatures.
  syntax:
    content: 'public struct SignatureHeader : IEquatable<SignatureHeader>'
    content.vb: Public Structure SignatureHeader Implements IEquatable(Of SignatureHeader)
  implements:
  - System.IEquatable{System.Reflection.Metadata.SignatureHeader}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: System.Reflection.Metadata.SignatureHeader.CallingConventionOrKindMask
  id: CallingConventionOrKindMask
  parent: System.Reflection.Metadata.SignatureHeader
  href: System.Reflection.Metadata.SignatureHeader.yml
  name: CallingConventionOrKindMask
  fullName: System.Reflection.Metadata.SignatureHeader.CallingConventionOrKindMask
  type: Field
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 17
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public const byte CallingConventionOrKindMask
    content.vb: Public Const CallingConventionOrKindMask As Byte = 15
- uid: System.Reflection.Metadata.SignatureHeader.#ctor(System.Byte)
  id: '#ctor(System.Byte)'
  parent: System.Reflection.Metadata.SignatureHeader
  href: System.Reflection.Metadata.SignatureHeader.yml
  name: SignatureHeader(Byte)
  fullName: System.Reflection.Metadata.SignatureHeader.SignatureHeader(System.Byte)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 20
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public SignatureHeader(byte rawValue)
    content.vb: Public Sub New(rawValue As Byte)
    parameters:
    - id: rawValue
      type: System.Byte
- uid: System.Reflection.Metadata.SignatureHeader.RawValue
  id: RawValue
  parent: System.Reflection.Metadata.SignatureHeader
  href: System.Reflection.Metadata.SignatureHeader.yml
  name: RawValue
  fullName: System.Reflection.Metadata.SignatureHeader.RawValue
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 25
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public byte RawValue { get; }
    content.vb: Public ReadOnly Property RawValue As Byte
    parameters: []
    return:
      type: System.Byte
- uid: System.Reflection.Metadata.SignatureHeader.CallingConvention
  id: CallingConvention
  parent: System.Reflection.Metadata.SignatureHeader
  href: System.Reflection.Metadata.SignatureHeader.yml
  name: CallingConvention
  fullName: System.Reflection.Metadata.SignatureHeader.CallingConvention
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 30
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public SignatureCallingConvention CallingConvention { get; }
    content.vb: Public ReadOnly Property CallingConvention As SignatureCallingConvention
    parameters: []
    return:
      type: System.Reflection.Metadata.SignatureCallingConvention
- uid: System.Reflection.Metadata.SignatureHeader.Kind
  id: Kind
  parent: System.Reflection.Metadata.SignatureHeader
  href: System.Reflection.Metadata.SignatureHeader.yml
  name: Kind
  fullName: System.Reflection.Metadata.SignatureHeader.Kind
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 45
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public SignatureKind Kind { get; }
    content.vb: Public ReadOnly Property Kind As SignatureKind
    parameters: []
    return:
      type: System.Reflection.Metadata.SignatureKind
- uid: System.Reflection.Metadata.SignatureHeader.Attributes
  id: Attributes
  parent: System.Reflection.Metadata.SignatureHeader
  href: System.Reflection.Metadata.SignatureHeader.yml
  name: Attributes
  fullName: System.Reflection.Metadata.SignatureHeader.Attributes
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 60
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public SignatureAttributes Attributes { get; }
    content.vb: Public ReadOnly Property Attributes As SignatureAttributes
    parameters: []
    return:
      type: System.Reflection.Metadata.SignatureAttributes
- uid: System.Reflection.Metadata.SignatureHeader.HasExplicitThis
  id: HasExplicitThis
  parent: System.Reflection.Metadata.SignatureHeader
  href: System.Reflection.Metadata.SignatureHeader.yml
  name: HasExplicitThis
  fullName: System.Reflection.Metadata.SignatureHeader.HasExplicitThis
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 65
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public bool HasExplicitThis { get; }
    content.vb: Public ReadOnly Property HasExplicitThis As Boolean
    parameters: []
    return:
      type: System.Boolean
- uid: System.Reflection.Metadata.SignatureHeader.IsInstance
  id: IsInstance
  parent: System.Reflection.Metadata.SignatureHeader
  href: System.Reflection.Metadata.SignatureHeader.yml
  name: IsInstance
  fullName: System.Reflection.Metadata.SignatureHeader.IsInstance
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 70
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public bool IsInstance { get; }
    content.vb: Public ReadOnly Property IsInstance As Boolean
    parameters: []
    return:
      type: System.Boolean
- uid: System.Reflection.Metadata.SignatureHeader.IsGeneric
  id: IsGeneric
  parent: System.Reflection.Metadata.SignatureHeader
  href: System.Reflection.Metadata.SignatureHeader.yml
  name: IsGeneric
  fullName: System.Reflection.Metadata.SignatureHeader.IsGeneric
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 75
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public bool IsGeneric { get; }
    content.vb: Public ReadOnly Property IsGeneric As Boolean
    parameters: []
    return:
      type: System.Boolean
- uid: System.Reflection.Metadata.SignatureHeader.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Reflection.Metadata.SignatureHeader
  href: System.Reflection.Metadata.SignatureHeader.yml
  name: Equals(Object)
  fullName: System.Reflection.Metadata.SignatureHeader.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 80
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.ValueType.Equals(System.Object)
- uid: System.Reflection.Metadata.SignatureHeader.Equals(System.Reflection.Metadata.SignatureHeader)
  id: Equals(System.Reflection.Metadata.SignatureHeader)
  parent: System.Reflection.Metadata.SignatureHeader
  href: System.Reflection.Metadata.SignatureHeader.yml
  name: Equals(SignatureHeader)
  fullName: System.Reflection.Metadata.SignatureHeader.Equals(System.Reflection.Metadata.SignatureHeader)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 85
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public bool Equals(SignatureHeader other)
    content.vb: Public Function Equals(other As SignatureHeader) As Boolean
    parameters:
    - id: other
      type: System.Reflection.Metadata.SignatureHeader
    return:
      type: System.Boolean
- uid: System.Reflection.Metadata.SignatureHeader.GetHashCode
  id: GetHashCode
  parent: System.Reflection.Metadata.SignatureHeader
  href: System.Reflection.Metadata.SignatureHeader.yml
  name: GetHashCode()
  fullName: System.Reflection.Metadata.SignatureHeader.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 90
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.ValueType.GetHashCode
- uid: System.Reflection.Metadata.SignatureHeader.op_Equality(System.Reflection.Metadata.SignatureHeader,System.Reflection.Metadata.SignatureHeader)
  id: op_Equality(System.Reflection.Metadata.SignatureHeader,System.Reflection.Metadata.SignatureHeader)
  parent: System.Reflection.Metadata.SignatureHeader
  href: System.Reflection.Metadata.SignatureHeader.yml
  name: Equality(SignatureHeader, SignatureHeader)
  fullName: System.Reflection.Metadata.SignatureHeader.Equality(System.Reflection.Metadata.SignatureHeader, System.Reflection.Metadata.SignatureHeader)
  type: Operator
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 95
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public static bool operator ==(SignatureHeader left, SignatureHeader right)
    content.vb: Public Shared Operator =(left As SignatureHeader, right As SignatureHeader) As Boolean
    parameters:
    - id: left
      type: System.Reflection.Metadata.SignatureHeader
    - id: right
      type: System.Reflection.Metadata.SignatureHeader
    return:
      type: System.Boolean
- uid: System.Reflection.Metadata.SignatureHeader.op_Inequality(System.Reflection.Metadata.SignatureHeader,System.Reflection.Metadata.SignatureHeader)
  id: op_Inequality(System.Reflection.Metadata.SignatureHeader,System.Reflection.Metadata.SignatureHeader)
  parent: System.Reflection.Metadata.SignatureHeader
  href: System.Reflection.Metadata.SignatureHeader.yml
  name: Inequality(SignatureHeader, SignatureHeader)
  fullName: System.Reflection.Metadata.SignatureHeader.Inequality(System.Reflection.Metadata.SignatureHeader, System.Reflection.Metadata.SignatureHeader)
  type: Operator
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 100
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public static bool operator !=(SignatureHeader left, SignatureHeader right)
    content.vb: Public Shared Operator <>(left As SignatureHeader, right As SignatureHeader) As Boolean
    parameters:
    - id: left
      type: System.Reflection.Metadata.SignatureHeader
    - id: right
      type: System.Reflection.Metadata.SignatureHeader
    return:
      type: System.Boolean
- uid: System.Reflection.Metadata.SignatureHeader.ToString
  id: ToString
  parent: System.Reflection.Metadata.SignatureHeader
  href: System.Reflection.Metadata.SignatureHeader.yml
  name: ToString()
  fullName: System.Reflection.Metadata.SignatureHeader.ToString()
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/SignatureHeader.cs
    startLine: 105
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.ValueType.ToString
references:
- uid: System.Reflection.Metadata
  isExternal: false
  name: System.Reflection.Metadata
  fullName: System.Reflection.Metadata
  type: Namespace
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  fullName: System.Byte
- uid: System.Reflection.Metadata.SignatureCallingConvention
  parent: System.Reflection.Metadata
  isExternal: false
  href: System.Reflection.Metadata.SignatureCallingConvention.yml
  name: SignatureCallingConvention
  fullName: System.Reflection.Metadata.SignatureCallingConvention
  type: Enum
  summary: >-
    Specifies how arguments in a given signature are passed from the caller to the callee.

    Underlying values correspond to the representation in the leading signature byte

    represented by @'System.Reflection.Metadata.SignatureHeader'.
- uid: System.Reflection.Metadata.SignatureKind
  parent: System.Reflection.Metadata
  isExternal: false
  href: System.Reflection.Metadata.SignatureKind.yml
  name: SignatureKind
  fullName: System.Reflection.Metadata.SignatureKind
  type: Enum
  summary: >-
    Specifies the signature kind. Underlying values correspond to the representation

    in the leading signature byte represented by @'System.Reflection.Metadata.SignatureHeader'.
- uid: System.Reflection.Metadata.SignatureAttributes
  parent: System.Reflection.Metadata
  isExternal: false
  href: System.Reflection.Metadata.SignatureAttributes.yml
  name: SignatureAttributes
  fullName: System.Reflection.Metadata.SignatureAttributes
  type: Enum
  summary: >-
    Specified additional flags that can be applied to method signatures.

    Underlying values correspond to the representation in the leading signature

    byte represented by @'System.Reflection.Metadata.SignatureHeader'.
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  fullName: System.ValueType
- uid: System.Reflection.Metadata.SignatureHeader
  parent: System.Reflection.Metadata
  isExternal: false
  href: System.Reflection.Metadata.SignatureHeader.yml
  name: SignatureHeader
  fullName: System.Reflection.Metadata.SignatureHeader
  type: Struct
  summary: Represents the signature characteristics specified by the leading byte of signature blobs.
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
