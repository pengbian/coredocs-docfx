items:
- uid: System.Reflection.Metadata.Constant
  id: Constant
  parent: System.Reflection.Metadata
  children:
  - System.Reflection.Metadata.Constant.Parent
  - System.Reflection.Metadata.Constant.TypeCode
  - System.Reflection.Metadata.Constant.Value
  href: System.Reflection.Metadata.Constant.yml
  name: Constant
  fullName: System.Reflection.Metadata.Constant
  type: Struct
  source:
    remote: &o0
      path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Constant.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Constant.cs
    startLine: 7
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public struct Constant
    content.vb: Public Structure Constant
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: System.Reflection.Metadata.Constant.TypeCode
  id: TypeCode
  parent: System.Reflection.Metadata.Constant
  href: System.Reflection.Metadata.Constant.yml
  name: TypeCode
  fullName: System.Reflection.Metadata.Constant.TypeCode
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Constant.cs
    startLine: 37
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  summary: The type of the constant value.
  remarks: Corresponds to Type field of Constant table in ECMA-335 Standard.
  syntax:
    content: public ConstantTypeCode TypeCode { get; }
    content.vb: Public ReadOnly Property TypeCode As ConstantTypeCode
    parameters: []
    return:
      type: System.Reflection.Metadata.ConstantTypeCode
- uid: System.Reflection.Metadata.Constant.Value
  id: Value
  parent: System.Reflection.Metadata.Constant
  href: System.Reflection.Metadata.Constant.yml
  name: Value
  fullName: System.Reflection.Metadata.Constant.Value
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Constant.cs
    startLine: 51
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  summary: The constant value.
  remarks: Corresponds to Value field of Constant table in ECMA-335 Standard.
  syntax:
    content: public BlobHandle Value { get; }
    content.vb: Public ReadOnly Property Value As BlobHandle
    parameters: []
    return:
      type: System.Reflection.Metadata.BlobHandle
- uid: System.Reflection.Metadata.Constant.Parent
  id: Parent
  parent: System.Reflection.Metadata.Constant
  href: System.Reflection.Metadata.Constant.yml
  name: Parent
  fullName: System.Reflection.Metadata.Constant.Parent
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Constant.cs
    startLine: 65
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  summary: The parent handle ([System.Reflection.Metadata.ParameterHandle](System.Reflection.Metadata.ParameterHandle.yml), [System.Reflection.Metadata.FieldDefinitionHandle](System.Reflection.Metadata.FieldDefinitionHandle.yml), or [System.Reflection.Metadata.PropertyDefinitionHandle](System.Reflection.Metadata.PropertyDefinitionHandle.yml)).
  remarks: Corresponds to Parent field of Constant table in ECMA-335 Standard.
  syntax:
    content: public EntityHandle Parent { get; }
    content.vb: Public ReadOnly Property Parent As EntityHandle
    parameters: []
    return:
      type: System.Reflection.Metadata.EntityHandle
references:
- uid: System.Reflection.Metadata
  isExternal: false
  name: System.Reflection.Metadata
  fullName: System.Reflection.Metadata
  type: Namespace
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  fullName: System.ValueType
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Reflection.Metadata.ConstantTypeCode
  parent: System.Reflection.Metadata
  isExternal: false
  href: System.Reflection.Metadata.ConstantTypeCode.yml
  name: ConstantTypeCode
  fullName: System.Reflection.Metadata.ConstantTypeCode
  type: Enum
- uid: System.Reflection.Metadata.BlobHandle
  parent: System.Reflection.Metadata
  isExternal: false
  href: System.Reflection.Metadata.BlobHandle.yml
  name: BlobHandle
  fullName: System.Reflection.Metadata.BlobHandle
  type: Struct
- uid: System.Reflection.Metadata.ParameterHandle
  parent: System.Reflection.Metadata
  isExternal: false
  href: System.Reflection.Metadata.ParameterHandle.yml
  name: ParameterHandle
  fullName: System.Reflection.Metadata.ParameterHandle
  type: Struct
- uid: System.Reflection.Metadata.FieldDefinitionHandle
  parent: System.Reflection.Metadata
  isExternal: false
  href: System.Reflection.Metadata.FieldDefinitionHandle.yml
  name: FieldDefinitionHandle
  fullName: System.Reflection.Metadata.FieldDefinitionHandle
  type: Struct
- uid: System.Reflection.Metadata.PropertyDefinitionHandle
  parent: System.Reflection.Metadata
  isExternal: false
  href: System.Reflection.Metadata.PropertyDefinitionHandle.yml
  name: PropertyDefinitionHandle
  fullName: System.Reflection.Metadata.PropertyDefinitionHandle
  type: Struct
- uid: System.Reflection.Metadata.EntityHandle
  parent: System.Reflection.Metadata
  isExternal: false
  href: System.Reflection.Metadata.EntityHandle.yml
  name: EntityHandle
  fullName: System.Reflection.Metadata.EntityHandle
  type: Struct
  summary: Represents a metadata entity (type reference/definition/specification, method definition, custom attribute, etc.).
