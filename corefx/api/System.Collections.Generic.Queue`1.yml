items:
- uid: System.Collections.Generic.Queue`1
  id: Queue`1
  parent: System.Collections.Generic
  children:
  - System.Collections.Generic.Queue`1.#ctor
  - System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Generic.Queue`1.#ctor(System.Int32)
  - System.Collections.Generic.Queue`1.Clear
  - System.Collections.Generic.Queue`1.Contains(`0)
  - System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)
  - System.Collections.Generic.Queue`1.Count
  - System.Collections.Generic.Queue`1.Dequeue
  - System.Collections.Generic.Queue`1.Enqueue(`0)
  - System.Collections.Generic.Queue`1.GetEnumerator
  - System.Collections.Generic.Queue`1.Peek
  - System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  - System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized
  - System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot
  - System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Generic.Queue`1.ToArray
  - System.Collections.Generic.Queue`1.TrimExcess
  href: System.Collections.Generic.Queue`1.yml
  name: Queue<T>
  name.vb: Queue(Of T)
  fullName: System.Collections.Generic.Queue<T>
  fullName.vb: System.Collections.Generic.Queue(Of T)
  type: Class
  source:
    remote: &o0
      path: src/System.Collections/src/System/Collections/Generic/Queue.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 18
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: 'public class Queue<T> : ICollection, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable'
    content.vb: Public Class Queue(Of T) Implements ICollection, IReadOnlyCollection(Of T), IEnumerable(Of T), IEnumerable
    typeParameters:
    - id: T
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.Collections.Generic.IReadOnlyCollection{{T}}
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Collections.Generic.Queue`1.#ctor
  id: '#ctor'
  parent: System.Collections.Generic.Queue`1
  href: System.Collections.Generic.Queue`1.yml
  name: Queue()
  fullName: System.Collections.Generic.Queue<T>.Queue()
  fullName.vb: System.Collections.Generic.Queue(Of T).Queue()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 38
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public Queue()
    content.vb: Public Sub New
- uid: System.Collections.Generic.Queue`1.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Generic.Queue`1
  href: System.Collections.Generic.Queue`1.yml
  name: Queue(Int32)
  fullName: System.Collections.Generic.Queue<T>.Queue(System.Int32)
  fullName.vb: System.Collections.Generic.Queue(Of T).Queue(System.Int32)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 47
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public Queue(int capacity)
    content.vb: Public Sub New(capacity As Integer)
    parameters:
    - id: capacity
      type: System.Int32
- uid: System.Collections.Generic.Queue`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  id: '#ctor(System.Collections.Generic.IEnumerable{`0})'
  parent: System.Collections.Generic.Queue`1
  href: System.Collections.Generic.Queue`1.yml
  name: Queue(IEnumerable<T>)
  name.vb: Queue(IEnumerable(Of T))
  fullName: System.Collections.Generic.Queue<T>.Queue(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: System.Collections.Generic.Queue(Of T).Queue(System.Collections.Generic.IEnumerable(Of T))
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 58
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public Queue(IEnumerable<T> collection)
    content.vb: Public Sub New(collection As IEnumerable(Of T))
    parameters:
    - id: collection
      type: System.Collections.Generic.IEnumerable{{T}}
- uid: System.Collections.Generic.Queue`1.Count
  id: Count
  parent: System.Collections.Generic.Queue`1
  href: System.Collections.Generic.Queue`1.yml
  name: Count
  fullName: System.Collections.Generic.Queue<T>.Count
  fullName.vb: System.Collections.Generic.Queue(Of T).Count
  type: Property
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 76
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
- uid: System.Collections.Generic.Queue`1.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  parent: System.Collections.Generic.Queue`1
  href: System.Collections.Generic.Queue`1.yml
  name: ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.Generic.Queue<T>.System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.Generic.Queue(Of T).System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 82
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: bool ICollection.IsSynchronized { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized
    parameters: []
    return:
      type: System.Boolean
- uid: System.Collections.Generic.Queue`1.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  parent: System.Collections.Generic.Queue`1
  href: System.Collections.Generic.Queue`1.yml
  name: ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
  fullName: System.Collections.Generic.Queue<T>.System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.Generic.Queue(Of T).System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 87
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: object ICollection.SyncRoot { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot
    parameters: []
    return:
      type: System.Object
- uid: System.Collections.Generic.Queue`1.Clear
  id: Clear
  parent: System.Collections.Generic.Queue`1
  href: System.Collections.Generic.Queue`1.yml
  name: Clear()
  fullName: System.Collections.Generic.Queue<T>.Clear()
  fullName.vb: System.Collections.Generic.Queue(Of T).Clear()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 101
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
- uid: System.Collections.Generic.Queue`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: System.Collections.Generic.Queue`1
  href: System.Collections.Generic.Queue`1.yml
  name: CopyTo(T[], Int32)
  name.vb: CopyTo(T(), Int32)
  fullName: System.Collections.Generic.Queue<T>.CopyTo(T[], System.Int32)
  fullName.vb: System.Collections.Generic.Queue(Of T).CopyTo(T(), System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 121
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public void CopyTo(T[] array, int arrayIndex)
    content.vb: Public Sub CopyTo(array As T(), arrayIndex As Integer)
    parameters:
    - id: array
      type: '{T}[]'
    - id: arrayIndex
      type: System.Int32
- uid: System.Collections.Generic.Queue`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.Generic.Queue`1
  href: System.Collections.Generic.Queue`1.yml
  name: ICollection.CopyTo(Array, Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.Generic.Queue<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  fullName.vb: System.Collections.Generic.Queue(Of T).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 151
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: void ICollection.CopyTo(Array array, int index)
    content.vb: Sub System.Collections.ICollection.CopyTo(array As Array, index As Integer) Implements ICollection.CopyTo
    parameters:
    - id: array
      type: System.Array
    - id: index
      type: System.Int32
- uid: System.Collections.Generic.Queue`1.Enqueue(`0)
  id: Enqueue(`0)
  parent: System.Collections.Generic.Queue`1
  href: System.Collections.Generic.Queue`1.yml
  name: Enqueue(T)
  fullName: System.Collections.Generic.Queue<T>.Enqueue(T)
  fullName.vb: System.Collections.Generic.Queue(Of T).Enqueue(T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 202
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public void Enqueue(T item)
    content.vb: Public Sub Enqueue(item As T)
    parameters:
    - id: item
      type: '{T}'
- uid: System.Collections.Generic.Queue`1.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Generic.Queue`1
  href: System.Collections.Generic.Queue`1.yml
  name: GetEnumerator()
  fullName: System.Collections.Generic.Queue<T>.GetEnumerator()
  fullName.vb: System.Collections.Generic.Queue(Of T).GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 224
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public Queue<T>.Enumerator GetEnumerator()
    content.vb: Public Function GetEnumerator As Queue(Of T).Enumerator
    return:
      type: System.Collections.Generic.Queue`1.Enumerator
- uid: System.Collections.Generic.Queue`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{T}#GetEnumerator
  parent: System.Collections.Generic.Queue`1
  href: System.Collections.Generic.Queue`1.yml
  name: IEnumerable<T>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.Queue<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName.vb: System.Collections.Generic.Queue(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 231
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: IEnumerator<T> IEnumerable<T>.GetEnumerator()
    content.vb: Function System.Collections.Generic.IEnumerable<T>.GetEnumerator As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator
    return:
      type: System.Collections.Generic.IEnumerator{{T}}
- uid: System.Collections.Generic.Queue`1.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.Generic.Queue`1
  href: System.Collections.Generic.Queue`1.yml
  name: IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.Queue<T>.System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.Generic.Queue(Of T).System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 236
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
- uid: System.Collections.Generic.Queue`1.Dequeue
  id: Dequeue
  parent: System.Collections.Generic.Queue`1
  href: System.Collections.Generic.Queue`1.yml
  name: Dequeue()
  fullName: System.Collections.Generic.Queue<T>.Dequeue()
  fullName.vb: System.Collections.Generic.Queue(Of T).Dequeue()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 244
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public T Dequeue()
    content.vb: Public Function Dequeue As T
    return:
      type: '{T}'
- uid: System.Collections.Generic.Queue`1.Peek
  id: Peek
  parent: System.Collections.Generic.Queue`1
  href: System.Collections.Generic.Queue`1.yml
  name: Peek()
  fullName: System.Collections.Generic.Queue<T>.Peek()
  fullName.vb: System.Collections.Generic.Queue(Of T).Peek()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 261
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public T Peek()
    content.vb: Public Function Peek As T
    return:
      type: '{T}'
- uid: System.Collections.Generic.Queue`1.Contains(`0)
  id: Contains(`0)
  parent: System.Collections.Generic.Queue`1
  href: System.Collections.Generic.Queue`1.yml
  name: Contains(T)
  fullName: System.Collections.Generic.Queue<T>.Contains(T)
  fullName.vb: System.Collections.Generic.Queue(Of T).Contains(T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 274
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public bool Contains(T item)
    content.vb: Public Function Contains(item As T) As Boolean
    parameters:
    - id: item
      type: '{T}'
    return:
      type: System.Boolean
- uid: System.Collections.Generic.Queue`1.ToArray
  id: ToArray
  parent: System.Collections.Generic.Queue`1
  href: System.Collections.Generic.Queue`1.yml
  name: ToArray()
  fullName: System.Collections.Generic.Queue<T>.ToArray()
  fullName.vb: System.Collections.Generic.Queue(Of T).ToArray()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 307
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public T[] ToArray()
    content.vb: Public Function ToArray As T()
    return:
      type: '{T}[]'
- uid: System.Collections.Generic.Queue`1.TrimExcess
  id: TrimExcess
  parent: System.Collections.Generic.Queue`1
  href: System.Collections.Generic.Queue`1.yml
  name: TrimExcess()
  fullName: System.Collections.Generic.Queue<T>.TrimExcess()
  fullName.vb: System.Collections.Generic.Queue(Of T).TrimExcess()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/Queue.cs
    startLine: 351
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public void TrimExcess()
    content.vb: Public Sub TrimExcess
references:
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IEnumerable{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  name.vb: IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  name.vb: IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: '{T}[]'
  isExternal: false
  name: T[]
  name.vb: T()
  fullName: T[]
  fullName.vb: T()
  spec.csharp:
  - name: T
    fullName: T
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - name: T
    fullName: T
  - name: ()
    fullName: ()
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  fullName: System.Array
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.Collections.Generic.Queue`1.Enumerator
  parent: System.Collections.Generic
  isExternal: false
  href: System.Collections.Generic.Queue`1.Enumerator.yml
  name: Queue.Enumerator<>
  name.vb: Queue.Enumerator(Of )
  fullName: System.Collections.Generic.Queue.Enumerator<>
  fullName.vb: System.Collections.Generic.Queue.Enumerator(Of )
  type: Struct
  spec.csharp:
  - uid: System.Collections.Generic.Queue`1.Enumerator
    name: Queue.Enumerator
    fullName: System.Collections.Generic.Queue.Enumerator
    href: System.Collections.Generic.Queue`1.Enumerator.yml
  - name: <
    fullName: <
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Queue`1.Enumerator
    name: Queue.Enumerator
    fullName: System.Collections.Generic.Queue.Enumerator
    href: System.Collections.Generic.Queue`1.Enumerator.yml
  - name: '(Of '
    fullName: '(Of '
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<T>
  name.vb: IEnumerator(Of T)
  fullName: System.Collections.Generic.IEnumerator<T>
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<T>
  name.vb: IEnumerator(Of T)
  fullName: System.Collections.Generic.IEnumerator<T>
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
