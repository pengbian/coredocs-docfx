items:
- uid: System.Reflection.Metadata.ExportedTypeHandleCollection
  id: ExportedTypeHandleCollection
  parent: System.Reflection.Metadata
  children:
  - System.Reflection.Metadata.ExportedTypeHandleCollection.Count
  - System.Reflection.Metadata.ExportedTypeHandleCollection.GetEnumerator
  - System.Reflection.Metadata.ExportedTypeHandleCollection.System#Collections#Generic#IEnumerable{System#Reflection#Metadata#ExportedTypeHandle}#GetEnumerator
  - System.Reflection.Metadata.ExportedTypeHandleCollection.System#Collections#IEnumerable#GetEnumerator
  href: System.Reflection.Metadata.ExportedTypeHandleCollection.yml
  name: ExportedTypeHandleCollection
  fullName: System.Reflection.Metadata.ExportedTypeHandleCollection
  type: Struct
  source:
    remote: &o0
      path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/HandleCollections.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/HandleCollections.cs
    startLine: 1430
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  summary: Represents a collection of [System.Reflection.Metadata.TypeReferenceHandle](System.Reflection.Metadata.TypeReferenceHandle.yml).
  syntax:
    content: 'public struct ExportedTypeHandleCollection : IReadOnlyCollection<ExportedTypeHandle>, IEnumerable<ExportedTypeHandle>, IEnumerable'
    content.vb: Public Structure ExportedTypeHandleCollection Implements IReadOnlyCollection(Of ExportedTypeHandle), IEnumerable(Of ExportedTypeHandle), IEnumerable
  implements:
  - System.Collections.Generic.IReadOnlyCollection{System.Reflection.Metadata.ExportedTypeHandle}
  - System.Collections.Generic.IEnumerable{System.Reflection.Metadata.ExportedTypeHandle}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: System.Reflection.Metadata.ExportedTypeHandleCollection.Count
  id: Count
  parent: System.Reflection.Metadata.ExportedTypeHandleCollection
  href: System.Reflection.Metadata.ExportedTypeHandleCollection.yml
  name: Count
  fullName: System.Reflection.Metadata.ExportedTypeHandleCollection.Count
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/HandleCollections.cs
    startLine: 1440
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
- uid: System.Reflection.Metadata.ExportedTypeHandleCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Reflection.Metadata.ExportedTypeHandleCollection
  href: System.Reflection.Metadata.ExportedTypeHandleCollection.yml
  name: GetEnumerator()
  fullName: System.Reflection.Metadata.ExportedTypeHandleCollection.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/HandleCollections.cs
    startLine: 1445
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public ExportedTypeHandleCollection.Enumerator GetEnumerator()
    content.vb: Public Function GetEnumerator As ExportedTypeHandleCollection.Enumerator
    return:
      type: System.Reflection.Metadata.ExportedTypeHandleCollection.Enumerator
- uid: System.Reflection.Metadata.ExportedTypeHandleCollection.System#Collections#Generic#IEnumerable{System#Reflection#Metadata#ExportedTypeHandle}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{System#Reflection#Metadata#ExportedTypeHandle}#GetEnumerator
  parent: System.Reflection.Metadata.ExportedTypeHandleCollection
  href: System.Reflection.Metadata.ExportedTypeHandleCollection.yml
  name: IEnumerable<ExportedTypeHandle>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<System.Reflection.Metadata.ExportedTypeHandle>.GetEnumerator()
  fullName: System.Reflection.Metadata.ExportedTypeHandleCollection.System.Collections.Generic.IEnumerable<System.Reflection.Metadata.ExportedTypeHandle>.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/HandleCollections.cs
    startLine: 1450
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: IEnumerator<ExportedTypeHandle> IEnumerable<ExportedTypeHandle>.GetEnumerator()
    content.vb: Function System.Collections.Generic.IEnumerable<System.Reflection.Metadata.ExportedTypeHandle>.GetEnumerator As IEnumerator(Of ExportedTypeHandle) Implements IEnumerable(Of ExportedTypeHandle).GetEnumerator
    return:
      type: System.Collections.Generic.IEnumerator{System.Reflection.Metadata.ExportedTypeHandle}
- uid: System.Reflection.Metadata.ExportedTypeHandleCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  parent: System.Reflection.Metadata.ExportedTypeHandleCollection
  href: System.Reflection.Metadata.ExportedTypeHandleCollection.yml
  name: IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Reflection.Metadata.ExportedTypeHandleCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/HandleCollections.cs
    startLine: 1455
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
references:
- uid: System.Reflection.Metadata.TypeReferenceHandle
  parent: System.Reflection.Metadata
  isExternal: false
  href: System.Reflection.Metadata.TypeReferenceHandle.yml
  name: TypeReferenceHandle
  fullName: System.Reflection.Metadata.TypeReferenceHandle
  type: Struct
- uid: System.Reflection.Metadata
  isExternal: false
  name: System.Reflection.Metadata
  fullName: System.Reflection.Metadata
  type: Namespace
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  fullName: System.ValueType
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Reflection.Metadata.ExportedTypeHandleCollection.Enumerator
  parent: System.Reflection.Metadata
  isExternal: false
  href: System.Reflection.Metadata.ExportedTypeHandleCollection.Enumerator.yml
  name: ExportedTypeHandleCollection.Enumerator
  fullName: System.Reflection.Metadata.ExportedTypeHandleCollection.Enumerator
  type: Struct
- uid: System.Collections.Generic.IEnumerator{System.Reflection.Metadata.ExportedTypeHandle}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: System.Reflection.Metadata.ExportedTypeHandle.yml
  name: IEnumerator<ExportedTypeHandle>
  name.vb: IEnumerator(Of ExportedTypeHandle)
  fullName: System.Collections.Generic.IEnumerator<System.Reflection.Metadata.ExportedTypeHandle>
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Reflection.Metadata.ExportedTypeHandle)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Reflection.Metadata.ExportedTypeHandle
    name: ExportedTypeHandle
    fullName: System.Reflection.Metadata.ExportedTypeHandle
    href: System.Reflection.Metadata.ExportedTypeHandle.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.Metadata.ExportedTypeHandle
    name: ExportedTypeHandle
    fullName: System.Reflection.Metadata.ExportedTypeHandle
    href: System.Reflection.Metadata.ExportedTypeHandle.yml
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<T>
  name.vb: IEnumerator(Of T)
  fullName: System.Collections.Generic.IEnumerator<T>
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
