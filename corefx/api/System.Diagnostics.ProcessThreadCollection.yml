items:
- uid: System.Diagnostics.ProcessThreadCollection
  id: ProcessThreadCollection
  parent: System.Diagnostics
  children:
  - System.Diagnostics.ProcessThreadCollection.#ctor
  - System.Diagnostics.ProcessThreadCollection.#ctor(System.Diagnostics.ProcessThread[])
  - System.Diagnostics.ProcessThreadCollection.Add(System.Diagnostics.ProcessThread)
  - System.Diagnostics.ProcessThreadCollection.Contains(System.Diagnostics.ProcessThread)
  - System.Diagnostics.ProcessThreadCollection.CopyTo(System.Diagnostics.ProcessThread[],System.Int32)
  - System.Diagnostics.ProcessThreadCollection.Count
  - System.Diagnostics.ProcessThreadCollection.GetEnumerator
  - System.Diagnostics.ProcessThreadCollection.IndexOf(System.Diagnostics.ProcessThread)
  - System.Diagnostics.ProcessThreadCollection.InnerList
  - System.Diagnostics.ProcessThreadCollection.Insert(System.Int32,System.Diagnostics.ProcessThread)
  - System.Diagnostics.ProcessThreadCollection.Item(System.Int32)
  - System.Diagnostics.ProcessThreadCollection.Remove(System.Diagnostics.ProcessThread)
  - System.Diagnostics.ProcessThreadCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Diagnostics.ProcessThreadCollection.System#Collections#ICollection#IsSynchronized
  - System.Diagnostics.ProcessThreadCollection.System#Collections#ICollection#SyncRoot
  href: System.Diagnostics.ProcessThreadCollection.yml
  name: ProcessThreadCollection
  fullName: System.Diagnostics.ProcessThreadCollection
  type: Class
  source:
    remote: &o0
      path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 11
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: 'public class ProcessThreadCollection : ICollection, IEnumerable'
    content.vb: Public Class ProcessThreadCollection Implements ICollection, IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Diagnostics.ProcessThreadCollection.#ctor
  id: '#ctor'
  parent: System.Diagnostics.ProcessThreadCollection
  href: System.Diagnostics.ProcessThreadCollection.yml
  name: ProcessThreadCollection()
  fullName: System.Diagnostics.ProcessThreadCollection.ProcessThreadCollection()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 18
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: protected ProcessThreadCollection()
    content.vb: Protected Sub New
- uid: System.Diagnostics.ProcessThreadCollection.#ctor(System.Diagnostics.ProcessThread[])
  id: '#ctor(System.Diagnostics.ProcessThread[])'
  parent: System.Diagnostics.ProcessThreadCollection
  href: System.Diagnostics.ProcessThreadCollection.yml
  name: ProcessThreadCollection(ProcessThread[])
  name.vb: ProcessThreadCollection(ProcessThread())
  fullName: System.Diagnostics.ProcessThreadCollection.ProcessThreadCollection(System.Diagnostics.ProcessThread[])
  fullName.vb: System.Diagnostics.ProcessThreadCollection.ProcessThreadCollection(System.Diagnostics.ProcessThread())
  type: Constructor
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 25
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public ProcessThreadCollection(ProcessThread[] processThreads)
    content.vb: Public Sub New(processThreads As ProcessThread())
    parameters:
    - id: processThreads
      type: System.Diagnostics.ProcessThread[]
- uid: System.Diagnostics.ProcessThreadCollection.InnerList
  id: InnerList
  parent: System.Diagnostics.ProcessThreadCollection
  href: System.Diagnostics.ProcessThreadCollection.yml
  name: InnerList
  fullName: System.Diagnostics.ProcessThreadCollection.InnerList
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 30
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: protected List<ProcessThread> InnerList { get; }
    content.vb: Protected ReadOnly Property InnerList As List(Of ProcessThread)
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Diagnostics.ProcessThread}
- uid: System.Diagnostics.ProcessThreadCollection.Count
  id: Count
  parent: System.Diagnostics.ProcessThreadCollection
  href: System.Diagnostics.ProcessThreadCollection.yml
  name: Count
  fullName: System.Diagnostics.ProcessThreadCollection.Count
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 40
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public virtual int Count { get; }
    content.vb: Public Overridable ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
- uid: System.Diagnostics.ProcessThreadCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  parent: System.Diagnostics.ProcessThreadCollection
  href: System.Diagnostics.ProcessThreadCollection.yml
  name: ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
  fullName: System.Diagnostics.ProcessThreadCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 45
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: bool ICollection.IsSynchronized { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized
    parameters: []
    return:
      type: System.Boolean
- uid: System.Diagnostics.ProcessThreadCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  parent: System.Diagnostics.ProcessThreadCollection
  href: System.Diagnostics.ProcessThreadCollection.yml
  name: ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
  fullName: System.Diagnostics.ProcessThreadCollection.System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 50
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: object ICollection.SyncRoot { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot
    parameters: []
    return:
      type: System.Object
- uid: System.Diagnostics.ProcessThreadCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Diagnostics.ProcessThreadCollection
  href: System.Diagnostics.ProcessThreadCollection.yml
  name: ICollection.CopyTo(Array, Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  fullName: System.Diagnostics.ProcessThreadCollection.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 55
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: void ICollection.CopyTo(Array array, int index)
    content.vb: Sub System.Collections.ICollection.CopyTo(array As Array, index As Integer) Implements ICollection.CopyTo
    parameters:
    - id: array
      type: System.Array
    - id: index
      type: System.Int32
- uid: System.Diagnostics.ProcessThreadCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Diagnostics.ProcessThreadCollection
  href: System.Diagnostics.ProcessThreadCollection.yml
  name: GetEnumerator()
  fullName: System.Diagnostics.ProcessThreadCollection.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 60
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public virtual IEnumerator GetEnumerator()
    content.vb: Public Overridable Function GetEnumerator As IEnumerator
    return:
      type: System.Collections.IEnumerator
- uid: System.Diagnostics.ProcessThreadCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Diagnostics.ProcessThreadCollection
  href: System.Diagnostics.ProcessThreadCollection.yml
  name: Item[Int32]
  name.vb: Item(Int32)
  fullName: System.Diagnostics.ProcessThreadCollection.Item[System.Int32]
  fullName.vb: System.Diagnostics.ProcessThreadCollection.Item(System.Int32)
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 68
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public ProcessThread this[int index] { get; }
    content.vb: Public ReadOnly Property Item(index As Integer) As ProcessThread
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Diagnostics.ProcessThread
- uid: System.Diagnostics.ProcessThreadCollection.Add(System.Diagnostics.ProcessThread)
  id: Add(System.Diagnostics.ProcessThread)
  parent: System.Diagnostics.ProcessThreadCollection
  href: System.Diagnostics.ProcessThreadCollection.yml
  name: Add(ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.Add(System.Diagnostics.ProcessThread)
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 76
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public int Add(ProcessThread thread)
    content.vb: Public Function Add(thread As ProcessThread) As Integer
    parameters:
    - id: thread
      type: System.Diagnostics.ProcessThread
    return:
      type: System.Int32
- uid: System.Diagnostics.ProcessThreadCollection.Insert(System.Int32,System.Diagnostics.ProcessThread)
  id: Insert(System.Int32,System.Diagnostics.ProcessThread)
  parent: System.Diagnostics.ProcessThreadCollection
  href: System.Diagnostics.ProcessThreadCollection.yml
  name: Insert(Int32, ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.Insert(System.Int32, System.Diagnostics.ProcessThread)
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 84
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public void Insert(int index, ProcessThread thread)
    content.vb: Public Sub Insert(index As Integer, thread As ProcessThread)
    parameters:
    - id: index
      type: System.Int32
    - id: thread
      type: System.Diagnostics.ProcessThread
- uid: System.Diagnostics.ProcessThreadCollection.IndexOf(System.Diagnostics.ProcessThread)
  id: IndexOf(System.Diagnostics.ProcessThread)
  parent: System.Diagnostics.ProcessThreadCollection
  href: System.Diagnostics.ProcessThreadCollection.yml
  name: IndexOf(ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.IndexOf(System.Diagnostics.ProcessThread)
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 92
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public int IndexOf(ProcessThread thread)
    content.vb: Public Function IndexOf(thread As ProcessThread) As Integer
    parameters:
    - id: thread
      type: System.Diagnostics.ProcessThread
    return:
      type: System.Int32
- uid: System.Diagnostics.ProcessThreadCollection.Contains(System.Diagnostics.ProcessThread)
  id: Contains(System.Diagnostics.ProcessThread)
  parent: System.Diagnostics.ProcessThreadCollection
  href: System.Diagnostics.ProcessThreadCollection.yml
  name: Contains(ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.Contains(System.Diagnostics.ProcessThread)
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 100
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public bool Contains(ProcessThread thread)
    content.vb: Public Function Contains(thread As ProcessThread) As Boolean
    parameters:
    - id: thread
      type: System.Diagnostics.ProcessThread
    return:
      type: System.Boolean
- uid: System.Diagnostics.ProcessThreadCollection.Remove(System.Diagnostics.ProcessThread)
  id: Remove(System.Diagnostics.ProcessThread)
  parent: System.Diagnostics.ProcessThreadCollection
  href: System.Diagnostics.ProcessThreadCollection.yml
  name: Remove(ProcessThread)
  fullName: System.Diagnostics.ProcessThreadCollection.Remove(System.Diagnostics.ProcessThread)
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 108
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public void Remove(ProcessThread thread)
    content.vb: Public Sub Remove(thread As ProcessThread)
    parameters:
    - id: thread
      type: System.Diagnostics.ProcessThread
- uid: System.Diagnostics.ProcessThreadCollection.CopyTo(System.Diagnostics.ProcessThread[],System.Int32)
  id: CopyTo(System.Diagnostics.ProcessThread[],System.Int32)
  parent: System.Diagnostics.ProcessThreadCollection
  href: System.Diagnostics.ProcessThreadCollection.yml
  name: CopyTo(ProcessThread[], Int32)
  name.vb: CopyTo(ProcessThread(), Int32)
  fullName: System.Diagnostics.ProcessThreadCollection.CopyTo(System.Diagnostics.ProcessThread[], System.Int32)
  fullName.vb: System.Diagnostics.ProcessThreadCollection.CopyTo(System.Diagnostics.ProcessThread(), System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessThreadCollection.cs
    startLine: 116
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public void CopyTo(ProcessThread[] array, int index)
    content.vb: Public Sub CopyTo(array As ProcessThread(), index As Integer)
    parameters:
    - id: array
      type: System.Diagnostics.ProcessThread[]
    - id: index
      type: System.Int32
references:
- uid: System.Diagnostics
  isExternal: false
  name: System.Diagnostics
  fullName: System.Diagnostics
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Diagnostics.ProcessThread[]
  isExternal: false
  href: System.Diagnostics.ProcessThread.yml
  name: ProcessThread[]
  name.vb: ProcessThread()
  fullName: System.Diagnostics.ProcessThread[]
  fullName.vb: System.Diagnostics.ProcessThread()
  spec.csharp:
  - uid: System.Diagnostics.ProcessThread
    name: ProcessThread
    fullName: System.Diagnostics.ProcessThread
    href: System.Diagnostics.ProcessThread.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Diagnostics.ProcessThread
    name: ProcessThread
    fullName: System.Diagnostics.ProcessThread
    href: System.Diagnostics.ProcessThread.yml
  - name: ()
    fullName: ()
- uid: System.Collections.Generic.List{System.Diagnostics.ProcessThread}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: System.Diagnostics.ProcessThread.yml
  name: List<ProcessThread>
  name.vb: List(Of ProcessThread)
  fullName: System.Collections.Generic.List<System.Diagnostics.ProcessThread>
  fullName.vb: System.Collections.Generic.List(Of System.Diagnostics.ProcessThread)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Diagnostics.ProcessThread
    name: ProcessThread
    fullName: System.Diagnostics.ProcessThread
    href: System.Diagnostics.ProcessThread.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Diagnostics.ProcessThread
    name: ProcessThread
    fullName: System.Diagnostics.ProcessThread
    href: System.Diagnostics.ProcessThread.yml
  - name: )
    fullName: )
- uid: System.Collections.Generic.List`1
  parent: System.Collections.Generic
  isExternal: true
  name: List<T>
  name.vb: List(Of T)
  fullName: System.Collections.Generic.List<T>
  fullName.vb: System.Collections.Generic.List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  fullName: System.Array
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Diagnostics.ProcessThread
  isExternal: false
  href: System.Diagnostics.ProcessThread.yml
  name: ProcessThread
  fullName: System.Diagnostics.ProcessThread
  type: Class
