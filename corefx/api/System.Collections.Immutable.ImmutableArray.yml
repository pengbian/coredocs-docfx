items:
- uid: System.Collections.Immutable.ImmutableArray
  id: ImmutableArray
  parent: System.Collections.Immutable
  children:
  - System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0)
  - System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0,System.Collections.Generic.IComparer{``0})
  - System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0)
  - System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})
  - System.Collections.Immutable.ImmutableArray.Create``1
  - System.Collections.Immutable.ImmutableArray.Create``1(``0)
  - System.Collections.Immutable.ImmutableArray.Create``1(``0,``0)
  - System.Collections.Immutable.ImmutableArray.Create``1(``0,``0,``0)
  - System.Collections.Immutable.ImmutableArray.Create``1(``0,``0,``0,``0)
  - System.Collections.Immutable.ImmutableArray.Create``1(``0[])
  - System.Collections.Immutable.ImmutableArray.Create``1(``0[],System.Int32,System.Int32)
  - System.Collections.Immutable.ImmutableArray.Create``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32)
  - System.Collections.Immutable.ImmutableArray.CreateBuilder``1
  - System.Collections.Immutable.ImmutableArray.CreateBuilder``1(System.Int32)
  - System.Collections.Immutable.ImmutableArray.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  - System.Collections.Immutable.ImmutableArray.CreateRange``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})
  - System.Collections.Immutable.ImmutableArray.CreateRange``2(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,System.Func{``0,``1})
  - System.Collections.Immutable.ImmutableArray.CreateRange``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1,``2},``1)
  - System.Collections.Immutable.ImmutableArray.CreateRange``3(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,System.Func{``0,``1,``2},``1)
  - System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Collections.Immutable.ImmutableArray.yml
  name: ImmutableArray
  fullName: System.Collections.Immutable.ImmutableArray
  type: Class
  source:
    remote: &o0
      path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 14
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: A set of initialization methods for instances of [System.Collections.Immutable.ImmutableArray`1](System.Collections.Immutable.ImmutableArray`1.yml).
  syntax:
    content: public class ImmutableArray
    content.vb: Public Class ImmutableArray
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Collections.Immutable.ImmutableArray.Create``1
  id: Create``1
  parent: System.Collections.Immutable.ImmutableArray
  href: System.Collections.Immutable.ImmutableArray.yml
  name: Create<T>()
  name.vb: Create(Of T)()
  fullName: System.Collections.Immutable.ImmutableArray.Create<T>()
  fullName.vb: System.Collections.Immutable.ImmutableArray.Create(Of T)()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 26
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates an empty [System.Collections.Immutable.ImmutableArray`1](System.Collections.Immutable.ImmutableArray`1.yml).
  syntax:
    content: public static ImmutableArray<T> Create<T>()
    content.vb: Public Shared Function Create(Of T) As ImmutableArray(Of T)
    typeParameters:
    - id: T
      description: The type of element stored in the array.
    return:
      type: System.Collections.Immutable.ImmutableArray{{T}}
      description: An empty array.
- uid: System.Collections.Immutable.ImmutableArray.Create``1(``0)
  id: Create``1(``0)
  parent: System.Collections.Immutable.ImmutableArray
  href: System.Collections.Immutable.ImmutableArray.yml
  name: Create<T>(T)
  name.vb: Create(Of T)(T)
  fullName: System.Collections.Immutable.ImmutableArray.Create<T>(T)
  fullName.vb: System.Collections.Immutable.ImmutableArray.Create(Of T)(T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 38
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates an [System.Collections.Immutable.ImmutableArray`1](System.Collections.Immutable.ImmutableArray`1.yml) with the specified element as its only member.
  syntax:
    content: public static ImmutableArray<T> Create<T>(T item)
    content.vb: Public Shared Function Create(Of T)(item As T) As ImmutableArray(Of T)
    parameters:
    - id: item
      type: '{T}'
      description: The element to store in the array.
    typeParameters:
    - id: T
      description: The type of element stored in the array.
    return:
      type: System.Collections.Immutable.ImmutableArray{{T}}
      description: A 1-element array.
- uid: System.Collections.Immutable.ImmutableArray.Create``1(``0,``0)
  id: Create``1(``0,``0)
  parent: System.Collections.Immutable.ImmutableArray
  href: System.Collections.Immutable.ImmutableArray.yml
  name: Create<T>(T, T)
  name.vb: Create(Of T)(T, T)
  fullName: System.Collections.Immutable.ImmutableArray.Create<T>(T, T)
  fullName.vb: System.Collections.Immutable.ImmutableArray.Create(Of T)(T, T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 52
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates an [System.Collections.Immutable.ImmutableArray`1](System.Collections.Immutable.ImmutableArray`1.yml) with the specified elements.
  syntax:
    content: public static ImmutableArray<T> Create<T>(T item1, T item2)
    content.vb: Public Shared Function Create(Of T)(item1 As T, item2 As T) As ImmutableArray(Of T)
    parameters:
    - id: item1
      type: '{T}'
      description: The first element to store in the array.
    - id: item2
      type: '{T}'
      description: The second element to store in the array.
    typeParameters:
    - id: T
      description: The type of element stored in the array.
    return:
      type: System.Collections.Immutable.ImmutableArray{{T}}
      description: A 2-element array.
- uid: System.Collections.Immutable.ImmutableArray.Create``1(``0,``0,``0)
  id: Create``1(``0,``0,``0)
  parent: System.Collections.Immutable.ImmutableArray
  href: System.Collections.Immutable.ImmutableArray.yml
  name: Create<T>(T, T, T)
  name.vb: Create(Of T)(T, T, T)
  fullName: System.Collections.Immutable.ImmutableArray.Create<T>(T, T, T)
  fullName.vb: System.Collections.Immutable.ImmutableArray.Create(Of T)(T, T, T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 67
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates an [System.Collections.Immutable.ImmutableArray`1](System.Collections.Immutable.ImmutableArray`1.yml) with the specified elements.
  syntax:
    content: public static ImmutableArray<T> Create<T>(T item1, T item2, T item3)
    content.vb: Public Shared Function Create(Of T)(item1 As T, item2 As T, item3 As T) As ImmutableArray(Of T)
    parameters:
    - id: item1
      type: '{T}'
      description: The first element to store in the array.
    - id: item2
      type: '{T}'
      description: The second element to store in the array.
    - id: item3
      type: '{T}'
      description: The third element to store in the array.
    typeParameters:
    - id: T
      description: The type of element stored in the array.
    return:
      type: System.Collections.Immutable.ImmutableArray{{T}}
      description: A 3-element array.
- uid: System.Collections.Immutable.ImmutableArray.Create``1(``0,``0,``0,``0)
  id: Create``1(``0,``0,``0,``0)
  parent: System.Collections.Immutable.ImmutableArray
  href: System.Collections.Immutable.ImmutableArray.yml
  name: Create<T>(T, T, T, T)
  name.vb: Create(Of T)(T, T, T, T)
  fullName: System.Collections.Immutable.ImmutableArray.Create<T>(T, T, T, T)
  fullName.vb: System.Collections.Immutable.ImmutableArray.Create(Of T)(T, T, T, T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 83
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates an [System.Collections.Immutable.ImmutableArray`1](System.Collections.Immutable.ImmutableArray`1.yml) with the specified elements.
  syntax:
    content: public static ImmutableArray<T> Create<T>(T item1, T item2, T item3, T item4)
    content.vb: Public Shared Function Create(Of T)(item1 As T, item2 As T, item3 As T, item4 As T) As ImmutableArray(Of T)
    parameters:
    - id: item1
      type: '{T}'
      description: The first element to store in the array.
    - id: item2
      type: '{T}'
      description: The second element to store in the array.
    - id: item3
      type: '{T}'
      description: The third element to store in the array.
    - id: item4
      type: '{T}'
      description: The fourth element to store in the array.
    typeParameters:
    - id: T
      description: The type of element stored in the array.
    return:
      type: System.Collections.Immutable.ImmutableArray{{T}}
      description: A 4-element array.
- uid: System.Collections.Immutable.ImmutableArray.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  id: CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableArray
  href: System.Collections.Immutable.ImmutableArray.yml
  name: CreateRange<T>(IEnumerable<T>)
  name.vb: CreateRange(Of T)(IEnumerable(Of T))
  fullName: System.Collections.Immutable.ImmutableArray.CreateRange<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: System.Collections.Immutable.ImmutableArray.CreateRange(Of T)(System.Collections.Generic.IEnumerable(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 96
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates an [System.Collections.Immutable.ImmutableArray`1](System.Collections.Immutable.ImmutableArray`1.yml) populated with the contents of the specified sequence.
  syntax:
    content: public static ImmutableArray<T> CreateRange<T>(IEnumerable<T> items)
    content.vb: Public Shared Function CreateRange(Of T)(items As IEnumerable(Of T)) As ImmutableArray(Of T)
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The elements to store in the array.
    typeParameters:
    - id: T
      description: The type of element stored in the array.
    return:
      type: System.Collections.Immutable.ImmutableArray{{T}}
      description: An immutable array.
- uid: System.Collections.Immutable.ImmutableArray.Create``1(``0[])
  id: Create``1(``0[])
  parent: System.Collections.Immutable.ImmutableArray
  href: System.Collections.Immutable.ImmutableArray.yml
  name: Create<T>(T[])
  name.vb: Create(Of T)(T())
  fullName: System.Collections.Immutable.ImmutableArray.Create<T>(T[])
  fullName.vb: System.Collections.Immutable.ImmutableArray.Create(Of T)(T())
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 148
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates an empty [System.Collections.Immutable.ImmutableArray`1](System.Collections.Immutable.ImmutableArray`1.yml).
  syntax:
    content: public static ImmutableArray<T> Create<T>(params T[] items)
    content.vb: Public Shared Function Create(Of T)(ParamArray items As T()) As ImmutableArray(Of T)
    parameters:
    - id: items
      type: '{T}[]'
      description: The elements to store in the array.
    typeParameters:
    - id: T
      description: The type of element stored in the array.
    return:
      type: System.Collections.Immutable.ImmutableArray{{T}}
      description: An immutable array.
- uid: System.Collections.Immutable.ImmutableArray.Create``1(``0[],System.Int32,System.Int32)
  id: Create``1(``0[],System.Int32,System.Int32)
  parent: System.Collections.Immutable.ImmutableArray
  href: System.Collections.Immutable.ImmutableArray.yml
  name: Create<T>(T[], Int32, Int32)
  name.vb: Create(Of T)(T(), Int32, Int32)
  fullName: System.Collections.Immutable.ImmutableArray.Create<T>(T[], System.Int32, System.Int32)
  fullName.vb: System.Collections.Immutable.ImmutableArray.Create(Of T)(T(), System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 173
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Initializes a new instance of the [System.Collections.Immutable.ImmutableArray`1](System.Collections.Immutable.ImmutableArray`1.yml) struct.
  remarks: >-
    This overload allows helper methods or custom builder classes to efficiently avoid paying a redundant

    tax for copying an array when the new array is a segment of an existing array.
  syntax:
    content: public static ImmutableArray<T> Create<T>(T[] items, int start, int length)
    content.vb: Public Shared Function Create(Of T)(items As T(), start As Integer, length As Integer) As ImmutableArray(Of T)
    parameters:
    - id: items
      type: '{T}[]'
      description: The array to initialize the array with. A defensive copy is made.
    - id: start
      type: System.Int32
      description: The index of the first element in the source array to include in the resulting array.
    - id: length
      type: System.Int32
      description: The number of elements from the source array to include in the resulting array.
    typeParameters:
    - id: T
    return:
      type: System.Collections.Immutable.ImmutableArray{{T}}
- uid: System.Collections.Immutable.ImmutableArray.Create``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32)
  id: Create``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32)
  parent: System.Collections.Immutable.ImmutableArray
  href: System.Collections.Immutable.ImmutableArray.yml
  name: Create<T>(ImmutableArray<T>, Int32, Int32)
  name.vb: Create(Of T)(ImmutableArray(Of T), Int32, Int32)
  fullName: System.Collections.Immutable.ImmutableArray.Create<T>(System.Collections.Immutable.ImmutableArray<T>, System.Int32, System.Int32)
  fullName.vb: System.Collections.Immutable.ImmutableArray.Create(Of T)(System.Collections.Immutable.ImmutableArray(Of T), System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 206
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Initializes a new instance of the [System.Collections.Immutable.ImmutableArray`1](System.Collections.Immutable.ImmutableArray`1.yml) struct.
  remarks: >-
    This overload allows helper methods or custom builder classes to efficiently avoid paying a redundant

    tax for copying an array when the new array is a segment of an existing array.
  syntax:
    content: public static ImmutableArray<T> Create<T>(ImmutableArray<T> items, int start, int length)
    content.vb: Public Shared Function Create(Of T)(items As ImmutableArray(Of T), start As Integer, length As Integer) As ImmutableArray(Of T)
    parameters:
    - id: items
      type: System.Collections.Immutable.ImmutableArray{{T}}
      description: >-
        The array to initialize the array with.

        The selected array segment may be copied into a new array.
    - id: start
      type: System.Int32
      description: The index of the first element in the source array to include in the resulting array.
    - id: length
      type: System.Int32
      description: The number of elements from the source array to include in the resulting array.
    typeParameters:
    - id: T
    return:
      type: System.Collections.Immutable.ImmutableArray{{T}}
- uid: System.Collections.Immutable.ImmutableArray.CreateRange``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})
  id: CreateRange``2(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1})
  parent: System.Collections.Immutable.ImmutableArray
  href: System.Collections.Immutable.ImmutableArray.yml
  name: CreateRange<TSource, TResult>(ImmutableArray<TSource>, Func<TSource, TResult>)
  name.vb: CreateRange(Of TSource, TResult)(ImmutableArray(Of TSource), Func(Of TSource, TResult))
  fullName: System.Collections.Immutable.ImmutableArray.CreateRange<TSource, TResult>(System.Collections.Immutable.ImmutableArray<TSource>, System.Func<TSource, TResult>)
  fullName.vb: System.Collections.Immutable.ImmutableArray.CreateRange(Of TSource, TResult)(System.Collections.Immutable.ImmutableArray(Of TSource), System.Func(Of TSource, TResult))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 237
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Initializes a new instance of the [System.Collections.Immutable.ImmutableArray`1](System.Collections.Immutable.ImmutableArray`1.yml) struct.
  remarks: >-
    This overload allows efficient creation of an <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> based on an existing

    <see cref="T:System.Collections.Immutable.ImmutableArray`1" />, where a mapping function needs to be applied to each element from

    the source array.
  syntax:
    content: public static ImmutableArray<TResult> CreateRange<TSource, TResult>(ImmutableArray<TSource> items, Func<TSource, TResult> selector)
    content.vb: Public Shared Function CreateRange(Of TSource, TResult)(items As ImmutableArray(Of TSource), selector As Func(Of TSource, TResult)) As ImmutableArray(Of TResult)
    parameters:
    - id: items
      type: System.Collections.Immutable.ImmutableArray{{TSource}}
      description: The source array to initialize the resulting array with.
    - id: selector
      type: System.Func{{TSource},{TResult}}
      description: The function to apply to each element from the source array.
    typeParameters:
    - id: TSource
    - id: TResult
    return:
      type: System.Collections.Immutable.ImmutableArray{{TResult}}
- uid: System.Collections.Immutable.ImmutableArray.CreateRange``2(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,System.Func{``0,``1})
  id: CreateRange``2(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,System.Func{``0,``1})
  parent: System.Collections.Immutable.ImmutableArray
  href: System.Collections.Immutable.ImmutableArray.yml
  name: CreateRange<TSource, TResult>(ImmutableArray<TSource>, Int32, Int32, Func<TSource, TResult>)
  name.vb: CreateRange(Of TSource, TResult)(ImmutableArray(Of TSource), Int32, Int32, Func(Of TSource, TResult))
  fullName: System.Collections.Immutable.ImmutableArray.CreateRange<TSource, TResult>(System.Collections.Immutable.ImmutableArray<TSource>, System.Int32, System.Int32, System.Func<TSource, TResult>)
  fullName.vb: System.Collections.Immutable.ImmutableArray.CreateRange(Of TSource, TResult)(System.Collections.Immutable.ImmutableArray(Of TSource), System.Int32, System.Int32, System.Func(Of TSource, TResult))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 270
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Initializes a new instance of the [System.Collections.Immutable.ImmutableArray`1](System.Collections.Immutable.ImmutableArray`1.yml) struct.
  remarks: >-
    This overload allows efficient creation of an <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> based on a slice of an existing

    <see cref="T:System.Collections.Immutable.ImmutableArray`1" />, where a mapping function needs to be applied to each element from the source array

    included in the resulting array.
  syntax:
    content: public static ImmutableArray<TResult> CreateRange<TSource, TResult>(ImmutableArray<TSource> items, int start, int length, Func<TSource, TResult> selector)
    content.vb: Public Shared Function CreateRange(Of TSource, TResult)(items As ImmutableArray(Of TSource), start As Integer, length As Integer, selector As Func(Of TSource, TResult)) As ImmutableArray(Of TResult)
    parameters:
    - id: items
      type: System.Collections.Immutable.ImmutableArray{{TSource}}
      description: The source array to initialize the resulting array with.
    - id: start
      type: System.Int32
      description: The index of the first element in the source array to include in the resulting array.
    - id: length
      type: System.Int32
      description: The number of elements from the source array to include in the resulting array.
    - id: selector
      type: System.Func{{TSource},{TResult}}
      description: The function to apply to each element from the source array included in the resulting array.
    typeParameters:
    - id: TSource
    - id: TResult
    return:
      type: System.Collections.Immutable.ImmutableArray{{TResult}}
- uid: System.Collections.Immutable.ImmutableArray.CreateRange``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1,``2},``1)
  id: CreateRange``3(System.Collections.Immutable.ImmutableArray{``0},System.Func{``0,``1,``2},``1)
  parent: System.Collections.Immutable.ImmutableArray
  href: System.Collections.Immutable.ImmutableArray.yml
  name: CreateRange<TSource, TArg, TResult>(ImmutableArray<TSource>, Func<TSource, TArg, TResult>, TArg)
  name.vb: CreateRange(Of TSource, TArg, TResult)(ImmutableArray(Of TSource), Func(Of TSource, TArg, TResult), TArg)
  fullName: System.Collections.Immutable.ImmutableArray.CreateRange<TSource, TArg, TResult>(System.Collections.Immutable.ImmutableArray<TSource>, System.Func<TSource, TArg, TResult>, TArg)
  fullName.vb: System.Collections.Immutable.ImmutableArray.CreateRange(Of TSource, TArg, TResult)(System.Collections.Immutable.ImmutableArray(Of TSource), System.Func(Of TSource, TArg, TResult), TArg)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 304
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Initializes a new instance of the [System.Collections.Immutable.ImmutableArray`1](System.Collections.Immutable.ImmutableArray`1.yml) struct.
  remarks: >-
    This overload allows efficient creation of an <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> based on an existing

    <see cref="T:System.Collections.Immutable.ImmutableArray`1" />, where a mapping function needs to be applied to each element from

    the source array.
  syntax:
    content: public static ImmutableArray<TResult> CreateRange<TSource, TArg, TResult>(ImmutableArray<TSource> items, Func<TSource, TArg, TResult> selector, TArg arg)
    content.vb: Public Shared Function CreateRange(Of TSource, TArg, TResult)(items As ImmutableArray(Of TSource), selector As Func(Of TSource, TArg, TResult), arg As TArg) As ImmutableArray(Of TResult)
    parameters:
    - id: items
      type: System.Collections.Immutable.ImmutableArray{{TSource}}
      description: The source array to initialize the resulting array with.
    - id: selector
      type: System.Func{{TSource},{TArg},{TResult}}
      description: The function to apply to each element from the source array.
    - id: arg
      type: '{TArg}'
      description: An argument to be passed to the selector mapping function.
    typeParameters:
    - id: TSource
    - id: TArg
    - id: TResult
    return:
      type: System.Collections.Immutable.ImmutableArray{{TResult}}
- uid: System.Collections.Immutable.ImmutableArray.CreateRange``3(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,System.Func{``0,``1,``2},``1)
  id: CreateRange``3(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,System.Func{``0,``1,``2},``1)
  parent: System.Collections.Immutable.ImmutableArray
  href: System.Collections.Immutable.ImmutableArray.yml
  name: CreateRange<TSource, TArg, TResult>(ImmutableArray<TSource>, Int32, Int32, Func<TSource, TArg, TResult>, TArg)
  name.vb: CreateRange(Of TSource, TArg, TResult)(ImmutableArray(Of TSource), Int32, Int32, Func(Of TSource, TArg, TResult), TArg)
  fullName: System.Collections.Immutable.ImmutableArray.CreateRange<TSource, TArg, TResult>(System.Collections.Immutable.ImmutableArray<TSource>, System.Int32, System.Int32, System.Func<TSource, TArg, TResult>, TArg)
  fullName.vb: System.Collections.Immutable.ImmutableArray.CreateRange(Of TSource, TArg, TResult)(System.Collections.Immutable.ImmutableArray(Of TSource), System.Int32, System.Int32, System.Func(Of TSource, TArg, TResult), TArg)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 338
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Initializes a new instance of the [System.Collections.Immutable.ImmutableArray`1](System.Collections.Immutable.ImmutableArray`1.yml) struct.
  remarks: >-
    This overload allows efficient creation of an <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> based on a slice of an existing

    <see cref="T:System.Collections.Immutable.ImmutableArray`1" />, where a mapping function needs to be applied to each element from the source array

    included in the resulting array.
  syntax:
    content: public static ImmutableArray<TResult> CreateRange<TSource, TArg, TResult>(ImmutableArray<TSource> items, int start, int length, Func<TSource, TArg, TResult> selector, TArg arg)
    content.vb: Public Shared Function CreateRange(Of TSource, TArg, TResult)(items As ImmutableArray(Of TSource), start As Integer, length As Integer, selector As Func(Of TSource, TArg, TResult), arg As TArg) As ImmutableArray(Of TResult)
    parameters:
    - id: items
      type: System.Collections.Immutable.ImmutableArray{{TSource}}
      description: The source array to initialize the resulting array with.
    - id: start
      type: System.Int32
      description: The index of the first element in the source array to include in the resulting array.
    - id: length
      type: System.Int32
      description: The number of elements from the source array to include in the resulting array.
    - id: selector
      type: System.Func{{TSource},{TArg},{TResult}}
      description: The function to apply to each element from the source array included in the resulting array.
    - id: arg
      type: '{TArg}'
      description: An argument to be passed to the selector mapping function.
    typeParameters:
    - id: TSource
    - id: TArg
    - id: TResult
    return:
      type: System.Collections.Immutable.ImmutableArray{{TResult}}
- uid: System.Collections.Immutable.ImmutableArray.CreateBuilder``1
  id: CreateBuilder``1
  parent: System.Collections.Immutable.ImmutableArray
  href: System.Collections.Immutable.ImmutableArray.yml
  name: CreateBuilder<T>()
  name.vb: CreateBuilder(Of T)()
  fullName: System.Collections.Immutable.ImmutableArray.CreateBuilder<T>()
  fullName.vb: System.Collections.Immutable.ImmutableArray.CreateBuilder(Of T)()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 366
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Initializes a new instance of the [System.Collections.Immutable.ImmutableArray`1.Builder](System.Collections.Immutable.ImmutableArray`1.Builder.yml) class.
  syntax:
    content: public static ImmutableArray<T>.Builder CreateBuilder<T>()
    content.vb: Public Shared Function CreateBuilder(Of T) As ImmutableArray(Of T).Builder
    typeParameters:
    - id: T
      description: The type of elements stored in the array.
    return:
      type: System.Collections.Immutable.ImmutableArray{{T}}.Builder
      description: A new builder.
- uid: System.Collections.Immutable.ImmutableArray.CreateBuilder``1(System.Int32)
  id: CreateBuilder``1(System.Int32)
  parent: System.Collections.Immutable.ImmutableArray
  href: System.Collections.Immutable.ImmutableArray.yml
  name: CreateBuilder<T>(Int32)
  name.vb: CreateBuilder(Of T)(Int32)
  fullName: System.Collections.Immutable.ImmutableArray.CreateBuilder<T>(System.Int32)
  fullName.vb: System.Collections.Immutable.ImmutableArray.CreateBuilder(Of T)(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 378
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Initializes a new instance of the [System.Collections.Immutable.ImmutableArray`1.Builder](System.Collections.Immutable.ImmutableArray`1.Builder.yml) class.
  syntax:
    content: public static ImmutableArray<T>.Builder CreateBuilder<T>(int initialCapacity)
    content.vb: Public Shared Function CreateBuilder(Of T)(initialCapacity As Integer) As ImmutableArray(Of T).Builder
    parameters:
    - id: initialCapacity
      type: System.Int32
      description: The size of the initial array backing the builder.
    typeParameters:
    - id: T
      description: The type of elements stored in the array.
    return:
      type: System.Collections.Immutable.ImmutableArray{{T}}.Builder
      description: A new builder.
- uid: System.Collections.Immutable.ImmutableArray.ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})
  id: ToImmutableArray``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableArray
  href: System.Collections.Immutable.ImmutableArray.yml
  name: ToImmutableArray<TSource>(IEnumerable<TSource>)
  name.vb: ToImmutableArray(Of TSource)(IEnumerable(Of TSource))
  fullName: System.Collections.Immutable.ImmutableArray.ToImmutableArray<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: System.Collections.Immutable.ImmutableArray.ToImmutableArray(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 390
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Enumerates a sequence exactly once and produces an immutable array of its contents.
  syntax:
    content: public static ImmutableArray<TSource> ToImmutableArray<TSource>(IEnumerable<TSource> items)
    content.vb: Public Shared Function ToImmutableArray(Of TSource)(items As IEnumerable(Of TSource)) As ImmutableArray(Of TSource)
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{{TSource}}
      description: The sequence to enumerate.
    typeParameters:
    - id: TSource
      description: The type of element in the sequence.
    return:
      type: System.Collections.Immutable.ImmutableArray{{TSource}}
      description: An immutable array.
- uid: System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0)
  id: BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0)
  parent: System.Collections.Immutable.ImmutableArray
  href: System.Collections.Immutable.ImmutableArray.yml
  name: BinarySearch<T>(ImmutableArray<T>, T)
  name.vb: BinarySearch(Of T)(ImmutableArray(Of T), T)
  fullName: System.Collections.Immutable.ImmutableArray.BinarySearch<T>(System.Collections.Immutable.ImmutableArray<T>, T)
  fullName.vb: System.Collections.Immutable.ImmutableArray.BinarySearch(Of T)(System.Collections.Immutable.ImmutableArray(Of T), T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 422
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: >-
    Searches an entire one-dimensional sorted <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> for a specific element,

    using the <see cref="T:System.IComparable`1" /> generic interface implemented by each element

    of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> and by the specified object.
  syntax:
    content: public static int BinarySearch<T>(ImmutableArray<T> array, T value)
    content.vb: Public Shared Function BinarySearch(Of T)(array As ImmutableArray(Of T), value As T) As Integer
    parameters:
    - id: array
      type: System.Collections.Immutable.ImmutableArray{{T}}
      description: The sorted, one-dimensional array to search.
    - id: value
      type: '{T}'
      description: The object to search for.
    typeParameters:
    - id: T
      description: The type of element stored in the array.
    return:
      type: System.Int32
      description: >-
        The index of the specified <paramref name="value" /> in the specified array, if <paramref name="value" /> is found.

        If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in array,

        a negative number which is the bitwise complement of the index of the first

        element that is larger than <paramref name="value" />. If <paramref name="value" /> is not found and <paramref name="value" /> is greater

        than any of the elements in array, a negative number which is the bitwise

        complement of (the index of the last element plus 1).
  exceptions:
  - type: System.InvalidOperationException
    description: >-
      does not implement the  generic interface, and

      the search encounters an element that does not implement the

      generic interface.
- uid: System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0,System.Collections.Generic.IComparer{``0})
  id: BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},``0,System.Collections.Generic.IComparer{``0})
  parent: System.Collections.Immutable.ImmutableArray
  href: System.Collections.Immutable.ImmutableArray.yml
  name: BinarySearch<T>(ImmutableArray<T>, T, IComparer<T>)
  name.vb: BinarySearch(Of T)(ImmutableArray(Of T), T, IComparer(Of T))
  fullName: System.Collections.Immutable.ImmutableArray.BinarySearch<T>(System.Collections.Immutable.ImmutableArray<T>, T, System.Collections.Generic.IComparer<T>)
  fullName.vb: System.Collections.Immutable.ImmutableArray.BinarySearch(Of T)(System.Collections.Immutable.ImmutableArray(Of T), T, System.Collections.Generic.IComparer(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 453
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: >-
    Searches an entire one-dimensional sorted [System.Collections.Immutable.ImmutableArray`1](System.Collections.Immutable.ImmutableArray`1.yml) for a value using

    the specified [System.Collections.Generic.IComparer`1]() generic interface.
  syntax:
    content: public static int BinarySearch<T>(ImmutableArray<T> array, T value, IComparer<T> comparer)
    content.vb: Public Shared Function BinarySearch(Of T)(array As ImmutableArray(Of T), value As T, comparer As IComparer(Of T)) As Integer
    parameters:
    - id: array
      type: System.Collections.Immutable.ImmutableArray{{T}}
      description: The sorted, one-dimensional array to search.
    - id: value
      type: '{T}'
      description: The object to search for.
    - id: comparer
      type: System.Collections.Generic.IComparer{{T}}
      description: >-
        The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing

        elements; or null to use the <see cref="T:System.IComparable`1" /> implementation of each

        element.
    typeParameters:
    - id: T
      description: The type of element stored in the array.
    return:
      type: System.Int32
      description: >-
        The index of the specified <paramref name="value" /> in the specified array, if <paramref name="value" /> is found.

        If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in array,

        a negative number which is the bitwise complement of the index of the first

        element that is larger than <paramref name="value" />. If <paramref name="value" /> is not found and <paramref name="value" /> is greater

        than any of the elements in array, a negative number which is the bitwise

        complement of (the index of the last element plus 1).
  exceptions:
  - type: System.InvalidOperationException
    description: >-
      is null,  does not implement the  generic interface, and

      the search encounters an element that does not implement the

      generic interface.
- uid: System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0)
  id: BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0)
  parent: System.Collections.Immutable.ImmutableArray
  href: System.Collections.Immutable.ImmutableArray.yml
  name: BinarySearch<T>(ImmutableArray<T>, Int32, Int32, T)
  name.vb: BinarySearch(Of T)(ImmutableArray(Of T), Int32, Int32, T)
  fullName: System.Collections.Immutable.ImmutableArray.BinarySearch<T>(System.Collections.Immutable.ImmutableArray<T>, System.Int32, System.Int32, T)
  fullName.vb: System.Collections.Immutable.ImmutableArray.BinarySearch(Of T)(System.Collections.Immutable.ImmutableArray(Of T), System.Int32, System.Int32, T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 488
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: >-
    Searches a range of elements in a one-dimensional sorted <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> for

    a value, using the <see cref="T:System.IComparable`1" /> generic interface implemented by

    each element of the <see cref="T:System.Collections.Immutable.ImmutableArray`1" /> and by the specified value.
  syntax:
    content: public static int BinarySearch<T>(ImmutableArray<T> array, int index, int length, T value)
    content.vb: Public Shared Function BinarySearch(Of T)(array As ImmutableArray(Of T), index As Integer, length As Integer, value As T) As Integer
    parameters:
    - id: array
      type: System.Collections.Immutable.ImmutableArray{{T}}
      description: The sorted, one-dimensional array to search.
    - id: index
      type: System.Int32
      description: The starting index of the range to search.
    - id: length
      type: System.Int32
      description: The length of the range to search.
    - id: value
      type: '{T}'
      description: The object to search for.
    typeParameters:
    - id: T
      description: The type of element stored in the array.
    return:
      type: System.Int32
      description: >-
        The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found.

        If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />,

        a negative number which is the bitwise complement of the index of the first

        element that is larger than <paramref name="value" />. If <paramref name="value" /> is not found and <paramref name="value" /> is greater

        than any of the elements in <paramref name="array" />, a negative number which is the bitwise

        complement of (the index of the last element plus 1).
  exceptions:
  - type: System.InvalidOperationException
    description: >-
      does not implement the  generic interface, and

      the search encounters an element that does not implement the

      generic interface.
  - type: System.ArgumentException
    description: and  do not specify a valid range in .
  - type: System.ArgumentOutOfRangeException
    description: is less than the lower bound of . -or-  is less than zero.
- uid: System.Collections.Immutable.ImmutableArray.BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})
  id: BinarySearch``1(System.Collections.Immutable.ImmutableArray{``0},System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})
  parent: System.Collections.Immutable.ImmutableArray
  href: System.Collections.Immutable.ImmutableArray.yml
  name: BinarySearch<T>(ImmutableArray<T>, Int32, Int32, T, IComparer<T>)
  name.vb: BinarySearch(Of T)(ImmutableArray(Of T), Int32, Int32, T, IComparer(Of T))
  fullName: System.Collections.Immutable.ImmutableArray.BinarySearch<T>(System.Collections.Immutable.ImmutableArray<T>, System.Int32, System.Int32, T, System.Collections.Generic.IComparer<T>)
  fullName.vb: System.Collections.Immutable.ImmutableArray.BinarySearch(Of T)(System.Collections.Immutable.ImmutableArray(Of T), System.Int32, System.Int32, T, System.Collections.Generic.IComparer(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableArray.cs
    startLine: 529
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: >-
    Searches a range of elements in a one-dimensional sorted [System.Collections.Immutable.ImmutableArray`1](System.Collections.Immutable.ImmutableArray`1.yml) for

    a value, using the specified [System.Collections.Generic.IComparer`1]() generic

    interface.
  syntax:
    content: public static int BinarySearch<T>(ImmutableArray<T> array, int index, int length, T value, IComparer<T> comparer)
    content.vb: Public Shared Function BinarySearch(Of T)(array As ImmutableArray(Of T), index As Integer, length As Integer, value As T, comparer As IComparer(Of T)) As Integer
    parameters:
    - id: array
      type: System.Collections.Immutable.ImmutableArray{{T}}
      description: The sorted, one-dimensional array to search.
    - id: index
      type: System.Int32
      description: The starting index of the range to search.
    - id: length
      type: System.Int32
      description: The length of the range to search.
    - id: value
      type: '{T}'
      description: The object to search for.
    - id: comparer
      type: System.Collections.Generic.IComparer{{T}}
      description: >-
        The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing

        elements; or null to use the <see cref="T:System.IComparable`1" /> implementation of each

        element.
    typeParameters:
    - id: T
      description: The type of element stored in the array.
    return:
      type: System.Int32
      description: >-
        The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found.

        If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />,

        a negative number which is the bitwise complement of the index of the first

        element that is larger than <paramref name="value" />. If <paramref name="value" /> is not found and <paramref name="value" /> is greater

        than any of the elements in <paramref name="array" />, a negative number which is the bitwise

        complement of (the index of the last element plus 1).
  exceptions:
  - type: System.InvalidOperationException
    description: >-
      is null,  does not implement the  generic

      interface, and the search encounters an element that does not implement the

      generic interface.
  - type: System.ArgumentException
    description: >-
      and  do not specify a valid range in .-or- is null,

      and  is of a type that is not compatible with the elements of .
  - type: System.ArgumentOutOfRangeException
    description: is less than the lower bound of . -or-  is less than zero.
references:
- uid: System.Collections.Immutable.ImmutableArray`1
  parent: System.Collections.Immutable
  isExternal: false
  href: System.Collections.Immutable.ImmutableArray`1.yml
  name: ImmutableArray<T>
  name.vb: ImmutableArray(Of T)
  fullName: System.Collections.Immutable.ImmutableArray<T>
  fullName.vb: System.Collections.Immutable.ImmutableArray(Of T)
  type: Struct
  summary: A readonly array with O(1) indexable lookup time.
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    fullName: System.Collections.Immutable.ImmutableArray
    href: System.Collections.Immutable.ImmutableArray`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    fullName: System.Collections.Immutable.ImmutableArray
    href: System.Collections.Immutable.ImmutableArray`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Immutable
  isExternal: false
  name: System.Collections.Immutable
  fullName: System.Collections.Immutable
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Collections.Immutable.ImmutableArray{{T}}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableArray`1
  href: System.Collections.Immutable.ImmutableArray`1.yml
  name: ImmutableArray<T>
  name.vb: ImmutableArray(Of T)
  fullName: System.Collections.Immutable.ImmutableArray<T>
  fullName.vb: System.Collections.Immutable.ImmutableArray(Of T)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    fullName: System.Collections.Immutable.ImmutableArray
    href: System.Collections.Immutable.ImmutableArray`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    fullName: System.Collections.Immutable.ImmutableArray
    href: System.Collections.Immutable.ImmutableArray`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.Collections.Generic.IEnumerable{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  name.vb: IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  name.vb: IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: '{T}[]'
  isExternal: false
  name: T[]
  name.vb: T()
  fullName: T[]
  fullName.vb: T()
  spec.csharp:
  - name: T
    fullName: T
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - name: T
    fullName: T
  - name: ()
    fullName: ()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Collections.Immutable.ImmutableArray{{TSource}}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableArray`1
  href: System.Collections.Immutable.ImmutableArray`1.yml
  name: ImmutableArray<TSource>
  name.vb: ImmutableArray(Of TSource)
  fullName: System.Collections.Immutable.ImmutableArray<TSource>
  fullName.vb: System.Collections.Immutable.ImmutableArray(Of TSource)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    fullName: System.Collections.Immutable.ImmutableArray
    href: System.Collections.Immutable.ImmutableArray`1.yml
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    fullName: System.Collections.Immutable.ImmutableArray
    href: System.Collections.Immutable.ImmutableArray`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
- uid: System.Func{{TSource},{TResult}}
  parent: System
  definition: System.Func`2
  name: Func<TSource, TResult>
  name.vb: Func(Of TSource, TResult)
  fullName: System.Func<TSource, TResult>
  fullName.vb: System.Func(Of TSource, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Collections.Immutable.ImmutableArray{{TResult}}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableArray`1
  href: System.Collections.Immutable.ImmutableArray`1.yml
  name: ImmutableArray<TResult>
  name.vb: ImmutableArray(Of TResult)
  fullName: System.Collections.Immutable.ImmutableArray<TResult>
  fullName.vb: System.Collections.Immutable.ImmutableArray(Of TResult)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    fullName: System.Collections.Immutable.ImmutableArray
    href: System.Collections.Immutable.ImmutableArray`1.yml
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableArray`1
    name: ImmutableArray
    fullName: System.Collections.Immutable.ImmutableArray
    href: System.Collections.Immutable.ImmutableArray`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Func`2
  parent: System
  isExternal: true
  name: Func<T, TResult>
  name.vb: Func(Of T, TResult)
  fullName: System.Func<T, TResult>
  fullName.vb: System.Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Func{{TSource},{TArg},{TResult}}
  parent: System
  definition: System.Func`3
  name: Func<TSource, TArg, TResult>
  name.vb: Func(Of TSource, TArg, TResult)
  fullName: System.Func<TSource, TArg, TResult>
  fullName.vb: System.Func(Of TSource, TArg, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TArg
    fullName: TArg
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TArg
    fullName: TArg
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: '{TArg}'
  isExternal: false
  name: TArg
  fullName: TArg
- uid: System.Func`3
  parent: System
  isExternal: true
  name: Func<T1, T2, TResult>
  name.vb: Func(Of T1, T2, TResult)
  fullName: System.Func<T1, T2, TResult>
  fullName.vb: System.Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Collections.Immutable.ImmutableArray`1.Builder
  parent: System.Collections.Immutable
  isExternal: false
  href: System.Collections.Immutable.ImmutableArray`1.Builder.yml
  name: ImmutableArray.Builder<>
  name.vb: ImmutableArray.Builder(Of )
  fullName: System.Collections.Immutable.ImmutableArray.Builder<>
  fullName.vb: System.Collections.Immutable.ImmutableArray.Builder(Of )
  type: Class
  summary: >-
    A writable array accessor that can be converted into an @'System.Collections.Immutable.ImmutableArray`1'

    instance without allocating memory.
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableArray`1.Builder
    name: ImmutableArray.Builder
    fullName: System.Collections.Immutable.ImmutableArray.Builder
    href: System.Collections.Immutable.ImmutableArray`1.Builder.yml
  - name: <
    fullName: <
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableArray`1.Builder
    name: ImmutableArray.Builder
    fullName: System.Collections.Immutable.ImmutableArray.Builder
    href: System.Collections.Immutable.ImmutableArray`1.Builder.yml
  - name: '(Of '
    fullName: '(Of '
  - name: )
    fullName: )
- uid: System.Collections.Immutable.ImmutableArray{{T}}.Builder
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableArray`1.Builder
  href: System.Collections.Immutable.ImmutableArray`1.Builder.yml
  name: ImmutableArray.Builder<>
  name.vb: ImmutableArray.Builder(Of )
  fullName: System.Collections.Immutable.ImmutableArray.Builder<>
  fullName.vb: System.Collections.Immutable.ImmutableArray.Builder(Of )
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableArray`1.Builder
    name: ImmutableArray.Builder
    fullName: System.Collections.Immutable.ImmutableArray.Builder
    href: System.Collections.Immutable.ImmutableArray`1.Builder.yml
  - name: <
    fullName: <
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableArray`1.Builder
    name: ImmutableArray.Builder
    fullName: System.Collections.Immutable.ImmutableArray.Builder
    href: System.Collections.Immutable.ImmutableArray`1.Builder.yml
  - name: '(Of '
    fullName: '(Of '
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{TSource}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TSource>
  name.vb: IEnumerable(Of TSource)
  fullName: System.Collections.Generic.IEnumerable<TSource>
  fullName.vb: System.Collections.Generic.IEnumerable(Of TSource)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
- uid: System.IComparable`1
- uid: System.InvalidOperationException
  parent: System
  isExternal: true
  name: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Collections.Generic.IComparer`1
  parent: System.Collections.Generic
  isExternal: true
  name: IComparer<T>
  name.vb: IComparer(Of T)
  fullName: System.Collections.Generic.IComparer<T>
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IComparer{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  name: IComparer<T>
  name.vb: IComparer(Of T)
  fullName: System.Collections.Generic.IComparer<T>
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
