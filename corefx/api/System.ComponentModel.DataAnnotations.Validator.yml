items:
- uid: System.ComponentModel.DataAnnotations.Validator
  id: Validator
  parent: System.ComponentModel.DataAnnotations
  children:
  - System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})
  - System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Boolean)
  - System.ComponentModel.DataAnnotations.Validator.TryValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})
  - System.ComponentModel.DataAnnotations.Validator.TryValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})
  - System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  - System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Boolean)
  - System.ComponentModel.DataAnnotations.Validator.ValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  - System.ComponentModel.DataAnnotations.Validator.ValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})
  href: System.ComponentModel.DataAnnotations.Validator.yml
  name: Validator
  fullName: System.ComponentModel.DataAnnotations.Validator
  type: Class
  source:
    remote: &o0
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs
    startLine: 15
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: >-
    Helper class to validate objects, properties and other values using their associated

    [System.ComponentModel.DataAnnotations.ValidationAttribute](System.ComponentModel.DataAnnotations.ValidationAttribute.yml)

    custom attributes.
  syntax:
    content: public class Validator
    content.vb: Public Class Validator
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.ComponentModel.DataAnnotations.Validator.TryValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})
  id: TryValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})
  parent: System.ComponentModel.DataAnnotations.Validator
  href: System.ComponentModel.DataAnnotations.Validator.yml
  name: TryValidateProperty(Object, ValidationContext, ICollection<ValidationResult>)
  name.vb: TryValidateProperty(Object, ValidationContext, ICollection(Of ValidationResult))
  fullName: System.ComponentModel.DataAnnotations.Validator.TryValidateProperty(System.Object, System.ComponentModel.DataAnnotations.ValidationContext, System.Collections.Generic.ICollection<System.ComponentModel.DataAnnotations.ValidationResult>)
  fullName.vb: System.ComponentModel.DataAnnotations.Validator.TryValidateProperty(System.Object, System.ComponentModel.DataAnnotations.ValidationContext, System.Collections.Generic.ICollection(Of System.ComponentModel.DataAnnotations.ValidationResult))
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs
    startLine: 47
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Tests whether the given property value is valid.
  remarks: >-
    This method will test each [System.ComponentModel.DataAnnotations.ValidationAttribute](System.ComponentModel.DataAnnotations.ValidationAttribute.yml) associated with the property

    identified by <paramref name="validationContext" />.  If <paramref name="validationResults" /> is non-null,

    this method will add a [System.ComponentModel.DataAnnotations.ValidationResult](System.ComponentModel.DataAnnotations.ValidationResult.yml) to it for each validation failure.

    <para>

    If there is a <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute" /> found on the property, it will be evaluated before all other

    validation attributes.  If the required validator fails then validation will abort, adding that single

    failure into the <paramref name="validationResults" /> when applicable, returning a value of <c>false</c>.

    </para><para>

    If <paramref name="validationResults" /> is null and there isn't a <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute" /> failure,

    then all validators will be evaluated.

    </para>
  syntax:
    content: public static bool TryValidateProperty(object value, ValidationContext validationContext, ICollection<ValidationResult> validationResults)
    content.vb: Public Shared Function TryValidateProperty(value As Object, validationContext As ValidationContext, validationResults As ICollection(Of ValidationResult)) As Boolean
    parameters:
    - id: value
      type: System.Object
      description: The value to test.
    - id: validationContext
      type: System.ComponentModel.DataAnnotations.ValidationContext
      description: >-
        Describes the property member to validate and provides services and context for the

        validators.
    - id: validationResults
      type: System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult}
      description: Optional collection to receive <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" />s for the failures.
    return:
      type: System.Boolean
      description: <c>true</c> if the value is valid, <c>false</c> if any validation errors are encountered.
  exceptions:
  - type: System.ArgumentException
    description: >-
      When the  of  is not a valid

      property.
- uid: System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})
  id: TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult})
  parent: System.ComponentModel.DataAnnotations.Validator
  href: System.ComponentModel.DataAnnotations.Validator.yml
  name: TryValidateObject(Object, ValidationContext, ICollection<ValidationResult>)
  name.vb: TryValidateObject(Object, ValidationContext, ICollection(Of ValidationResult))
  fullName: System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object, System.ComponentModel.DataAnnotations.ValidationContext, System.Collections.Generic.ICollection<System.ComponentModel.DataAnnotations.ValidationResult>)
  fullName.vb: System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object, System.ComponentModel.DataAnnotations.ValidationContext, System.Collections.Generic.ICollection(Of System.ComponentModel.DataAnnotations.ValidationResult))
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs
    startLine: 95
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Tests whether the given object instance is valid.
  remarks: >-
    This method evaluates all [System.ComponentModel.DataAnnotations.ValidationAttribute](System.ComponentModel.DataAnnotations.ValidationAttribute.yml)s attached to the object instance's type.  It also

    checks to ensure all properties marked with [System.ComponentModel.DataAnnotations.RequiredAttribute](System.ComponentModel.DataAnnotations.RequiredAttribute.yml) are set.  It does not validate the

    property values of the object.

    <para>

    If <paramref name="validationResults" /> is null, then execution will abort upon the first validation

    failure.  If <paramref name="validationResults" /> is non-null, then all validation attributes will be

    evaluated.

    </para>
  syntax:
    content: public static bool TryValidateObject(object instance, ValidationContext validationContext, ICollection<ValidationResult> validationResults)
    content.vb: Public Shared Function TryValidateObject(instance As Object, validationContext As ValidationContext, validationResults As ICollection(Of ValidationResult)) As Boolean
    parameters:
    - id: instance
      type: System.Object
      description: The object instance to test.  It cannot be <c>null</c>.
    - id: validationContext
      type: System.ComponentModel.DataAnnotations.ValidationContext
      description: Describes the object to validate and provides services and context for the validators.
    - id: validationResults
      type: System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult}
      description: Optional collection to receive [System.ComponentModel.DataAnnotations.ValidationResult](System.ComponentModel.DataAnnotations.ValidationResult.yml)s for the failures.
    return:
      type: System.Boolean
      description: <c>true</c> if the object is valid, <c>false</c> if any validation errors are encountered.
  exceptions:
  - type: System.ArgumentNullException
    description: When  is null.
  - type: System.ArgumentException
    description: >-
      When  doesn't match the

      on .
- uid: System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Boolean)
  id: TryValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Boolean)
  parent: System.ComponentModel.DataAnnotations.Validator
  href: System.ComponentModel.DataAnnotations.Validator.yml
  name: TryValidateObject(Object, ValidationContext, ICollection<ValidationResult>, Boolean)
  name.vb: TryValidateObject(Object, ValidationContext, ICollection(Of ValidationResult), Boolean)
  fullName: System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object, System.ComponentModel.DataAnnotations.ValidationContext, System.Collections.Generic.ICollection<System.ComponentModel.DataAnnotations.ValidationResult>, System.Boolean)
  fullName.vb: System.ComponentModel.DataAnnotations.Validator.TryValidateObject(System.Object, System.ComponentModel.DataAnnotations.ValidationContext, System.Collections.Generic.ICollection(Of System.ComponentModel.DataAnnotations.ValidationResult), System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs
    startLine: 134
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Tests whether the given object instance is valid.
  remarks: >-
    This method evaluates all <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />s attached to the object instance's type.  It also

    checks to ensure all properties marked with <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute" /> are set.  If

    <paramref name="validateAllProperties" />

    is <c>true</c>, this method will also evaluate the <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />s for all the immediate

    properties

    of this object.  This process is not recursive.

    <para>

    If <paramref name="validationResults" /> is null, then execution will abort upon the first validation

    failure.  If <paramref name="validationResults" /> is non-null, then all validation attributes will be

    evaluated.

    </para><para>

    For any given property, if it has a <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute" /> that fails validation, no other validators

    will be evaluated for that property.

    </para>
  syntax:
    content: public static bool TryValidateObject(object instance, ValidationContext validationContext, ICollection<ValidationResult> validationResults, bool validateAllProperties)
    content.vb: Public Shared Function TryValidateObject(instance As Object, validationContext As ValidationContext, validationResults As ICollection(Of ValidationResult), validateAllProperties As Boolean) As Boolean
    parameters:
    - id: instance
      type: System.Object
      description: The object instance to test.  It cannot be null.
    - id: validationContext
      type: System.ComponentModel.DataAnnotations.ValidationContext
      description: Describes the object to validate and provides services and context for the validators.
    - id: validationResults
      type: System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult}
      description: Optional collection to receive [System.ComponentModel.DataAnnotations.ValidationResult](System.ComponentModel.DataAnnotations.ValidationResult.yml)s for the failures.
    - id: validateAllProperties
      type: System.Boolean
      description: >-
        If <c>true</c>, also evaluates all properties of the object (this process is not

        recursive over properties of the properties).
    return:
      type: System.Boolean
      description: <c>true</c> if the object is valid, <c>false</c> if any validation errors are encountered.
  exceptions:
  - type: System.ArgumentNullException
    description: When  is null.
  - type: System.ArgumentException
    description: >-
      When  doesn't match the

      on .
- uid: System.ComponentModel.DataAnnotations.Validator.TryValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})
  id: TryValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult},System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})
  parent: System.ComponentModel.DataAnnotations.Validator
  href: System.ComponentModel.DataAnnotations.Validator.yml
  name: TryValidateValue(Object, ValidationContext, ICollection<ValidationResult>, IEnumerable<ValidationAttribute>)
  name.vb: TryValidateValue(Object, ValidationContext, ICollection(Of ValidationResult), IEnumerable(Of ValidationAttribute))
  fullName: System.ComponentModel.DataAnnotations.Validator.TryValidateValue(System.Object, System.ComponentModel.DataAnnotations.ValidationContext, System.Collections.Generic.ICollection<System.ComponentModel.DataAnnotations.ValidationResult>, System.Collections.Generic.IEnumerable<System.ComponentModel.DataAnnotations.ValidationAttribute>)
  fullName.vb: System.ComponentModel.DataAnnotations.Validator.TryValidateValue(System.Object, System.ComponentModel.DataAnnotations.ValidationContext, System.Collections.Generic.ICollection(Of System.ComponentModel.DataAnnotations.ValidationResult), System.Collections.Generic.IEnumerable(Of System.ComponentModel.DataAnnotations.ValidationAttribute))
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs
    startLine: 195
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Tests whether the given value is valid against a specified list of [System.ComponentModel.DataAnnotations.ValidationAttribute](System.ComponentModel.DataAnnotations.ValidationAttribute.yml)s.
  remarks: >-
    This method will test each <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />s specified .  If

    <paramref name="validationResults" /> is non-null, this method will add a <see cref="T:System.ComponentModel.DataAnnotations.ValidationResult" />

    to it for each validation failure.

    <para>

    If there is a <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute" /> within the <paramref name="validationAttributes" />, it will

    be evaluated before all other validation attributes.  If the required validator fails then validation will

    abort, adding that single failure into the <paramref name="validationResults" /> when applicable, returning a

    value of <c>false</c>.

    </para><para>

    If <paramref name="validationResults" /> is null and there isn't a <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute" /> failure,

    then all validators will be evaluated.

    </para>
  syntax:
    content: public static bool TryValidateValue(object value, ValidationContext validationContext, ICollection<ValidationResult> validationResults, IEnumerable<ValidationAttribute> validationAttributes)
    content.vb: Public Shared Function TryValidateValue(value As Object, validationContext As ValidationContext, validationResults As ICollection(Of ValidationResult), validationAttributes As IEnumerable(Of ValidationAttribute)) As Boolean
    parameters:
    - id: value
      type: System.Object
      description: The value to test.  It cannot be null.
    - id: validationContext
      type: System.ComponentModel.DataAnnotations.ValidationContext
      description: >-
        Describes the object being validated and provides services and context for the

        validators.
    - id: validationResults
      type: System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult}
      description: Optional collection to receive [System.ComponentModel.DataAnnotations.ValidationResult](System.ComponentModel.DataAnnotations.ValidationResult.yml)s for the failures.
    - id: validationAttributes
      type: System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute}
      description: >-
        The list of <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />s to validate this

        <paramref name="value" /> against.
    return:
      type: System.Boolean
      description: <c>true</c> if the object is valid, <c>false</c> if any validation errors are encountered.
- uid: System.ComponentModel.DataAnnotations.Validator.ValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  id: ValidateProperty(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  parent: System.ComponentModel.DataAnnotations.Validator
  href: System.ComponentModel.DataAnnotations.Validator.yml
  name: ValidateProperty(Object, ValidationContext)
  fullName: System.ComponentModel.DataAnnotations.Validator.ValidateProperty(System.Object, System.ComponentModel.DataAnnotations.ValidationContext)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs
    startLine: 226
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Throws a [System.ComponentModel.DataAnnotations.ValidationException](System.ComponentModel.DataAnnotations.ValidationException.yml) if the given property <paramref name="value" /> is not valid.
  syntax:
    content: public static void ValidateProperty(object value, ValidationContext validationContext)
    content.vb: Public Shared Sub ValidateProperty(value As Object, validationContext As ValidationContext)
    parameters:
    - id: value
      type: System.Object
      description: The value to test.
    - id: validationContext
      type: System.ComponentModel.DataAnnotations.ValidationContext
      description: >-
        Describes the object being validated and provides services and context for the

        validators.  It cannot be <c>null</c>.
  exceptions:
  - type: System.ArgumentNullException
    description: When  is null.
  - type: System.ComponentModel.DataAnnotations.ValidationException
    description: When  is invalid for this property.
- uid: System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  id: ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)
  parent: System.ComponentModel.DataAnnotations.Validator
  href: System.ComponentModel.DataAnnotations.Validator.yml
  name: ValidateObject(Object, ValidationContext)
  fullName: System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object, System.ComponentModel.DataAnnotations.ValidationContext)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs
    startLine: 259
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Throws a [System.ComponentModel.DataAnnotations.ValidationException](System.ComponentModel.DataAnnotations.ValidationException.yml) if the given <paramref name="instance" /> is not valid.
  remarks: This method evaluates all [System.ComponentModel.DataAnnotations.ValidationAttribute](System.ComponentModel.DataAnnotations.ValidationAttribute.yml)s attached to the object's type.
  syntax:
    content: public static void ValidateObject(object instance, ValidationContext validationContext)
    content.vb: Public Shared Sub ValidateObject(instance As Object, validationContext As ValidationContext)
    parameters:
    - id: instance
      type: System.Object
      description: The object instance to test.  It cannot be null.
    - id: validationContext
      type: System.ComponentModel.DataAnnotations.ValidationContext
      description: >-
        Describes the object being validated and provides services and context for the

        validators.  It cannot be <c>null</c>.
  exceptions:
  - type: System.ArgumentNullException
    description: When  is null.
  - type: System.ArgumentNullException
    description: When  is null.
  - type: System.ArgumentException
    description: >-
      When  doesn't match the

      on .
  - type: System.ComponentModel.DataAnnotations.ValidationException
    description: When  is found to be invalid.
- uid: System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Boolean)
  id: ValidateObject(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Boolean)
  parent: System.ComponentModel.DataAnnotations.Validator
  href: System.ComponentModel.DataAnnotations.Validator.yml
  name: ValidateObject(Object, ValidationContext, Boolean)
  fullName: System.ComponentModel.DataAnnotations.Validator.ValidateObject(System.Object, System.ComponentModel.DataAnnotations.ValidationContext, System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs
    startLine: 284
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Throws a [System.ComponentModel.DataAnnotations.ValidationException](System.ComponentModel.DataAnnotations.ValidationException.yml) if the given object instance is not valid.
  remarks: >-
    This method evaluates all [System.ComponentModel.DataAnnotations.ValidationAttribute](System.ComponentModel.DataAnnotations.ValidationAttribute.yml)s attached to the object's type.

    If <paramref name="validateAllProperties" /> is <c>true</c> it also validates all the object's properties.
  syntax:
    content: public static void ValidateObject(object instance, ValidationContext validationContext, bool validateAllProperties)
    content.vb: Public Shared Sub ValidateObject(instance As Object, validationContext As ValidationContext, validateAllProperties As Boolean)
    parameters:
    - id: instance
      type: System.Object
      description: The object instance to test.  It cannot be null.
    - id: validationContext
      type: System.ComponentModel.DataAnnotations.ValidationContext
      description: >-
        Describes the object being validated and provides services and context for the

        validators.  It cannot be <c>null</c>.
    - id: validateAllProperties
      type: System.Boolean
      description: If <c>true</c>, also validates all the <paramref name="instance" />'s properties.
  exceptions:
  - type: System.ArgumentNullException
    description: When  is null.
  - type: System.ArgumentNullException
    description: When  is null.
  - type: System.ArgumentException
    description: >-
      When  doesn't match the

      on .
  - type: System.ComponentModel.DataAnnotations.ValidationException
    description: When  is found to be invalid.
- uid: System.ComponentModel.DataAnnotations.Validator.ValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})
  id: ValidateValue(System.Object,System.ComponentModel.DataAnnotations.ValidationContext,System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute})
  parent: System.ComponentModel.DataAnnotations.Validator
  href: System.ComponentModel.DataAnnotations.Validator.yml
  name: ValidateValue(Object, ValidationContext, IEnumerable<ValidationAttribute>)
  name.vb: ValidateValue(Object, ValidationContext, IEnumerable(Of ValidationAttribute))
  fullName: System.ComponentModel.DataAnnotations.Validator.ValidateValue(System.Object, System.ComponentModel.DataAnnotations.ValidationContext, System.Collections.Generic.IEnumerable<System.ComponentModel.DataAnnotations.ValidationAttribute>)
  fullName.vb: System.ComponentModel.DataAnnotations.Validator.ValidateValue(System.Object, System.ComponentModel.DataAnnotations.ValidationContext, System.Collections.Generic.IEnumerable(Of System.ComponentModel.DataAnnotations.ValidationAttribute))
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/Validator.cs
    startLine: 326
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: >-
    Throw a [System.ComponentModel.DataAnnotations.ValidationException](System.ComponentModel.DataAnnotations.ValidationException.yml) if the given value is not valid for the

    [System.ComponentModel.DataAnnotations.ValidationAttribute](System.ComponentModel.DataAnnotations.ValidationAttribute.yml)s.
  remarks: >-
    This method evaluates the <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />s supplied until a validation error occurs,

    at which time a <see cref="T:System.ComponentModel.DataAnnotations.ValidationException" /> is thrown.

    <para>

    A <see cref="T:System.ComponentModel.DataAnnotations.RequiredAttribute" /> within the <paramref name="validationAttributes" /> will always be evaluated

    first.

    </para>
  syntax:
    content: public static void ValidateValue(object value, ValidationContext validationContext, IEnumerable<ValidationAttribute> validationAttributes)
    content.vb: Public Shared Sub ValidateValue(value As Object, validationContext As ValidationContext, validationAttributes As IEnumerable(Of ValidationAttribute))
    parameters:
    - id: value
      type: System.Object
      description: The value to test.  It cannot be null.
    - id: validationContext
      type: System.ComponentModel.DataAnnotations.ValidationContext
      description: Describes the object being tested.
    - id: validationAttributes
      type: System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute}
      description: The list of <see cref="T:System.ComponentModel.DataAnnotations.ValidationAttribute" />s to validate against this instance.
  exceptions:
  - type: System.ArgumentNullException
    description: When  is null.
  - type: System.ComponentModel.DataAnnotations.ValidationException
    description: When  is found to be invalid.
references:
- uid: System.ComponentModel.DataAnnotations.ValidationAttribute
  parent: System.ComponentModel.DataAnnotations
  isExternal: false
  href: System.ComponentModel.DataAnnotations.ValidationAttribute.yml
  name: ValidationAttribute
  fullName: System.ComponentModel.DataAnnotations.ValidationAttribute
  type: Class
  summary: >-
    Base class for all validation attributes.

    <para>Override <see cref="M:System.ComponentModel.DataAnnotations.ValidationAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)" /> to implement validation logic.</para>
- uid: System.ComponentModel.DataAnnotations
  isExternal: false
  name: System.ComponentModel.DataAnnotations
  fullName: System.ComponentModel.DataAnnotations
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.ComponentModel.DataAnnotations.ValidationResult
  parent: System.ComponentModel.DataAnnotations
  isExternal: false
  href: System.ComponentModel.DataAnnotations.ValidationResult.yml
  name: ValidationResult
  fullName: System.ComponentModel.DataAnnotations.ValidationResult
  type: Class
  summary: >-
    Container class for the results of a validation request.

    <para>

    Use the static <see cref="F:System.ComponentModel.DataAnnotations.ValidationResult.Success" /> to represent successful validation.

    </para>
- uid: System.ArgumentException
- uid: System.ComponentModel.DataAnnotations.ValidationContext
  parent: System.ComponentModel.DataAnnotations
  isExternal: false
  href: System.ComponentModel.DataAnnotations.ValidationContext.yml
  name: ValidationContext
  fullName: System.ComponentModel.DataAnnotations.ValidationContext
  type: Class
  summary: Describes the context in which a validation is being performed.
- uid: System.Collections.Generic.ICollection{System.ComponentModel.DataAnnotations.ValidationResult}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: System.ComponentModel.DataAnnotations.ValidationResult.yml
  name: ICollection<ValidationResult>
  name.vb: ICollection(Of ValidationResult)
  fullName: System.Collections.Generic.ICollection<System.ComponentModel.DataAnnotations.ValidationResult>
  fullName.vb: System.Collections.Generic.ICollection(Of System.ComponentModel.DataAnnotations.ValidationResult)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    fullName: <
  - uid: System.ComponentModel.DataAnnotations.ValidationResult
    name: ValidationResult
    fullName: System.ComponentModel.DataAnnotations.ValidationResult
    href: System.ComponentModel.DataAnnotations.ValidationResult.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.ComponentModel.DataAnnotations.ValidationResult
    name: ValidationResult
    fullName: System.ComponentModel.DataAnnotations.ValidationResult
    href: System.ComponentModel.DataAnnotations.ValidationResult.yml
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.ICollection`1
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<T>
  name.vb: ICollection(Of T)
  fullName: System.Collections.Generic.ICollection<T>
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.ComponentModel.DataAnnotations.RequiredAttribute
  isExternal: false
  href: System.ComponentModel.DataAnnotations.RequiredAttribute.yml
  name: RequiredAttribute
  fullName: System.ComponentModel.DataAnnotations.RequiredAttribute
  type: Class
  summary: Validation attribute to indicate that a property field or parameter is required.
- uid: System.ArgumentNullException
- uid: System.Collections.Generic.IEnumerable{System.ComponentModel.DataAnnotations.ValidationAttribute}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: System.ComponentModel.DataAnnotations.ValidationAttribute.yml
  name: IEnumerable<ValidationAttribute>
  name.vb: IEnumerable(Of ValidationAttribute)
  fullName: System.Collections.Generic.IEnumerable<System.ComponentModel.DataAnnotations.ValidationAttribute>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.ComponentModel.DataAnnotations.ValidationAttribute)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute
    name: ValidationAttribute
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute
    href: System.ComponentModel.DataAnnotations.ValidationAttribute.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.ComponentModel.DataAnnotations.ValidationAttribute
    name: ValidationAttribute
    fullName: System.ComponentModel.DataAnnotations.ValidationAttribute
    href: System.ComponentModel.DataAnnotations.ValidationAttribute.yml
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  name.vb: IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.ComponentModel.DataAnnotations.ValidationException
  isExternal: false
  href: System.ComponentModel.DataAnnotations.ValidationException.yml
  name: ValidationException
  fullName: System.ComponentModel.DataAnnotations.ValidationException
  type: Class
  summary: Exception used for validation using @'System.ComponentModel.DataAnnotations.ValidationException.ValidationAttribute'.
