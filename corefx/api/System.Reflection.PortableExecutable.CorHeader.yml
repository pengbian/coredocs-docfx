items:
- uid: System.Reflection.PortableExecutable.CorHeader
  id: CorHeader
  parent: System.Reflection.PortableExecutable
  children:
  - System.Reflection.PortableExecutable.CorHeader.CodeManagerTableDirectory
  - System.Reflection.PortableExecutable.CorHeader.EntryPointTokenOrRelativeVirtualAddress
  - System.Reflection.PortableExecutable.CorHeader.ExportAddressTableJumpsDirectory
  - System.Reflection.PortableExecutable.CorHeader.Flags
  - System.Reflection.PortableExecutable.CorHeader.MajorRuntimeVersion
  - System.Reflection.PortableExecutable.CorHeader.ManagedNativeHeaderDirectory
  - System.Reflection.PortableExecutable.CorHeader.MetadataDirectory
  - System.Reflection.PortableExecutable.CorHeader.MinorRuntimeVersion
  - System.Reflection.PortableExecutable.CorHeader.ResourcesDirectory
  - System.Reflection.PortableExecutable.CorHeader.StrongNameSignatureDirectory
  - System.Reflection.PortableExecutable.CorHeader.VtableFixupsDirectory
  href: System.Reflection.PortableExecutable.CorHeader.yml
  name: CorHeader
  fullName: System.Reflection.PortableExecutable.CorHeader
  type: Class
  source:
    remote: &o0
      path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/CorHeader.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/CorHeader.cs
    startLine: 5
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.PortableExecutable
  syntax:
    content: public sealed class CorHeader
    content.vb: Public NotInheritable Class CorHeader
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Reflection.PortableExecutable.CorHeader.MajorRuntimeVersion
  id: MajorRuntimeVersion
  parent: System.Reflection.PortableExecutable.CorHeader
  href: System.Reflection.PortableExecutable.CorHeader.yml
  name: MajorRuntimeVersion
  fullName: System.Reflection.PortableExecutable.CorHeader.MajorRuntimeVersion
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/CorHeader.cs
    startLine: 7
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.PortableExecutable
  syntax:
    content: public ushort MajorRuntimeVersion { get; }
    content.vb: Public ReadOnly Property MajorRuntimeVersion As UShort
    parameters: []
    return:
      type: System.UInt16
- uid: System.Reflection.PortableExecutable.CorHeader.MinorRuntimeVersion
  id: MinorRuntimeVersion
  parent: System.Reflection.PortableExecutable.CorHeader
  href: System.Reflection.PortableExecutable.CorHeader.yml
  name: MinorRuntimeVersion
  fullName: System.Reflection.PortableExecutable.CorHeader.MinorRuntimeVersion
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/CorHeader.cs
    startLine: 8
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.PortableExecutable
  syntax:
    content: public ushort MinorRuntimeVersion { get; }
    content.vb: Public ReadOnly Property MinorRuntimeVersion As UShort
    parameters: []
    return:
      type: System.UInt16
- uid: System.Reflection.PortableExecutable.CorHeader.MetadataDirectory
  id: MetadataDirectory
  parent: System.Reflection.PortableExecutable.CorHeader
  href: System.Reflection.PortableExecutable.CorHeader.yml
  name: MetadataDirectory
  fullName: System.Reflection.PortableExecutable.CorHeader.MetadataDirectory
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/CorHeader.cs
    startLine: 9
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.PortableExecutable
  syntax:
    content: public DirectoryEntry MetadataDirectory { get; }
    content.vb: Public ReadOnly Property MetadataDirectory As DirectoryEntry
    parameters: []
    return:
      type: System.Reflection.PortableExecutable.DirectoryEntry
- uid: System.Reflection.PortableExecutable.CorHeader.Flags
  id: Flags
  parent: System.Reflection.PortableExecutable.CorHeader
  href: System.Reflection.PortableExecutable.CorHeader.yml
  name: Flags
  fullName: System.Reflection.PortableExecutable.CorHeader.Flags
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/CorHeader.cs
    startLine: 10
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.PortableExecutable
  syntax:
    content: public CorFlags Flags { get; }
    content.vb: Public ReadOnly Property Flags As CorFlags
    parameters: []
    return:
      type: System.Reflection.PortableExecutable.CorFlags
- uid: System.Reflection.PortableExecutable.CorHeader.EntryPointTokenOrRelativeVirtualAddress
  id: EntryPointTokenOrRelativeVirtualAddress
  parent: System.Reflection.PortableExecutable.CorHeader
  href: System.Reflection.PortableExecutable.CorHeader.yml
  name: EntryPointTokenOrRelativeVirtualAddress
  fullName: System.Reflection.PortableExecutable.CorHeader.EntryPointTokenOrRelativeVirtualAddress
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/CorHeader.cs
    startLine: 11
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.PortableExecutable
  syntax:
    content: public int EntryPointTokenOrRelativeVirtualAddress { get; }
    content.vb: Public ReadOnly Property EntryPointTokenOrRelativeVirtualAddress As Integer
    parameters: []
    return:
      type: System.Int32
- uid: System.Reflection.PortableExecutable.CorHeader.ResourcesDirectory
  id: ResourcesDirectory
  parent: System.Reflection.PortableExecutable.CorHeader
  href: System.Reflection.PortableExecutable.CorHeader.yml
  name: ResourcesDirectory
  fullName: System.Reflection.PortableExecutable.CorHeader.ResourcesDirectory
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/CorHeader.cs
    startLine: 12
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.PortableExecutable
  syntax:
    content: public DirectoryEntry ResourcesDirectory { get; }
    content.vb: Public ReadOnly Property ResourcesDirectory As DirectoryEntry
    parameters: []
    return:
      type: System.Reflection.PortableExecutable.DirectoryEntry
- uid: System.Reflection.PortableExecutable.CorHeader.StrongNameSignatureDirectory
  id: StrongNameSignatureDirectory
  parent: System.Reflection.PortableExecutable.CorHeader
  href: System.Reflection.PortableExecutable.CorHeader.yml
  name: StrongNameSignatureDirectory
  fullName: System.Reflection.PortableExecutable.CorHeader.StrongNameSignatureDirectory
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/CorHeader.cs
    startLine: 13
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.PortableExecutable
  syntax:
    content: public DirectoryEntry StrongNameSignatureDirectory { get; }
    content.vb: Public ReadOnly Property StrongNameSignatureDirectory As DirectoryEntry
    parameters: []
    return:
      type: System.Reflection.PortableExecutable.DirectoryEntry
- uid: System.Reflection.PortableExecutable.CorHeader.CodeManagerTableDirectory
  id: CodeManagerTableDirectory
  parent: System.Reflection.PortableExecutable.CorHeader
  href: System.Reflection.PortableExecutable.CorHeader.yml
  name: CodeManagerTableDirectory
  fullName: System.Reflection.PortableExecutable.CorHeader.CodeManagerTableDirectory
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/CorHeader.cs
    startLine: 14
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.PortableExecutable
  syntax:
    content: public DirectoryEntry CodeManagerTableDirectory { get; }
    content.vb: Public ReadOnly Property CodeManagerTableDirectory As DirectoryEntry
    parameters: []
    return:
      type: System.Reflection.PortableExecutable.DirectoryEntry
- uid: System.Reflection.PortableExecutable.CorHeader.VtableFixupsDirectory
  id: VtableFixupsDirectory
  parent: System.Reflection.PortableExecutable.CorHeader
  href: System.Reflection.PortableExecutable.CorHeader.yml
  name: VtableFixupsDirectory
  fullName: System.Reflection.PortableExecutable.CorHeader.VtableFixupsDirectory
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/CorHeader.cs
    startLine: 15
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.PortableExecutable
  syntax:
    content: public DirectoryEntry VtableFixupsDirectory { get; }
    content.vb: Public ReadOnly Property VtableFixupsDirectory As DirectoryEntry
    parameters: []
    return:
      type: System.Reflection.PortableExecutable.DirectoryEntry
- uid: System.Reflection.PortableExecutable.CorHeader.ExportAddressTableJumpsDirectory
  id: ExportAddressTableJumpsDirectory
  parent: System.Reflection.PortableExecutable.CorHeader
  href: System.Reflection.PortableExecutable.CorHeader.yml
  name: ExportAddressTableJumpsDirectory
  fullName: System.Reflection.PortableExecutable.CorHeader.ExportAddressTableJumpsDirectory
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/CorHeader.cs
    startLine: 16
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.PortableExecutable
  syntax:
    content: public DirectoryEntry ExportAddressTableJumpsDirectory { get; }
    content.vb: Public ReadOnly Property ExportAddressTableJumpsDirectory As DirectoryEntry
    parameters: []
    return:
      type: System.Reflection.PortableExecutable.DirectoryEntry
- uid: System.Reflection.PortableExecutable.CorHeader.ManagedNativeHeaderDirectory
  id: ManagedNativeHeaderDirectory
  parent: System.Reflection.PortableExecutable.CorHeader
  href: System.Reflection.PortableExecutable.CorHeader.yml
  name: ManagedNativeHeaderDirectory
  fullName: System.Reflection.PortableExecutable.CorHeader.ManagedNativeHeaderDirectory
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/PortableExecutable/CorHeader.cs
    startLine: 17
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.PortableExecutable
  syntax:
    content: public DirectoryEntry ManagedNativeHeaderDirectory { get; }
    content.vb: Public ReadOnly Property ManagedNativeHeaderDirectory As DirectoryEntry
    parameters: []
    return:
      type: System.Reflection.PortableExecutable.DirectoryEntry
references:
- uid: System.Reflection.PortableExecutable
  isExternal: false
  name: System.Reflection.PortableExecutable
  fullName: System.Reflection.PortableExecutable
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.UInt16
  parent: System
  isExternal: true
  name: UInt16
  fullName: System.UInt16
- uid: System.Reflection.PortableExecutable.DirectoryEntry
  parent: System.Reflection.PortableExecutable
  isExternal: false
  href: System.Reflection.PortableExecutable.DirectoryEntry.yml
  name: DirectoryEntry
  fullName: System.Reflection.PortableExecutable.DirectoryEntry
  type: Struct
- uid: System.Reflection.PortableExecutable.CorFlags
  parent: System.Reflection.PortableExecutable
  isExternal: false
  href: System.Reflection.PortableExecutable.CorFlags.yml
  name: CorFlags
  fullName: System.Reflection.PortableExecutable.CorFlags
  type: Enum
  summary: COR20Flags
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
