items:
- uid: System.Linq.Expressions.ExpressionVisitor
  id: ExpressionVisitor
  parent: System.Linq.Expressions
  children:
  - System.Linq.Expressions.ExpressionVisitor.#ctor
  - System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})
  - System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})
  - System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)
  - System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)
  - System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)
  - System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)
  - System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)
  - System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)
  - System.Linq.Expressions.ExpressionVisitor.VisitLambda(System.Linq.Expressions.LambdaExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})
  - System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
  - System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)
  - System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
  - System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
  - System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)
  - System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  - System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: ExpressionVisitor
  fullName: System.Linq.Expressions.ExpressionVisitor
  type: Class
  source:
    remote: &o0
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 20
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Represents a visitor or rewriter for expression trees.
  remarks: >-
    This class is designed to be inherited to create more specialized

    classes whose functionality requires traversing, examining or copying

    an expression tree.
  syntax:
    content: public abstract class ExpressionVisitor
    content.vb: Public MustInherit Class ExpressionVisitor
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Linq.Expressions.ExpressionVisitor.#ctor
  id: '#ctor'
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: ExpressionVisitor()
  fullName: System.Linq.Expressions.ExpressionVisitor.ExpressionVisitor()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 25
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Initializes a new instance of [System.Linq.Expressions.ExpressionVisitor](System.Linq.Expressions.ExpressionVisitor.yml).
  syntax:
    content: protected ExpressionVisitor()
    content.vb: Protected Sub New
- uid: System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)
  id: Visit(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: Visit(Expression)
  fullName: System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 35
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Dispatches the expression to one of the more specialized visit methods in this class.
  syntax:
    content: public virtual Expression Visit(Expression node)
    content.vb: Public Overridable Function Visit(node As Expression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.Expression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})
  id: Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: Visit(ReadOnlyCollection<Expression>)
  name.vb: Visit(ReadOnlyCollection(Of Expression))
  fullName: System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression>)
  fullName.vb: System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection(Of System.Linq.Expressions.Expression))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 50
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Dispatches the list of expressions to one of the more specialized visit methods in this class.
  syntax:
    content: public ReadOnlyCollection<Expression> Visit(ReadOnlyCollection<Expression> nodes)
    content.vb: Public Function Visit(nodes As ReadOnlyCollection(Of Expression)) As ReadOnlyCollection(Of Expression)
    parameters:
    - id: nodes
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}
      description: The expressions to visit.
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}
      description: >-
        The modified expression list, if any of the elements were modified;

        otherwise, returns the original expression list.
- uid: System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})
  id: Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: Visit<T>(ReadOnlyCollection<T>, Func<T, T>)
  name.vb: Visit(Of T)(ReadOnlyCollection(Of T), Func(Of T, T))
  fullName: System.Linq.Expressions.ExpressionVisitor.Visit<T>(System.Collections.ObjectModel.ReadOnlyCollection<T>, System.Func<T, T>)
  fullName.vb: System.Linq.Expressions.ExpressionVisitor.Visit(Of T)(System.Collections.ObjectModel.ReadOnlyCollection(Of T), System.Func(Of T, T))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 92
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits all nodes in the collection using a specified element visitor.
  syntax:
    content: public static ReadOnlyCollection<T> Visit<T>(ReadOnlyCollection<T> nodes, Func<T, T> elementVisitor)
    content.vb: Public Shared Function Visit(Of T)(nodes As ReadOnlyCollection(Of T), elementVisitor As Func(Of T, T)) As ReadOnlyCollection(Of T)
    parameters:
    - id: nodes
      type: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
      description: The nodes to visit.
    - id: elementVisitor
      type: System.Func{{T},{T}}
      description: >-
        A delegate that visits a single element,

        optionally replacing it with a new element.
    typeParameters:
    - id: T
      description: The type of the nodes.
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
      description: >-
        The modified node list, if any of the elements were modified;

        otherwise, returns the original node list.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)
  id: VisitAndConvert``1(``0,System.String)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitAndConvert<T>(T, String)
  name.vb: VisitAndConvert(Of T)(T, String)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>(T, System.String)
  fullName.vb: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert(Of T)(T, System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 128
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits an expression, casting the result back to the original expression type.
  syntax:
    content: 'public T VisitAndConvert<T>(T node, string callerName)where T : Expression'
    content.vb: Public Function VisitAndConvert(Of T As Expression)(node As T, callerName As String) As T
    parameters:
    - id: node
      type: '{T}'
      description: The expression to visit.
    - id: callerName
      type: System.String
      description: The name of the calling method; used to report to report a better error message.
    typeParameters:
    - id: T
      description: The type of the expression.
    return:
      type: '{T}'
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  exceptions:
  - type: System.InvalidOperationException
    description: The visit method for this node returned a different type.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)
  id: VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitAndConvert<T>(ReadOnlyCollection<T>, String)
  name.vb: VisitAndConvert(Of T)(ReadOnlyCollection(Of T), String)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert<T>(System.Collections.ObjectModel.ReadOnlyCollection<T>, System.String)
  fullName.vb: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert(Of T)(System.Collections.ObjectModel.ReadOnlyCollection(Of T), System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 151
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits an expression, casting the result back to the original expression type.
  syntax:
    content: 'public ReadOnlyCollection<T> VisitAndConvert<T>(ReadOnlyCollection<T> nodes, string callerName)where T : Expression'
    content.vb: Public Function VisitAndConvert(Of T As Expression)(nodes As ReadOnlyCollection(Of T), callerName As String) As ReadOnlyCollection(Of T)
    parameters:
    - id: nodes
      type: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
      description: The expression to visit.
    - id: callerName
      type: System.String
      description: The name of the calling method; used to report to report a better error message.
    typeParameters:
    - id: T
      description: The type of the expression.
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
  exceptions:
  - type: System.InvalidOperationException
    description: The visit method for this node returned a different type.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)
  id: VisitBinary(System.Linq.Expressions.BinaryExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitBinary(BinaryExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 189
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the [System.Linq.Expressions.BinaryExpression](System.Linq.Expressions.BinaryExpression.yml).
  syntax:
    content: protected virtual Expression VisitBinary(BinaryExpression node)
    content.vb: Protected Overridable Function VisitBinary(node As BinaryExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.BinaryExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)
  id: VisitBlock(System.Linq.Expressions.BlockExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitBlock(BlockExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 208
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the [System.Linq.Expressions.BlockExpression](System.Linq.Expressions.BlockExpression.yml).
  syntax:
    content: protected virtual Expression VisitBlock(BlockExpression node)
    content.vb: Protected Overridable Function VisitBlock(node As BlockExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.BlockExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  id: VisitConditional(System.Linq.Expressions.ConditionalExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitConditional(ConditionalExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 252
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the [System.Linq.Expressions.ConditionalExpression](System.Linq.Expressions.ConditionalExpression.yml).
  syntax:
    content: protected virtual Expression VisitConditional(ConditionalExpression node)
    content.vb: Protected Overridable Function VisitConditional(node As ConditionalExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.ConditionalExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)
  id: VisitConstant(System.Linq.Expressions.ConstantExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitConstant(ConstantExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 263
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the [System.Linq.Expressions.ConstantExpression](System.Linq.Expressions.ConstantExpression.yml).
  syntax:
    content: protected virtual Expression VisitConstant(ConstantExpression node)
    content.vb: Protected Overridable Function VisitConstant(node As ConstantExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.ConstantExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
  id: VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitDebugInfo(DebugInfoExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 274
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the [System.Linq.Expressions.DebugInfoExpression](System.Linq.Expressions.DebugInfoExpression.yml).
  syntax:
    content: protected virtual Expression VisitDebugInfo(DebugInfoExpression node)
    content.vb: Protected Overridable Function VisitDebugInfo(node As DebugInfoExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.DebugInfoExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)
  id: VisitDefault(System.Linq.Expressions.DefaultExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitDefault(DefaultExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 285
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the [System.Linq.Expressions.DefaultExpression](System.Linq.Expressions.DefaultExpression.yml).
  syntax:
    content: protected virtual Expression VisitDefault(DefaultExpression node)
    content.vb: Protected Overridable Function VisitDefault(node As DefaultExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.DefaultExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)
  id: VisitExtension(System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitExtension(Expression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 302
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the extension expression.
  remarks: >-
    This can be overridden to visit or rewrite specific extension nodes.

    If it is not overridden, this method will call <see cref="M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" />,

    which gives the node a chance to walk its children. By default,

    <see cref="M:System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)" /> will try to reduce the node.
  syntax:
    content: protected virtual Expression VisitExtension(Expression node)
    content.vb: Protected Overridable Function VisitExtension(node As Expression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.Expression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)
  id: VisitGoto(System.Linq.Expressions.GotoExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitGoto(GotoExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 313
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the [System.Linq.Expressions.GotoExpression](System.Linq.Expressions.GotoExpression.yml).
  syntax:
    content: protected virtual Expression VisitGoto(GotoExpression node)
    content.vb: Protected Overridable Function VisitGoto(node As GotoExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.GotoExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)
  id: VisitInvocation(System.Linq.Expressions.InvocationExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitInvocation(InvocationExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 324
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the [System.Linq.Expressions.InvocationExpression](System.Linq.Expressions.InvocationExpression.yml).
  syntax:
    content: protected virtual Expression VisitInvocation(InvocationExpression node)
    content.vb: Protected Overridable Function VisitInvocation(node As InvocationExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.InvocationExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)
  id: VisitLabelTarget(System.Linq.Expressions.LabelTarget)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitLabelTarget(LabelTarget)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 342
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the [System.Linq.Expressions.LabelTarget](System.Linq.Expressions.LabelTarget.yml).
  syntax:
    content: protected virtual LabelTarget VisitLabelTarget(LabelTarget node)
    content.vb: Protected Overridable Function VisitLabelTarget(node As LabelTarget) As LabelTarget
    parameters:
    - id: node
      type: System.Linq.Expressions.LabelTarget
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.LabelTarget
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)
  id: VisitLabel(System.Linq.Expressions.LabelExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitLabel(LabelExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 353
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the [System.Linq.Expressions.LabelExpression](System.Linq.Expressions.LabelExpression.yml).
  syntax:
    content: protected virtual Expression VisitLabel(LabelExpression node)
    content.vb: Protected Overridable Function VisitLabel(node As LabelExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.LabelExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})
  id: VisitLambda``1(System.Linq.Expressions.Expression{``0})
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitLambda<T>(Expression<T>)
  name.vb: VisitLambda(Of T)(Expression(Of T))
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitLambda<T>(System.Linq.Expressions.Expression<T>)
  fullName.vb: System.Linq.Expressions.ExpressionVisitor.VisitLambda(Of T)(System.Linq.Expressions.Expression(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 365
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the [System.Linq.Expressions.Expression`1](System.Linq.Expressions.Expression`1.yml).
  syntax:
    content: protected virtual Expression VisitLambda<T>(Expression<T> node)
    content.vb: Protected Overridable Function VisitLambda(Of T)(node As Expression(Of T)) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.Expression{{T}}
      description: The expression to visit.
    typeParameters:
    - id: T
      description: The type of the delegate.
    return:
      type: System.Linq.Expressions.Expression
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitLambda(System.Linq.Expressions.LambdaExpression)
  id: VisitLambda(System.Linq.Expressions.LambdaExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitLambda(LambdaExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitLambda(System.Linq.Expressions.LambdaExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 377
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the [System.Linq.Expressions.LambdaExpression](System.Linq.Expressions.LambdaExpression.yml).
  syntax:
    content: protected virtual Expression VisitLambda(LambdaExpression node)
    content.vb: Protected Overridable Function VisitLambda(node As LambdaExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.LambdaExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)
  id: VisitLoop(System.Linq.Expressions.LoopExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitLoop(LoopExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 388
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the [System.Linq.Expressions.LoopExpression](System.Linq.Expressions.LoopExpression.yml).
  syntax:
    content: protected virtual Expression VisitLoop(LoopExpression node)
    content.vb: Protected Overridable Function VisitLoop(node As LoopExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.LoopExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)
  id: VisitMember(System.Linq.Expressions.MemberExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitMember(MemberExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 399
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the [System.Linq.Expressions.MemberExpression](System.Linq.Expressions.MemberExpression.yml).
  syntax:
    content: protected virtual Expression VisitMember(MemberExpression node)
    content.vb: Protected Overridable Function VisitMember(node As MemberExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.MemberExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)
  id: VisitIndex(System.Linq.Expressions.IndexExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitIndex(IndexExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 410
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the [System.Linq.Expressions.IndexExpression](System.Linq.Expressions.IndexExpression.yml).
  syntax:
    content: protected virtual Expression VisitIndex(IndexExpression node)
    content.vb: Protected Overridable Function VisitIndex(node As IndexExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.IndexExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  id: VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitMethodCall(MethodCallExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 428
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the [System.Linq.Expressions.MethodCallExpression](System.Linq.Expressions.MethodCallExpression.yml).
  syntax:
    content: protected virtual Expression VisitMethodCall(MethodCallExpression node)
    content.vb: Protected Overridable Function VisitMethodCall(node As MethodCallExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.MethodCallExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
  id: VisitNewArray(System.Linq.Expressions.NewArrayExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitNewArray(NewArrayExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 446
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the [System.Linq.Expressions.NewArrayExpression](System.Linq.Expressions.NewArrayExpression.yml).
  syntax:
    content: protected virtual Expression VisitNewArray(NewArrayExpression node)
    content.vb: Protected Overridable Function VisitNewArray(node As NewArrayExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.NewArrayExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)
  id: VisitNew(System.Linq.Expressions.NewExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitNew(NewExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 457
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the [System.Linq.Expressions.NewExpression](System.Linq.Expressions.NewExpression.yml).
  syntax:
    content: protected virtual Expression VisitNew(NewExpression node)
    content.vb: Protected Overridable Function VisitNew(node As NewExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.NewExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)
  id: VisitParameter(System.Linq.Expressions.ParameterExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitParameter(ParameterExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 469
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the [System.Linq.Expressions.ParameterExpression](System.Linq.Expressions.ParameterExpression.yml).
  syntax:
    content: protected virtual Expression VisitParameter(ParameterExpression node)
    content.vb: Protected Overridable Function VisitParameter(node As ParameterExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.ParameterExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
  id: VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitRuntimeVariables(RuntimeVariablesExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 480
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the [System.Linq.Expressions.RuntimeVariablesExpression](System.Linq.Expressions.RuntimeVariablesExpression.yml).
  syntax:
    content: protected virtual Expression VisitRuntimeVariables(RuntimeVariablesExpression node)
    content.vb: Protected Overridable Function VisitRuntimeVariables(node As RuntimeVariablesExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.RuntimeVariablesExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)
  id: VisitSwitchCase(System.Linq.Expressions.SwitchCase)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitSwitchCase(SwitchCase)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 491
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the [System.Linq.Expressions.SwitchCase](System.Linq.Expressions.SwitchCase.yml).
  syntax:
    content: protected virtual SwitchCase VisitSwitchCase(SwitchCase node)
    content.vb: Protected Overridable Function VisitSwitchCase(node As SwitchCase) As SwitchCase
    parameters:
    - id: node
      type: System.Linq.Expressions.SwitchCase
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.SwitchCase
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)
  id: VisitSwitch(System.Linq.Expressions.SwitchExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitSwitch(SwitchExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 502
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the [System.Linq.Expressions.SwitchExpression](System.Linq.Expressions.SwitchExpression.yml).
  syntax:
    content: protected virtual Expression VisitSwitch(SwitchExpression node)
    content.vb: Protected Overridable Function VisitSwitch(node As SwitchExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.SwitchExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)
  id: VisitCatchBlock(System.Linq.Expressions.CatchBlock)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitCatchBlock(CatchBlock)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 520
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the [System.Linq.Expressions.CatchBlock](System.Linq.Expressions.CatchBlock.yml).
  syntax:
    content: protected virtual CatchBlock VisitCatchBlock(CatchBlock node)
    content.vb: Protected Overridable Function VisitCatchBlock(node As CatchBlock) As CatchBlock
    parameters:
    - id: node
      type: System.Linq.Expressions.CatchBlock
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.CatchBlock
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)
  id: VisitTry(System.Linq.Expressions.TryExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitTry(TryExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 531
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the [System.Linq.Expressions.TryExpression](System.Linq.Expressions.TryExpression.yml).
  syntax:
    content: protected virtual Expression VisitTry(TryExpression node)
    content.vb: Protected Overridable Function VisitTry(node As TryExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.TryExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  id: VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitTypeBinary(TypeBinaryExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 547
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the [System.Linq.Expressions.TypeBinaryExpression](System.Linq.Expressions.TypeBinaryExpression.yml).
  syntax:
    content: protected virtual Expression VisitTypeBinary(TypeBinaryExpression node)
    content.vb: Protected Overridable Function VisitTypeBinary(node As TypeBinaryExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.TypeBinaryExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)
  id: VisitUnary(System.Linq.Expressions.UnaryExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitUnary(UnaryExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 558
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the [System.Linq.Expressions.UnaryExpression](System.Linq.Expressions.UnaryExpression.yml).
  syntax:
    content: protected virtual Expression VisitUnary(UnaryExpression node)
    content.vb: Protected Overridable Function VisitUnary(node As UnaryExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.UnaryExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  id: VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitMemberInit(MemberInitExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 569
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the [System.Linq.Expressions.MemberInitExpression](System.Linq.Expressions.MemberInitExpression.yml).
  syntax:
    content: protected virtual Expression VisitMemberInit(MemberInitExpression node)
    content.vb: Protected Overridable Function VisitMemberInit(node As MemberInitExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.MemberInitExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)
  id: VisitListInit(System.Linq.Expressions.ListInitExpression)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitListInit(ListInitExpression)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 583
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the [System.Linq.Expressions.ListInitExpression](System.Linq.Expressions.ListInitExpression.yml).
  syntax:
    content: protected virtual Expression VisitListInit(ListInitExpression node)
    content.vb: Protected Overridable Function VisitListInit(node As ListInitExpression) As Expression
    parameters:
    - id: node
      type: System.Linq.Expressions.ListInitExpression
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.Expression
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)
  id: VisitElementInit(System.Linq.Expressions.ElementInit)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitElementInit(ElementInit)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 597
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the [System.Linq.Expressions.ElementInit](System.Linq.Expressions.ElementInit.yml).
  syntax:
    content: protected virtual ElementInit VisitElementInit(ElementInit node)
    content.vb: Protected Overridable Function VisitElementInit(node As ElementInit) As ElementInit
    parameters:
    - id: node
      type: System.Linq.Expressions.ElementInit
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.ElementInit
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)
  id: VisitMemberBinding(System.Linq.Expressions.MemberBinding)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitMemberBinding(MemberBinding)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 608
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the [System.Linq.Expressions.MemberBinding](System.Linq.Expressions.MemberBinding.yml).
  syntax:
    content: protected virtual MemberBinding VisitMemberBinding(MemberBinding node)
    content.vb: Protected Overridable Function VisitMemberBinding(node As MemberBinding) As MemberBinding
    parameters:
    - id: node
      type: System.Linq.Expressions.MemberBinding
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.MemberBinding
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
  id: VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitMemberAssignment(MemberAssignment)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 629
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the [System.Linq.Expressions.MemberAssignment](System.Linq.Expressions.MemberAssignment.yml).
  syntax:
    content: protected virtual MemberAssignment VisitMemberAssignment(MemberAssignment node)
    content.vb: Protected Overridable Function VisitMemberAssignment(node As MemberAssignment) As MemberAssignment
    parameters:
    - id: node
      type: System.Linq.Expressions.MemberAssignment
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.MemberAssignment
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
  id: VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitMemberMemberBinding(MemberMemberBinding)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 640
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the [System.Linq.Expressions.MemberMemberBinding](System.Linq.Expressions.MemberMemberBinding.yml).
  syntax:
    content: protected virtual MemberMemberBinding VisitMemberMemberBinding(MemberMemberBinding node)
    content.vb: Protected Overridable Function VisitMemberMemberBinding(node As MemberMemberBinding) As MemberMemberBinding
    parameters:
    - id: node
      type: System.Linq.Expressions.MemberMemberBinding
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.MemberMemberBinding
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
  id: VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
  parent: System.Linq.Expressions.ExpressionVisitor
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: VisitMemberListBinding(MemberListBinding)
  fullName: System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/ExpressionVisitor.cs
    startLine: 651
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Visits the children of the [System.Linq.Expressions.MemberListBinding](System.Linq.Expressions.MemberListBinding.yml).
  syntax:
    content: protected virtual MemberListBinding VisitMemberListBinding(MemberListBinding node)
    content.vb: Protected Overridable Function VisitMemberListBinding(node As MemberListBinding) As MemberListBinding
    parameters:
    - id: node
      type: System.Linq.Expressions.MemberListBinding
      description: The expression to visit.
    return:
      type: System.Linq.Expressions.MemberListBinding
      description: >-
        The modified expression, if it or any subexpression was modified;

        otherwise, returns the original expression.
references:
- uid: System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  fullName: System.Linq.Expressions
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Linq.Expressions.ExpressionVisitor
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.ExpressionVisitor.yml
  name: ExpressionVisitor
  fullName: System.Linq.Expressions.ExpressionVisitor
  type: Class
  summary: Represents a visitor or rewriter for expression trees.
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.Expression.yml
  name: Expression
  fullName: System.Linq.Expressions.Expression
  type: Class
  summary: The base type for all nodes in Expression Trees.
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: System.Linq.Expressions.Expression.yml
  name: ReadOnlyCollection<Expression>
  name.vb: ReadOnlyCollection(Of Expression)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Linq.Expressions.Expression>
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of System.Linq.Expressions.Expression)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
    href: System.Linq.Expressions.Expression.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.Expressions.Expression
    name: Expression
    fullName: System.Linq.Expressions.Expression
    href: System.Linq.Expressions.Expression.yml
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<T>
  name.vb: ReadOnlyCollection(Of T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  type: Namespace
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<T>
  name.vb: ReadOnlyCollection(Of T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Func{{T},{T}}
  parent: System
  definition: System.Func`2
  name: Func<T, T>
  name.vb: Func(Of T, T)
  fullName: System.Func<T, T>
  fullName.vb: System.Func(Of T, T)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: ', '
    fullName: ', '
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: ', '
    fullName: ', '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Func`2
  parent: System
  isExternal: true
  name: Func<T, TResult>
  name.vb: Func(Of T, TResult)
  fullName: System.Func<T, TResult>
  fullName.vb: System.Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.InvalidOperationException
  parent: System
  isExternal: true
  name: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Linq.Expressions.BinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.BinaryExpression.yml
  name: BinaryExpression
  fullName: System.Linq.Expressions.BinaryExpression
  type: Class
  summary: Represents an expression that has a binary operator.
- uid: System.Linq.Expressions.BlockExpression
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.BlockExpression.yml
  name: BlockExpression
  fullName: System.Linq.Expressions.BlockExpression
  type: Class
  summary: Represents a block that contains a sequence of expressions where variables can be defined.
- uid: System.Linq.Expressions.ConditionalExpression
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.ConditionalExpression.yml
  name: ConditionalExpression
  fullName: System.Linq.Expressions.ConditionalExpression
  type: Class
  summary: Represents an expression that has a conditional operator.
- uid: System.Linq.Expressions.ConstantExpression
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.ConstantExpression.yml
  name: ConstantExpression
  fullName: System.Linq.Expressions.ConstantExpression
  type: Class
  summary: Represents an expression that has a constant value.
- uid: System.Linq.Expressions.DebugInfoExpression
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.DebugInfoExpression.yml
  name: DebugInfoExpression
  fullName: System.Linq.Expressions.DebugInfoExpression
  type: Class
  summary: >-
    Emits or clears a sequence point for debug information.



    This allows the debugger to highlight the correct source code when

    debugging.
- uid: System.Linq.Expressions.DefaultExpression
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.DefaultExpression.yml
  name: DefaultExpression
  fullName: System.Linq.Expressions.DefaultExpression
  type: Class
  summary: Represents the default value of a type or an empty expression.
- uid: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)
  parent: System.Linq.Expressions.Expression
  isExternal: false
  href: System.Linq.Expressions.Expression.yml
  name: VisitChildren(ExpressionVisitor)
  fullName: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)
    name: VisitChildren
    fullName: System.Linq.Expressions.Expression.VisitChildren
    href: System.Linq.Expressions.Expression.yml
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.ExpressionVisitor
    name: ExpressionVisitor
    fullName: System.Linq.Expressions.ExpressionVisitor
    href: System.Linq.Expressions.ExpressionVisitor.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Linq.Expressions.Expression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)
    name: VisitChildren
    fullName: System.Linq.Expressions.Expression.VisitChildren
    href: System.Linq.Expressions.Expression.yml
  - name: (
    fullName: (
  - uid: System.Linq.Expressions.ExpressionVisitor
    name: ExpressionVisitor
    fullName: System.Linq.Expressions.ExpressionVisitor
    href: System.Linq.Expressions.ExpressionVisitor.yml
  - name: )
    fullName: )
- uid: System.Linq.Expressions.GotoExpression
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.GotoExpression.yml
  name: GotoExpression
  fullName: System.Linq.Expressions.GotoExpression
  type: Class
  summary: Represents an unconditional jump. This includes return statements, break and continue statements, and other jumps.
- uid: System.Linq.Expressions.InvocationExpression
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.InvocationExpression.yml
  name: InvocationExpression
  fullName: System.Linq.Expressions.InvocationExpression
  type: Class
  summary: Represents an expression that applies a delegate or lambda expression to a list of argument expressions.
- uid: System.Linq.Expressions.LabelTarget
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.LabelTarget.yml
  name: LabelTarget
  fullName: System.Linq.Expressions.LabelTarget
  type: Class
  summary: Used to denote the target of a @'System.Linq.Expressions.GotoExpression'.
- uid: System.Linq.Expressions.LabelExpression
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.LabelExpression.yml
  name: LabelExpression
  fullName: System.Linq.Expressions.LabelExpression
  type: Class
  summary: >-
    Represents a label, which can be placed in any @'System.Linq.Expressions.Expression' context. If

    it is jumped to, it will get the value provided by the corresponding

    @'System.Linq.Expressions.GotoExpression'. Otherwise, it gets the value in @'System.Linq.Expressions.LabelExpression.DefaultValue'. If the

    @'System.Linq.Expressions.LabelExpression.Type' equals System.Void, no value should be provided.
- uid: System.Linq.Expressions.Expression`1
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.Expression`1.yml
  name: Expression<TDelegate>
  name.vb: Expression(Of TDelegate)
  fullName: System.Linq.Expressions.Expression<TDelegate>
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  type: Class
  summary: >-
    Defines a @'System.Linq.Expressions.Expression`1' node.

    This captures a block of code that is similar to a .NET method body.
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    fullName: System.Linq.Expressions.Expression
    href: System.Linq.Expressions.Expression`1.yml
  - name: <
    fullName: <
  - name: TDelegate
    fullName: TDelegate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    fullName: System.Linq.Expressions.Expression
    href: System.Linq.Expressions.Expression`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TDelegate
    fullName: TDelegate
  - name: )
    fullName: )
- uid: System.Linq.Expressions.Expression{{T}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: System.Linq.Expressions.Expression`1.yml
  name: Expression<T>
  name.vb: Expression(Of T)
  fullName: System.Linq.Expressions.Expression<T>
  fullName.vb: System.Linq.Expressions.Expression(Of T)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    fullName: System.Linq.Expressions.Expression
    href: System.Linq.Expressions.Expression`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    fullName: System.Linq.Expressions.Expression
    href: System.Linq.Expressions.Expression`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Linq.Expressions.LambdaExpression
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.LambdaExpression.yml
  name: LambdaExpression
  fullName: System.Linq.Expressions.LambdaExpression
  type: Class
  summary: >-
    Creates a @'System.Linq.Expressions.LambdaExpression' node.

    This captures a block of code that is similar to a .NET method body.
- uid: System.Linq.Expressions.LoopExpression
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.LoopExpression.yml
  name: LoopExpression
  fullName: System.Linq.Expressions.LoopExpression
  type: Class
  summary: Represents an infinite loop. It can be exited with "break".
- uid: System.Linq.Expressions.MemberExpression
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.MemberExpression.yml
  name: MemberExpression
  fullName: System.Linq.Expressions.MemberExpression
  type: Class
  summary: Represents accessing a field or property.
- uid: System.Linq.Expressions.IndexExpression
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.IndexExpression.yml
  name: IndexExpression
  fullName: System.Linq.Expressions.IndexExpression
  type: Class
  summary: Represents indexing a property or array.
- uid: System.Linq.Expressions.MethodCallExpression
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.MethodCallExpression.yml
  name: MethodCallExpression
  fullName: System.Linq.Expressions.MethodCallExpression
  type: Class
  summary: Represents a call to either static or an instance method.
- uid: System.Linq.Expressions.NewArrayExpression
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.NewArrayExpression.yml
  name: NewArrayExpression
  fullName: System.Linq.Expressions.NewArrayExpression
  type: Class
  summary: Represents creating a new array and possibly initializing the elements of the new array.
- uid: System.Linq.Expressions.NewExpression
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.NewExpression.yml
  name: NewExpression
  fullName: System.Linq.Expressions.NewExpression
  type: Class
  summary: Represents a constructor call.
- uid: System.Linq.Expressions.ParameterExpression
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.ParameterExpression.yml
  name: ParameterExpression
  fullName: System.Linq.Expressions.ParameterExpression
  type: Class
  summary: Represents a named parameter expression.
- uid: System.Linq.Expressions.RuntimeVariablesExpression
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.RuntimeVariablesExpression.yml
  name: RuntimeVariablesExpression
  fullName: System.Linq.Expressions.RuntimeVariablesExpression
  type: Class
  summary: >-
    An expression that provides runtime read/write access to variables.

    Needed to implement "eval" in some dynamic languages.

    Evaluates to an instance of @'System.Collections.Generic.IList`1' when executed.
- uid: System.Linq.Expressions.SwitchCase
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.SwitchCase.yml
  name: SwitchCase
  fullName: System.Linq.Expressions.SwitchCase
  type: Class
  summary: Represents one case of a @'System.Linq.Expressions.SwitchExpression'.
- uid: System.Linq.Expressions.SwitchExpression
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.SwitchExpression.yml
  name: SwitchExpression
  fullName: System.Linq.Expressions.SwitchExpression
  type: Class
  summary: Represents a control expression that handles multiple selections by passing control to a @'System.Linq.Expressions.SwitchCase'.
- uid: System.Linq.Expressions.CatchBlock
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.CatchBlock.yml
  name: CatchBlock
  fullName: System.Linq.Expressions.CatchBlock
  type: Class
  summary: >-
    Represents a catch statement in a try block.

    This must have the same return type (i.e., the type of @'CatchBlock.Body') as the try block it is associated with.
- uid: System.Linq.Expressions.TryExpression
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.TryExpression.yml
  name: TryExpression
  fullName: System.Linq.Expressions.TryExpression
  type: Class
  summary: >-
    Represents a try/catch/finally/fault block.



    The body is protected by the try block.

    The handlers consist of a set of @'System.Linq.Expressions.CatchBlock's that can either be catch or filters.

    The fault runs if an exception is thrown.

    The finally runs regardless of how control exits the body.

    Only one of fault or finally can be supplied.

    The return type of the try block must match the return type of any associated catch statements.
- uid: System.Linq.Expressions.TypeBinaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.TypeBinaryExpression.yml
  name: TypeBinaryExpression
  fullName: System.Linq.Expressions.TypeBinaryExpression
  type: Class
  summary: Represents an operation between an expression and a type.
- uid: System.Linq.Expressions.UnaryExpression
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.UnaryExpression.yml
  name: UnaryExpression
  fullName: System.Linq.Expressions.UnaryExpression
  type: Class
  summary: Represents an expression that has a unary operator.
- uid: System.Linq.Expressions.MemberInitExpression
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.MemberInitExpression.yml
  name: MemberInitExpression
  fullName: System.Linq.Expressions.MemberInitExpression
  type: Class
  summary: Represents calling a constructor and initializing one or more members of the new object.
- uid: System.Linq.Expressions.ListInitExpression
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.ListInitExpression.yml
  name: ListInitExpression
  fullName: System.Linq.Expressions.ListInitExpression
  type: Class
  summary: Represents a constructor call that has a collection initializer.
- uid: System.Linq.Expressions.ElementInit
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.ElementInit.yml
  name: ElementInit
  fullName: System.Linq.Expressions.ElementInit
  type: Class
  summary: Represents the initialization of a list.
- uid: System.Linq.Expressions.MemberBinding
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.MemberBinding.yml
  name: MemberBinding
  fullName: System.Linq.Expressions.MemberBinding
  type: Class
  summary: Provides the base class from which the classes that represent bindings that are used to initialize members of a newly created object derive.
- uid: System.Linq.Expressions.MemberAssignment
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.MemberAssignment.yml
  name: MemberAssignment
  fullName: System.Linq.Expressions.MemberAssignment
  type: Class
  summary: Represents assignment to a member of an object.
- uid: System.Linq.Expressions.MemberMemberBinding
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.MemberMemberBinding.yml
  name: MemberMemberBinding
  fullName: System.Linq.Expressions.MemberMemberBinding
  type: Class
  summary: Represents initializing members of a member of a newly created object.
- uid: System.Linq.Expressions.MemberListBinding
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.MemberListBinding.yml
  name: MemberListBinding
  fullName: System.Linq.Expressions.MemberListBinding
  type: Class
  summary: Represents initializing the elements of a collection member of a newly created object.
