items:
- uid: System.Runtime.CompilerServices.CallSiteOps
  id: CallSiteOps
  parent: System.Runtime.CompilerServices
  children:
  - System.Runtime.CompilerServices.CallSiteOps.AddRule``1(System.Runtime.CompilerServices.CallSite{``0},``0)
  - System.Runtime.CompilerServices.CallSiteOps.Bind``1(System.Runtime.CompilerServices.CallSiteBinder,System.Runtime.CompilerServices.CallSite{``0},System.Object[])
  - System.Runtime.CompilerServices.CallSiteOps.ClearMatch(System.Runtime.CompilerServices.CallSite)
  - System.Runtime.CompilerServices.CallSiteOps.CreateMatchmaker``1(System.Runtime.CompilerServices.CallSite{``0})
  - System.Runtime.CompilerServices.CallSiteOps.GetCachedRules``1(System.Runtime.CompilerServices.RuleCache{``0})
  - System.Runtime.CompilerServices.CallSiteOps.GetMatch(System.Runtime.CompilerServices.CallSite)
  - System.Runtime.CompilerServices.CallSiteOps.GetRuleCache``1(System.Runtime.CompilerServices.CallSite{``0})
  - System.Runtime.CompilerServices.CallSiteOps.GetRules``1(System.Runtime.CompilerServices.CallSite{``0})
  - System.Runtime.CompilerServices.CallSiteOps.MoveRule``1(System.Runtime.CompilerServices.RuleCache{``0},``0,System.Int32)
  - System.Runtime.CompilerServices.CallSiteOps.SetNotMatched(System.Runtime.CompilerServices.CallSite)
  - System.Runtime.CompilerServices.CallSiteOps.UpdateRules``1(System.Runtime.CompilerServices.CallSite{``0},System.Int32)
  href: System.Runtime.CompilerServices.CallSiteOps.yml
  name: CallSiteOps
  fullName: System.Runtime.CompilerServices.CallSiteOps
  type: Class
  source:
    remote: &o0
      path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSiteOps.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSiteOps.cs
    startLine: 16
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Runtime.CompilerServices
  summary: This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.
  syntax:
    content: public class CallSiteOps
    content.vb: Public Class CallSiteOps
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Runtime.CompilerServices.CallSiteOps.CreateMatchmaker``1(System.Runtime.CompilerServices.CallSite{``0})
  id: CreateMatchmaker``1(System.Runtime.CompilerServices.CallSite{``0})
  parent: System.Runtime.CompilerServices.CallSiteOps
  href: System.Runtime.CompilerServices.CallSiteOps.yml
  name: CreateMatchmaker<T>(CallSite<T>)
  name.vb: CreateMatchmaker(Of T)(CallSite(Of T))
  fullName: System.Runtime.CompilerServices.CallSiteOps.CreateMatchmaker<T>(System.Runtime.CompilerServices.CallSite<T>)
  fullName.vb: System.Runtime.CompilerServices.CallSiteOps.CreateMatchmaker(Of T)(System.Runtime.CompilerServices.CallSite(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSiteOps.cs
    startLine: 24
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Runtime.CompilerServices
  summary: Creates an instance of a dynamic call site used for cache lookup.
  syntax:
    content: 'public static CallSite<T> CreateMatchmaker<T>(CallSite<T> site)where T : class'
    content.vb: Public Shared Function CreateMatchmaker(Of T As Class)(site As CallSite(Of T)) As CallSite(Of T)
    parameters:
    - id: site
      type: System.Runtime.CompilerServices.CallSite{{T}}
    typeParameters:
    - id: T
      description: The type of the delegate of the @'System.Runtime.CompilerServices.CallSite'.
    return:
      type: System.Runtime.CompilerServices.CallSite{{T}}
      description: The new call site.
- uid: System.Runtime.CompilerServices.CallSiteOps.SetNotMatched(System.Runtime.CompilerServices.CallSite)
  id: SetNotMatched(System.Runtime.CompilerServices.CallSite)
  parent: System.Runtime.CompilerServices.CallSiteOps
  href: System.Runtime.CompilerServices.CallSiteOps.yml
  name: SetNotMatched(CallSite)
  fullName: System.Runtime.CompilerServices.CallSiteOps.SetNotMatched(System.Runtime.CompilerServices.CallSite)
  type: Method
  source:
    remote: *o0
    path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSiteOps.cs
    startLine: 38
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Runtime.CompilerServices
  summary: Checks if a dynamic site requires an update.
  syntax:
    content: public static bool SetNotMatched(CallSite site)
    content.vb: Public Shared Function SetNotMatched(site As CallSite) As Boolean
    parameters:
    - id: site
      type: System.Runtime.CompilerServices.CallSite
      description: An instance of the dynamic call site.
    return:
      type: System.Boolean
      description: true if rule does not need updating, false otherwise.
- uid: System.Runtime.CompilerServices.CallSiteOps.GetMatch(System.Runtime.CompilerServices.CallSite)
  id: GetMatch(System.Runtime.CompilerServices.CallSite)
  parent: System.Runtime.CompilerServices.CallSiteOps
  href: System.Runtime.CompilerServices.CallSiteOps.yml
  name: GetMatch(CallSite)
  fullName: System.Runtime.CompilerServices.CallSiteOps.GetMatch(System.Runtime.CompilerServices.CallSite)
  type: Method
  source:
    remote: *o0
    path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSiteOps.cs
    startLine: 51
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Runtime.CompilerServices
  summary: Checks whether the executed rule matched
  syntax:
    content: public static bool GetMatch(CallSite site)
    content.vb: Public Shared Function GetMatch(site As CallSite) As Boolean
    parameters:
    - id: site
      type: System.Runtime.CompilerServices.CallSite
      description: An instance of the dynamic call site.
    return:
      type: System.Boolean
      description: true if rule matched, false otherwise.
- uid: System.Runtime.CompilerServices.CallSiteOps.ClearMatch(System.Runtime.CompilerServices.CallSite)
  id: ClearMatch(System.Runtime.CompilerServices.CallSite)
  parent: System.Runtime.CompilerServices.CallSiteOps
  href: System.Runtime.CompilerServices.CallSiteOps.yml
  name: ClearMatch(CallSite)
  fullName: System.Runtime.CompilerServices.CallSiteOps.ClearMatch(System.Runtime.CompilerServices.CallSite)
  type: Method
  source:
    remote: *o0
    path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSiteOps.cs
    startLine: 61
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Runtime.CompilerServices
  summary: Clears the match flag on the matchmaker call site.
  syntax:
    content: public static void ClearMatch(CallSite site)
    content.vb: Public Shared Sub ClearMatch(site As CallSite)
    parameters:
    - id: site
      type: System.Runtime.CompilerServices.CallSite
      description: An instance of the dynamic call site.
- uid: System.Runtime.CompilerServices.CallSiteOps.AddRule``1(System.Runtime.CompilerServices.CallSite{``0},``0)
  id: AddRule``1(System.Runtime.CompilerServices.CallSite{``0},``0)
  parent: System.Runtime.CompilerServices.CallSiteOps
  href: System.Runtime.CompilerServices.CallSiteOps.yml
  name: AddRule<T>(CallSite<T>, T)
  name.vb: AddRule(Of T)(CallSite(Of T), T)
  fullName: System.Runtime.CompilerServices.CallSiteOps.AddRule<T>(System.Runtime.CompilerServices.CallSite<T>, T)
  fullName.vb: System.Runtime.CompilerServices.CallSiteOps.AddRule(Of T)(System.Runtime.CompilerServices.CallSite(Of T), T)
  type: Method
  source:
    remote: *o0
    path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSiteOps.cs
    startLine: 73
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Runtime.CompilerServices
  summary: Adds a rule to the cache maintained on the dynamic call site.
  syntax:
    content: 'public static void AddRule<T>(CallSite<T> site, T rule)where T : class'
    content.vb: Public Shared Sub AddRule(Of T As Class)(site As CallSite(Of T), rule As T)
    parameters:
    - id: site
      type: System.Runtime.CompilerServices.CallSite{{T}}
      description: An instance of the dynamic call site.
    - id: rule
      type: '{T}'
      description: An instance of the call site rule.
    typeParameters:
    - id: T
      description: The type of the delegate of the @'System.Runtime.CompilerServices.CallSite'.
- uid: System.Runtime.CompilerServices.CallSiteOps.UpdateRules``1(System.Runtime.CompilerServices.CallSite{``0},System.Int32)
  id: UpdateRules``1(System.Runtime.CompilerServices.CallSite{``0},System.Int32)
  parent: System.Runtime.CompilerServices.CallSiteOps
  href: System.Runtime.CompilerServices.CallSiteOps.yml
  name: UpdateRules<T>(CallSite<T>, Int32)
  name.vb: UpdateRules(Of T)(CallSite(Of T), Int32)
  fullName: System.Runtime.CompilerServices.CallSiteOps.UpdateRules<T>(System.Runtime.CompilerServices.CallSite<T>, System.Int32)
  fullName.vb: System.Runtime.CompilerServices.CallSiteOps.UpdateRules(Of T)(System.Runtime.CompilerServices.CallSite(Of T), System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSiteOps.cs
    startLine: 85
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Runtime.CompilerServices
  summary: Updates rules in the cache.
  syntax:
    content: 'public static void UpdateRules<T>(CallSite<T> this, int matched)where T : class'
    content.vb: Public Shared Sub UpdateRules(Of T As Class)(this As CallSite(Of T), matched As Integer)
    parameters:
    - id: this
      type: System.Runtime.CompilerServices.CallSite{{T}}
      description: An instance of the dynamic call site.
    - id: matched
      type: System.Int32
      description: The matched rule index.
    typeParameters:
    - id: T
      description: The type of the delegate of the @'System.Runtime.CompilerServices.CallSite'.
- uid: System.Runtime.CompilerServices.CallSiteOps.GetRules``1(System.Runtime.CompilerServices.CallSite{``0})
  id: GetRules``1(System.Runtime.CompilerServices.CallSite{``0})
  parent: System.Runtime.CompilerServices.CallSiteOps
  href: System.Runtime.CompilerServices.CallSiteOps.yml
  name: GetRules<T>(CallSite<T>)
  name.vb: GetRules(Of T)(CallSite(Of T))
  fullName: System.Runtime.CompilerServices.CallSiteOps.GetRules<T>(System.Runtime.CompilerServices.CallSite<T>)
  fullName.vb: System.Runtime.CompilerServices.CallSiteOps.GetRules(Of T)(System.Runtime.CompilerServices.CallSite(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSiteOps.cs
    startLine: 100
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Runtime.CompilerServices
  summary: Gets the dynamic binding rules from the call site.
  syntax:
    content: 'public static T[] GetRules<T>(CallSite<T> site)where T : class'
    content.vb: Public Shared Function GetRules(Of T As Class)(site As CallSite(Of T)) As T()
    parameters:
    - id: site
      type: System.Runtime.CompilerServices.CallSite{{T}}
      description: An instance of the dynamic call site.
    typeParameters:
    - id: T
      description: The type of the delegate of the @'System.Runtime.CompilerServices.CallSite'.
    return:
      type: '{T}[]'
      description: An array of dynamic binding rules.
- uid: System.Runtime.CompilerServices.CallSiteOps.GetRuleCache``1(System.Runtime.CompilerServices.CallSite{``0})
  id: GetRuleCache``1(System.Runtime.CompilerServices.CallSite{``0})
  parent: System.Runtime.CompilerServices.CallSiteOps
  href: System.Runtime.CompilerServices.CallSiteOps.yml
  name: GetRuleCache<T>(CallSite<T>)
  name.vb: GetRuleCache(Of T)(CallSite(Of T))
  fullName: System.Runtime.CompilerServices.CallSiteOps.GetRuleCache<T>(System.Runtime.CompilerServices.CallSite<T>)
  fullName.vb: System.Runtime.CompilerServices.CallSiteOps.GetRuleCache(Of T)(System.Runtime.CompilerServices.CallSite(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSiteOps.cs
    startLine: 113
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Runtime.CompilerServices
  summary: Retrieves binding rule cache.
  syntax:
    content: 'public static RuleCache<T> GetRuleCache<T>(CallSite<T> site)where T : class'
    content.vb: Public Shared Function GetRuleCache(Of T As Class)(site As CallSite(Of T)) As RuleCache(Of T)
    parameters:
    - id: site
      type: System.Runtime.CompilerServices.CallSite{{T}}
      description: An instance of the dynamic call site.
    typeParameters:
    - id: T
      description: The type of the delegate of the @'System.Runtime.CompilerServices.CallSite'.
    return:
      type: System.Runtime.CompilerServices.RuleCache{{T}}
      description: The cache.
- uid: System.Runtime.CompilerServices.CallSiteOps.MoveRule``1(System.Runtime.CompilerServices.RuleCache{``0},``0,System.Int32)
  id: MoveRule``1(System.Runtime.CompilerServices.RuleCache{``0},``0,System.Int32)
  parent: System.Runtime.CompilerServices.CallSiteOps
  href: System.Runtime.CompilerServices.CallSiteOps.yml
  name: MoveRule<T>(RuleCache<T>, T, Int32)
  name.vb: MoveRule(Of T)(RuleCache(Of T), T, Int32)
  fullName: System.Runtime.CompilerServices.CallSiteOps.MoveRule<T>(System.Runtime.CompilerServices.RuleCache<T>, T, System.Int32)
  fullName.vb: System.Runtime.CompilerServices.CallSiteOps.MoveRule(Of T)(System.Runtime.CompilerServices.RuleCache(Of T), T, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSiteOps.cs
    startLine: 127
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Runtime.CompilerServices
  summary: Moves the binding rule within the cache.
  syntax:
    content: 'public static void MoveRule<T>(RuleCache<T> cache, T rule, int i)where T : class'
    content.vb: Public Shared Sub MoveRule(Of T As Class)(cache As RuleCache(Of T), rule As T, i As Integer)
    parameters:
    - id: cache
      type: System.Runtime.CompilerServices.RuleCache{{T}}
      description: The call site rule cache.
    - id: rule
      type: '{T}'
      description: An instance of the call site rule.
    - id: i
      type: System.Int32
      description: An index of the call site rule.
    typeParameters:
    - id: T
      description: The type of the delegate of the @'System.Runtime.CompilerServices.CallSite'.
- uid: System.Runtime.CompilerServices.CallSiteOps.GetCachedRules``1(System.Runtime.CompilerServices.RuleCache{``0})
  id: GetCachedRules``1(System.Runtime.CompilerServices.RuleCache{``0})
  parent: System.Runtime.CompilerServices.CallSiteOps
  href: System.Runtime.CompilerServices.CallSiteOps.yml
  name: GetCachedRules<T>(RuleCache<T>)
  name.vb: GetCachedRules(Of T)(RuleCache(Of T))
  fullName: System.Runtime.CompilerServices.CallSiteOps.GetCachedRules<T>(System.Runtime.CompilerServices.RuleCache<T>)
  fullName.vb: System.Runtime.CompilerServices.CallSiteOps.GetCachedRules(Of T)(System.Runtime.CompilerServices.RuleCache(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSiteOps.cs
    startLine: 142
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Runtime.CompilerServices
  summary: Searches the dynamic rule cache for rules applicable to the dynamic operation.
  syntax:
    content: 'public static T[] GetCachedRules<T>(RuleCache<T> cache)where T : class'
    content.vb: Public Shared Function GetCachedRules(Of T As Class)(cache As RuleCache(Of T)) As T()
    parameters:
    - id: cache
      type: System.Runtime.CompilerServices.RuleCache{{T}}
      description: The cache.
    typeParameters:
    - id: T
      description: The type of the delegate of the @'System.Runtime.CompilerServices.CallSite'.
    return:
      type: '{T}[]'
      description: The collection of applicable rules.
- uid: System.Runtime.CompilerServices.CallSiteOps.Bind``1(System.Runtime.CompilerServices.CallSiteBinder,System.Runtime.CompilerServices.CallSite{``0},System.Object[])
  id: Bind``1(System.Runtime.CompilerServices.CallSiteBinder,System.Runtime.CompilerServices.CallSite{``0},System.Object[])
  parent: System.Runtime.CompilerServices.CallSiteOps
  href: System.Runtime.CompilerServices.CallSiteOps.yml
  name: Bind<T>(CallSiteBinder, CallSite<T>, Object[])
  name.vb: Bind(Of T)(CallSiteBinder, CallSite(Of T), Object())
  fullName: System.Runtime.CompilerServices.CallSiteOps.Bind<T>(System.Runtime.CompilerServices.CallSiteBinder, System.Runtime.CompilerServices.CallSite<T>, System.Object[])
  fullName.vb: System.Runtime.CompilerServices.CallSiteOps.Bind(Of T)(System.Runtime.CompilerServices.CallSiteBinder, System.Runtime.CompilerServices.CallSite(Of T), System.Object())
  type: Method
  source:
    remote: *o0
    path: src/System.Dynamic.Runtime/src/System/Runtime/CompilerServices/CallSiteOps.cs
    startLine: 156
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Runtime.CompilerServices
  summary: Updates the call site target with a new rule based on the arguments.
  syntax:
    content: 'public static T Bind<T>(CallSiteBinder binder, CallSite<T> site, object[] args)where T : class'
    content.vb: Public Shared Function Bind(Of T As Class)(binder As CallSiteBinder, site As CallSite(Of T), args As Object()) As T
    parameters:
    - id: binder
      type: System.Runtime.CompilerServices.CallSiteBinder
      description: The call site binder.
    - id: site
      type: System.Runtime.CompilerServices.CallSite{{T}}
      description: An instance of the dynamic call site.
    - id: args
      type: System.Object[]
      description: Arguments to the call site.
    typeParameters:
    - id: T
      description: The type of the delegate of the @'System.Runtime.CompilerServices.CallSite'.
    return:
      type: '{T}'
      description: The new call site target.
references:
- uid: System.Runtime.CompilerServices
  isExternal: false
  name: System.Runtime.CompilerServices
  fullName: System.Runtime.CompilerServices
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Runtime.CompilerServices.CallSite
  parent: System.Runtime.CompilerServices
  isExternal: false
  href: System.Runtime.CompilerServices.CallSite.yml
  name: CallSite
  fullName: System.Runtime.CompilerServices.CallSite
  type: Class
  summary: >-
    A Dynamic Call Site base class. This type is used as a parameter type to the

    dynamic site targets. The first parameter of the delegate (T) below must be

    of this type.
- uid: System.Runtime.CompilerServices.CallSite{{T}}
  parent: System.Runtime.CompilerServices
  definition: System.Runtime.CompilerServices.CallSite`1
  href: System.Runtime.CompilerServices.CallSite`1.yml
  name: CallSite<T>
  name.vb: CallSite(Of T)
  fullName: System.Runtime.CompilerServices.CallSite<T>
  fullName.vb: System.Runtime.CompilerServices.CallSite(Of T)
  spec.csharp:
  - uid: System.Runtime.CompilerServices.CallSite`1
    name: CallSite
    fullName: System.Runtime.CompilerServices.CallSite
    href: System.Runtime.CompilerServices.CallSite`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Runtime.CompilerServices.CallSite`1
    name: CallSite
    fullName: System.Runtime.CompilerServices.CallSite
    href: System.Runtime.CompilerServices.CallSite`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Runtime.CompilerServices.CallSite`1
  parent: System.Runtime.CompilerServices
  isExternal: false
  href: System.Runtime.CompilerServices.CallSite`1.yml
  name: CallSite<T>
  name.vb: CallSite(Of T)
  fullName: System.Runtime.CompilerServices.CallSite<T>
  fullName.vb: System.Runtime.CompilerServices.CallSite(Of T)
  type: Class
  summary: Dynamic site type.
  spec.csharp:
  - uid: System.Runtime.CompilerServices.CallSite`1
    name: CallSite
    fullName: System.Runtime.CompilerServices.CallSite
    href: System.Runtime.CompilerServices.CallSite`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Runtime.CompilerServices.CallSite`1
    name: CallSite
    fullName: System.Runtime.CompilerServices.CallSite
    href: System.Runtime.CompilerServices.CallSite`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: '{T}[]'
  isExternal: false
  name: T[]
  name.vb: T()
  fullName: T[]
  fullName.vb: T()
  spec.csharp:
  - name: T
    fullName: T
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - name: T
    fullName: T
  - name: ()
    fullName: ()
- uid: System.Runtime.CompilerServices.RuleCache{{T}}
  parent: System.Runtime.CompilerServices
  definition: System.Runtime.CompilerServices.RuleCache`1
  href: System.Runtime.CompilerServices.RuleCache`1.yml
  name: RuleCache<T>
  name.vb: RuleCache(Of T)
  fullName: System.Runtime.CompilerServices.RuleCache<T>
  fullName.vb: System.Runtime.CompilerServices.RuleCache(Of T)
  spec.csharp:
  - uid: System.Runtime.CompilerServices.RuleCache`1
    name: RuleCache
    fullName: System.Runtime.CompilerServices.RuleCache
    href: System.Runtime.CompilerServices.RuleCache`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Runtime.CompilerServices.RuleCache`1
    name: RuleCache
    fullName: System.Runtime.CompilerServices.RuleCache
    href: System.Runtime.CompilerServices.RuleCache`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Runtime.CompilerServices.RuleCache`1
  parent: System.Runtime.CompilerServices
  isExternal: false
  href: System.Runtime.CompilerServices.RuleCache`1.yml
  name: RuleCache<T>
  name.vb: RuleCache(Of T)
  fullName: System.Runtime.CompilerServices.RuleCache<T>
  fullName.vb: System.Runtime.CompilerServices.RuleCache(Of T)
  type: Class
  summary: >-
    This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.

    Represents a cache of runtime binding rules.
  spec.csharp:
  - uid: System.Runtime.CompilerServices.RuleCache`1
    name: RuleCache
    fullName: System.Runtime.CompilerServices.RuleCache
    href: System.Runtime.CompilerServices.RuleCache`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Runtime.CompilerServices.RuleCache`1
    name: RuleCache
    fullName: System.Runtime.CompilerServices.RuleCache
    href: System.Runtime.CompilerServices.RuleCache`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Runtime.CompilerServices.CallSiteBinder
  parent: System.Runtime.CompilerServices
  isExternal: false
  href: System.Runtime.CompilerServices.CallSiteBinder.yml
  name: CallSiteBinder
  fullName: System.Runtime.CompilerServices.CallSiteBinder
  type: Class
  summary: Class responsible for runtime binding of the dynamic operations on the dynamic call site.
- uid: System.Object[]
  isExternal: true
  name: Object[]
  name.vb: Object()
  fullName: System.Object[]
  fullName.vb: System.Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
