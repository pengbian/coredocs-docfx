items:
- uid: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator
  id: CustomAttributeHandleCollection.Enumerator
  parent: System.Reflection.Metadata
  children:
  - System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.Current
  - System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.MoveNext
  - System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.System#Collections#IEnumerator#Current
  - System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.System#Collections#IEnumerator#Reset
  - System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.System#IDisposable#Dispose
  href: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.yml
  name: CustomAttributeHandleCollection.Enumerator
  fullName: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator
  type: Struct
  source:
    remote: &o0
      path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/HandleCollections.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/HandleCollections.cs
    startLine: 273
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: 'public struct Enumerator : IEnumerator<CustomAttributeHandle>, IDisposable, IEnumerator'
    content.vb: Public Structure Enumerator Implements IEnumerator(Of CustomAttributeHandle), IDisposable, IEnumerator
  implements:
  - System.Collections.Generic.IEnumerator{System.Reflection.Metadata.CustomAttributeHandle}
  - System.IDisposable
  - System.Collections.IEnumerator
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.Current
  id: Current
  parent: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator
  href: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.yml
  name: Current
  fullName: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.Current
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/HandleCollections.cs
    startLine: 292
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public CustomAttributeHandle Current { get; }
    content.vb: Public ReadOnly Property Current As CustomAttributeHandle
    parameters: []
    return:
      type: System.Reflection.Metadata.CustomAttributeHandle
- uid: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.MoveNext
  id: MoveNext
  parent: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator
  href: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.yml
  name: MoveNext()
  fullName: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.MoveNext()
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/HandleCollections.cs
    startLine: 315
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public bool MoveNext()
    content.vb: Public Function MoveNext As Boolean
    return:
      type: System.Boolean
- uid: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.System#Collections#IEnumerator#Current
  id: System#Collections#IEnumerator#Current
  parent: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator
  href: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.yml
  name: IEnumerator.Current
  name.vb: System.Collections.IEnumerator.Current
  fullName: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.System.Collections.IEnumerator.Current
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/HandleCollections.cs
    startLine: 331
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: object IEnumerator.Current { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IEnumerator.Current As Object Implements IEnumerator.Current
    parameters: []
    return:
      type: System.Object
- uid: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.System#Collections#IEnumerator#Reset
  id: System#Collections#IEnumerator#Reset
  parent: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator
  href: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.yml
  name: IEnumerator.Reset()
  name.vb: System.Collections.IEnumerator.Reset()
  fullName: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.System.Collections.IEnumerator.Reset()
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/HandleCollections.cs
    startLine: 336
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: void IEnumerator.Reset()
    content.vb: Sub System.Collections.IEnumerator.Reset Implements IEnumerator.Reset
- uid: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.System#IDisposable#Dispose
  id: System#IDisposable#Dispose
  parent: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator
  href: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.yml
  name: IDisposable.Dispose()
  name.vb: System.IDisposable.Dispose()
  fullName: System.Reflection.Metadata.CustomAttributeHandleCollection.Enumerator.System.IDisposable.Dispose()
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/HandleCollections.cs
    startLine: 341
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: void IDisposable.Dispose()
    content.vb: Sub System.IDisposable.Dispose Implements IDisposable.Dispose
references:
- uid: System.Reflection.Metadata
  isExternal: false
  name: System.Reflection.Metadata
  fullName: System.Reflection.Metadata
  type: Namespace
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  fullName: System.ValueType
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Reflection.Metadata.CustomAttributeHandle
  parent: System.Reflection.Metadata
  isExternal: false
  href: System.Reflection.Metadata.CustomAttributeHandle.yml
  name: CustomAttributeHandle
  fullName: System.Reflection.Metadata.CustomAttributeHandle
  type: Struct
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
