items:
- uid: System.Text.RegularExpressions.Capture
  id: Capture
  parent: System.Text.RegularExpressions
  children:
  - System.Text.RegularExpressions.Capture.Index
  - System.Text.RegularExpressions.Capture.Length
  - System.Text.RegularExpressions.Capture.ToString
  - System.Text.RegularExpressions.Capture.Value
  href: System.Text.RegularExpressions.Capture.yml
  name: Capture
  fullName: System.Text.RegularExpressions.Capture
  type: Class
  source:
    remote: &o0
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCapture.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCapture.cs
    startLine: 14
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: >-
    Represents the results from a single subexpression capture. The object represents

    one substring for a single successful capture.
  syntax:
    content: public class Capture
    content.vb: Public Class Capture
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Text.RegularExpressions.Capture.Index
  id: Index
  parent: System.Text.RegularExpressions.Capture
  href: System.Text.RegularExpressions.Capture.yml
  name: Index
  fullName: System.Text.RegularExpressions.Capture.Index
  type: Property
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCapture.cs
    startLine: 34
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: >-
    Returns the position in the original string where the first character of

    captured substring was found.
  syntax:
    content: public int Index { get; }
    content.vb: Public ReadOnly Property Index As Integer
    parameters: []
    return:
      type: System.Int32
- uid: System.Text.RegularExpressions.Capture.Length
  id: Length
  parent: System.Text.RegularExpressions.Capture
  href: System.Text.RegularExpressions.Capture.yml
  name: Length
  fullName: System.Text.RegularExpressions.Capture.Length
  type: Property
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCapture.cs
    startLine: 48
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Returns the length of the captured substring.
  syntax:
    content: public int Length { get; }
    content.vb: Public ReadOnly Property Length As Integer
    parameters: []
    return:
      type: System.Int32
- uid: System.Text.RegularExpressions.Capture.Value
  id: Value
  parent: System.Text.RegularExpressions.Capture
  href: System.Text.RegularExpressions.Capture.yml
  name: Value
  fullName: System.Text.RegularExpressions.Capture.Value
  type: Property
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCapture.cs
    startLine: 59
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Returns the value of this Regex Capture.
  syntax:
    content: public string Value { get; }
    content.vb: Public ReadOnly Property Value As String
    parameters: []
    return:
      type: System.String
- uid: System.Text.RegularExpressions.Capture.ToString
  id: ToString
  parent: System.Text.RegularExpressions.Capture
  href: System.Text.RegularExpressions.Capture.yml
  name: ToString()
  fullName: System.Text.RegularExpressions.Capture.ToString()
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCapture.cs
    startLine: 73
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Returns the substring that was matched.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.Object.ToString
references:
- uid: System.Text.RegularExpressions
  isExternal: false
  name: System.Text.RegularExpressions
  fullName: System.Text.RegularExpressions
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
