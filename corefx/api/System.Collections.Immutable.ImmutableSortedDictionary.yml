items:
- uid: System.Collections.Immutable.ImmutableSortedDictionary
  id: ImmutableSortedDictionary
  parent: System.Collections.Immutable
  children:
  - System.Collections.Immutable.ImmutableSortedDictionary.Create``2
  - System.Collections.Immutable.ImmutableSortedDictionary.Create``2(System.Collections.Generic.IComparer{``0})
  - System.Collections.Immutable.ImmutableSortedDictionary.Create``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  - System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder``2
  - System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder``2(System.Collections.Generic.IComparer{``0})
  - System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  - System.Collections.Immutable.ImmutableSortedDictionary.CreateRange``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  - System.Collections.Immutable.ImmutableSortedDictionary.CreateRange``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  - System.Collections.Immutable.ImmutableSortedDictionary.CreateRange``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})
  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})
  - System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
  href: System.Collections.Immutable.ImmutableSortedDictionary.yml
  name: ImmutableSortedDictionary
  fullName: System.Collections.Immutable.ImmutableSortedDictionary
  type: Class
  source:
    remote: &o0
      path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary.cs
    startLine: 14
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: A set of initialization methods for instances of [System.Collections.Immutable.ImmutableSortedDictionary`2](System.Collections.Immutable.ImmutableSortedDictionary`2.yml).
  syntax:
    content: public class ImmutableSortedDictionary
    content.vb: Public Class ImmutableSortedDictionary
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Collections.Immutable.ImmutableSortedDictionary.Create``2
  id: Create``2
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  href: System.Collections.Immutable.ImmutableSortedDictionary.yml
  name: Create<TKey, TValue>()
  name.vb: Create(Of TKey, TValue)()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.Create<TKey, TValue>()
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.Create(Of TKey, TValue)()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary.cs
    startLine: 23
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Returns an empty collection.
  syntax:
    content: public static ImmutableSortedDictionary<TKey, TValue> Create<TKey, TValue>()
    content.vb: Public Shared Function Create(Of TKey, TValue) As ImmutableSortedDictionary(Of TKey, TValue)
    typeParameters:
    - id: TKey
      description: The type of keys stored by the dictionary.
    - id: TValue
      description: The type of values stored by the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}
      description: The immutable collection.
- uid: System.Collections.Immutable.ImmutableSortedDictionary.Create``2(System.Collections.Generic.IComparer{``0})
  id: Create``2(System.Collections.Generic.IComparer{``0})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  href: System.Collections.Immutable.ImmutableSortedDictionary.yml
  name: Create<TKey, TValue>(IComparer<TKey>)
  name.vb: Create(Of TKey, TValue)(IComparer(Of TKey))
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.Create<TKey, TValue>(System.Collections.Generic.IComparer<TKey>)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.Create(Of TKey, TValue)(System.Collections.Generic.IComparer(Of TKey))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary.cs
    startLine: 36
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Returns an empty collection.
  syntax:
    content: public static ImmutableSortedDictionary<TKey, TValue> Create<TKey, TValue>(IComparer<TKey> keyComparer)
    content.vb: Public Shared Function Create(Of TKey, TValue)(keyComparer As IComparer(Of TKey)) As ImmutableSortedDictionary(Of TKey, TValue)
    parameters:
    - id: keyComparer
      type: System.Collections.Generic.IComparer{{TKey}}
      description: The key comparer.
    typeParameters:
    - id: TKey
      description: The type of keys stored by the dictionary.
    - id: TValue
      description: The type of values stored by the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}
      description: The immutable collection.
- uid: System.Collections.Immutable.ImmutableSortedDictionary.Create``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  id: Create``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  href: System.Collections.Immutable.ImmutableSortedDictionary.yml
  name: Create<TKey, TValue>(IComparer<TKey>, IEqualityComparer<TValue>)
  name.vb: Create(Of TKey, TValue)(IComparer(Of TKey), IEqualityComparer(Of TValue))
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.Create<TKey, TValue>(System.Collections.Generic.IComparer<TKey>, System.Collections.Generic.IEqualityComparer<TValue>)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.Create(Of TKey, TValue)(System.Collections.Generic.IComparer(Of TKey), System.Collections.Generic.IEqualityComparer(Of TValue))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary.cs
    startLine: 50
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Returns an empty collection.
  syntax:
    content: public static ImmutableSortedDictionary<TKey, TValue> Create<TKey, TValue>(IComparer<TKey> keyComparer, IEqualityComparer<TValue> valueComparer)
    content.vb: Public Shared Function Create(Of TKey, TValue)(keyComparer As IComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableSortedDictionary(Of TKey, TValue)
    parameters:
    - id: keyComparer
      type: System.Collections.Generic.IComparer{{TKey}}
      description: The key comparer.
    - id: valueComparer
      type: System.Collections.Generic.IEqualityComparer{{TValue}}
      description: The value comparer.
    typeParameters:
    - id: TKey
      description: The type of keys stored by the dictionary.
    - id: TValue
      description: The type of values stored by the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}
      description: The immutable collection.
- uid: System.Collections.Immutable.ImmutableSortedDictionary.CreateRange``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  id: CreateRange``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  href: System.Collections.Immutable.ImmutableSortedDictionary.yml
  name: CreateRange<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>>)
  name.vb: CreateRange(Of TKey, TValue)(IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.CreateRange<TKey, TValue>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.CreateRange(Of TKey, TValue)(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary.cs
    startLine: 63
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable collection prefilled with the specified items.
  syntax:
    content: public static ImmutableSortedDictionary<TKey, TValue> CreateRange<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>> items)
    content.vb: Public Shared Function CreateRange(Of TKey, TValue)(items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableSortedDictionary(Of TKey, TValue)
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
      description: The items to prepopulate.
    typeParameters:
    - id: TKey
      description: The type of keys stored by the dictionary.
    - id: TValue
      description: The type of values stored by the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}
      description: The new immutable collection.
- uid: System.Collections.Immutable.ImmutableSortedDictionary.CreateRange``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  id: CreateRange``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  href: System.Collections.Immutable.ImmutableSortedDictionary.yml
  name: CreateRange<TKey, TValue>(IComparer<TKey>, IEnumerable<KeyValuePair<TKey, TValue>>)
  name.vb: CreateRange(Of TKey, TValue)(IComparer(Of TKey), IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.CreateRange<TKey, TValue>(System.Collections.Generic.IComparer<TKey>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.CreateRange(Of TKey, TValue)(System.Collections.Generic.IComparer(Of TKey), System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary.cs
    startLine: 78
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable collection prefilled with the specified items.
  syntax:
    content: public static ImmutableSortedDictionary<TKey, TValue> CreateRange<TKey, TValue>(IComparer<TKey> keyComparer, IEnumerable<KeyValuePair<TKey, TValue>> items)
    content.vb: Public Shared Function CreateRange(Of TKey, TValue)(keyComparer As IComparer(Of TKey), items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableSortedDictionary(Of TKey, TValue)
    parameters:
    - id: keyComparer
      type: System.Collections.Generic.IComparer{{TKey}}
      description: The key comparer.
    - id: items
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
      description: The items to prepopulate.
    typeParameters:
    - id: TKey
      description: The type of keys stored by the dictionary.
    - id: TValue
      description: The type of values stored by the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}
      description: The new immutable collection.
- uid: System.Collections.Immutable.ImmutableSortedDictionary.CreateRange``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  id: CreateRange``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  href: System.Collections.Immutable.ImmutableSortedDictionary.yml
  name: CreateRange<TKey, TValue>(IComparer<TKey>, IEqualityComparer<TValue>, IEnumerable<KeyValuePair<TKey, TValue>>)
  name.vb: CreateRange(Of TKey, TValue)(IComparer(Of TKey), IEqualityComparer(Of TValue), IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.CreateRange<TKey, TValue>(System.Collections.Generic.IComparer<TKey>, System.Collections.Generic.IEqualityComparer<TValue>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.CreateRange(Of TKey, TValue)(System.Collections.Generic.IComparer(Of TKey), System.Collections.Generic.IEqualityComparer(Of TValue), System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary.cs
    startLine: 94
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable collection prefilled with the specified items.
  syntax:
    content: public static ImmutableSortedDictionary<TKey, TValue> CreateRange<TKey, TValue>(IComparer<TKey> keyComparer, IEqualityComparer<TValue> valueComparer, IEnumerable<KeyValuePair<TKey, TValue>> items)
    content.vb: Public Shared Function CreateRange(Of TKey, TValue)(keyComparer As IComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue), items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableSortedDictionary(Of TKey, TValue)
    parameters:
    - id: keyComparer
      type: System.Collections.Generic.IComparer{{TKey}}
      description: The key comparer.
    - id: valueComparer
      type: System.Collections.Generic.IEqualityComparer{{TValue}}
      description: The value comparer.
    - id: items
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
      description: The items to prepopulate.
    typeParameters:
    - id: TKey
      description: The type of keys stored by the dictionary.
    - id: TValue
      description: The type of values stored by the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}
      description: The new immutable collection.
- uid: System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder``2
  id: CreateBuilder``2
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  href: System.Collections.Immutable.ImmutableSortedDictionary.yml
  name: CreateBuilder<TKey, TValue>()
  name.vb: CreateBuilder(Of TKey, TValue)()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder<TKey, TValue>()
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder(Of TKey, TValue)()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary.cs
    startLine: 107
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable sorted dictionary builder.
  syntax:
    content: public static ImmutableSortedDictionary<TKey, TValue>.Builder CreateBuilder<TKey, TValue>()
    content.vb: Public Shared Function CreateBuilder(Of TKey, TValue) As ImmutableSortedDictionary(Of TKey, TValue).Builder
    typeParameters:
    - id: TKey
      description: The type of keys stored by the dictionary.
    - id: TValue
      description: The type of values stored by the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}.Builder
      description: The immutable collection builder.
- uid: System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder``2(System.Collections.Generic.IComparer{``0})
  id: CreateBuilder``2(System.Collections.Generic.IComparer{``0})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  href: System.Collections.Immutable.ImmutableSortedDictionary.yml
  name: CreateBuilder<TKey, TValue>(IComparer<TKey>)
  name.vb: CreateBuilder(Of TKey, TValue)(IComparer(Of TKey))
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder<TKey, TValue>(System.Collections.Generic.IComparer<TKey>)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder(Of TKey, TValue)(System.Collections.Generic.IComparer(Of TKey))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary.cs
    startLine: 120
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable sorted dictionary builder.
  syntax:
    content: public static ImmutableSortedDictionary<TKey, TValue>.Builder CreateBuilder<TKey, TValue>(IComparer<TKey> keyComparer)
    content.vb: Public Shared Function CreateBuilder(Of TKey, TValue)(keyComparer As IComparer(Of TKey)) As ImmutableSortedDictionary(Of TKey, TValue).Builder
    parameters:
    - id: keyComparer
      type: System.Collections.Generic.IComparer{{TKey}}
      description: The key comparer.
    typeParameters:
    - id: TKey
      description: The type of keys stored by the dictionary.
    - id: TValue
      description: The type of values stored by the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}.Builder
      description: The immutable collection builder.
- uid: System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  id: CreateBuilder``2(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  href: System.Collections.Immutable.ImmutableSortedDictionary.yml
  name: CreateBuilder<TKey, TValue>(IComparer<TKey>, IEqualityComparer<TValue>)
  name.vb: CreateBuilder(Of TKey, TValue)(IComparer(Of TKey), IEqualityComparer(Of TValue))
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder<TKey, TValue>(System.Collections.Generic.IComparer<TKey>, System.Collections.Generic.IEqualityComparer<TValue>)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.CreateBuilder(Of TKey, TValue)(System.Collections.Generic.IComparer(Of TKey), System.Collections.Generic.IEqualityComparer(Of TValue))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary.cs
    startLine: 134
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable sorted dictionary builder.
  syntax:
    content: public static ImmutableSortedDictionary<TKey, TValue>.Builder CreateBuilder<TKey, TValue>(IComparer<TKey> keyComparer, IEqualityComparer<TValue> valueComparer)
    content.vb: Public Shared Function CreateBuilder(Of TKey, TValue)(keyComparer As IComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableSortedDictionary(Of TKey, TValue).Builder
    parameters:
    - id: keyComparer
      type: System.Collections.Generic.IComparer{{TKey}}
      description: The key comparer.
    - id: valueComparer
      type: System.Collections.Generic.IEqualityComparer{{TValue}}
      description: The value comparer.
    typeParameters:
    - id: TKey
      description: The type of keys stored by the dictionary.
    - id: TValue
      description: The type of values stored by the dictionary.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}.Builder
      description: The immutable collection builder.
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
  id: ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1},System.Collections.Generic.IEqualityComparer{``2})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  href: System.Collections.Immutable.ImmutableSortedDictionary.yml
  name: ToImmutableSortedDictionary<TSource, TKey, TValue>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TValue>, IComparer<TKey>, IEqualityComparer<TValue>)
  name.vb: ToImmutableSortedDictionary(Of TSource, TKey, TValue)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TValue), IComparer(Of TKey), IEqualityComparer(Of TValue))
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource, TKey, TValue>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TValue>, System.Collections.Generic.IComparer<TKey>, System.Collections.Generic.IEqualityComparer<TValue>)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary(Of TSource, TKey, TValue)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TValue), System.Collections.Generic.IComparer(Of TKey), System.Collections.Generic.IEqualityComparer(Of TValue))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary.cs
    startLine: 152
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Constructs an immutable sorted dictionary based on some transformation of a sequence.
  syntax:
    content: public static ImmutableSortedDictionary<TKey, TValue> ToImmutableSortedDictionary<TSource, TKey, TValue>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TValue> elementSelector, IComparer<TKey> keyComparer, IEqualityComparer<TValue> valueComparer)
    content.vb: Public Shared Function ToImmutableSortedDictionary(Of TSource, TKey, TValue)(source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue), keyComparer As IComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableSortedDictionary(Of TKey, TValue)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
      description: The sequence to enumerate to generate the map.
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
      description: The function that will produce the key for the map from each sequence element.
    - id: elementSelector
      type: System.Func{{TSource},{TValue}}
      description: The function that will produce the value for the map from each sequence element.
    - id: keyComparer
      type: System.Collections.Generic.IComparer{{TKey}}
      description: The key comparer to use for the map.
    - id: valueComparer
      type: System.Collections.Generic.IEqualityComparer{{TValue}}
      description: The value comparer to use for the map.
    typeParameters:
    - id: TSource
      description: The type of element in the sequence.
    - id: TKey
      description: The type of key in the resulting map.
    - id: TValue
      description: The type of value in the resulting map.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}
      description: The immutable map.
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})
  id: ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IComparer{``1})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  href: System.Collections.Immutable.ImmutableSortedDictionary.yml
  name: ToImmutableSortedDictionary<TSource, TKey, TValue>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TValue>, IComparer<TKey>)
  name.vb: ToImmutableSortedDictionary(Of TSource, TKey, TValue)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TValue), IComparer(Of TKey))
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource, TKey, TValue>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TValue>, System.Collections.Generic.IComparer<TKey>)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary(Of TSource, TKey, TValue)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TValue), System.Collections.Generic.IComparer(Of TKey))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary.cs
    startLine: 175
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Constructs an immutable sorted dictionary based on some transformation of a sequence.
  syntax:
    content: public static ImmutableSortedDictionary<TKey, TValue> ToImmutableSortedDictionary<TSource, TKey, TValue>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TValue> elementSelector, IComparer<TKey> keyComparer)
    content.vb: Public Shared Function ToImmutableSortedDictionary(Of TSource, TKey, TValue)(source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue), keyComparer As IComparer(Of TKey)) As ImmutableSortedDictionary(Of TKey, TValue)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
      description: The sequence to enumerate to generate the map.
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
      description: The function that will produce the key for the map from each sequence element.
    - id: elementSelector
      type: System.Func{{TSource},{TValue}}
      description: The function that will produce the value for the map from each sequence element.
    - id: keyComparer
      type: System.Collections.Generic.IComparer{{TKey}}
      description: The key comparer to use for the map.
    typeParameters:
    - id: TSource
      description: The type of element in the sequence.
    - id: TKey
      description: The type of key in the resulting map.
    - id: TValue
      description: The type of value in the resulting map.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}
      description: The immutable map.
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  id: ToImmutableSortedDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  href: System.Collections.Immutable.ImmutableSortedDictionary.yml
  name: ToImmutableSortedDictionary<TSource, TKey, TValue>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TValue>)
  name.vb: ToImmutableSortedDictionary(Of TSource, TKey, TValue)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TValue))
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary<TSource, TKey, TValue>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TValue>)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary(Of TSource, TKey, TValue)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TValue))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary.cs
    startLine: 191
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Constructs an immutable sorted dictionary based on some transformation of a sequence.
  syntax:
    content: public static ImmutableSortedDictionary<TKey, TValue> ToImmutableSortedDictionary<TSource, TKey, TValue>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TValue> elementSelector)
    content.vb: Public Shared Function ToImmutableSortedDictionary(Of TSource, TKey, TValue)(source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TValue)) As ImmutableSortedDictionary(Of TKey, TValue)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
      description: The sequence to enumerate to generate the map.
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
      description: The function that will produce the key for the map from each sequence element.
    - id: elementSelector
      type: System.Func{{TSource},{TValue}}
      description: The function that will produce the value for the map from each sequence element.
    typeParameters:
    - id: TSource
      description: The type of element in the sequence.
    - id: TKey
      description: The type of key in the resulting map.
    - id: TValue
      description: The type of value in the resulting map.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}
      description: The immutable map.
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  id: ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  href: System.Collections.Immutable.ImmutableSortedDictionary.yml
  name: ToImmutableSortedDictionary<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>>, IComparer<TKey>, IEqualityComparer<TValue>)
  name.vb: ToImmutableSortedDictionary(Of TKey, TValue)(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IComparer(Of TKey), IEqualityComparer(Of TValue))
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey, TValue>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>, System.Collections.Generic.IComparer<TKey>, System.Collections.Generic.IEqualityComparer<TValue>)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary(Of TKey, TValue)(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)), System.Collections.Generic.IComparer(Of TKey), System.Collections.Generic.IEqualityComparer(Of TValue))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary.cs
    startLine: 206
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates an immutable sorted dictionary given a sequence of key=value pairs.
  syntax:
    content: public static ImmutableSortedDictionary<TKey, TValue> ToImmutableSortedDictionary<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>> source, IComparer<TKey> keyComparer, IEqualityComparer<TValue> valueComparer)
    content.vb: Public Shared Function ToImmutableSortedDictionary(Of TKey, TValue)(source As IEnumerable(Of KeyValuePair(Of TKey, TValue)), keyComparer As IComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableSortedDictionary(Of TKey, TValue)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
      description: The sequence of key=value pairs.
    - id: keyComparer
      type: System.Collections.Generic.IComparer{{TKey}}
      description: The key comparer to use when building the immutable map.
    - id: valueComparer
      type: System.Collections.Generic.IEqualityComparer{{TValue}}
      description: The value comparer to use for the immutable map.
    typeParameters:
    - id: TKey
      description: The type of key in the map.
    - id: TValue
      description: The type of value in the map.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}
      description: An immutable map.
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})
  id: ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}},System.Collections.Generic.IComparer{``0})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  href: System.Collections.Immutable.ImmutableSortedDictionary.yml
  name: ToImmutableSortedDictionary<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>>, IComparer<TKey>)
  name.vb: ToImmutableSortedDictionary(Of TKey, TValue)(IEnumerable(Of KeyValuePair(Of TKey, TValue)), IComparer(Of TKey))
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey, TValue>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>, System.Collections.Generic.IComparer<TKey>)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary(Of TKey, TValue)(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)), System.Collections.Generic.IComparer(Of TKey))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary.cs
    startLine: 230
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates an immutable sorted dictionary given a sequence of key=value pairs.
  syntax:
    content: public static ImmutableSortedDictionary<TKey, TValue> ToImmutableSortedDictionary<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>> source, IComparer<TKey> keyComparer)
    content.vb: Public Shared Function ToImmutableSortedDictionary(Of TKey, TValue)(source As IEnumerable(Of KeyValuePair(Of TKey, TValue)), keyComparer As IComparer(Of TKey)) As ImmutableSortedDictionary(Of TKey, TValue)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
      description: The sequence of key=value pairs.
    - id: keyComparer
      type: System.Collections.Generic.IComparer{{TKey}}
      description: The key comparer to use when building the immutable map.
    typeParameters:
    - id: TKey
      description: The type of key in the map.
    - id: TValue
      description: The type of value in the map.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}
      description: An immutable map.
- uid: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  id: ToImmutableSortedDictionary``2(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{``0,``1}})
  parent: System.Collections.Immutable.ImmutableSortedDictionary
  href: System.Collections.Immutable.ImmutableSortedDictionary.yml
  name: ToImmutableSortedDictionary<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>>)
  name.vb: ToImmutableSortedDictionary(Of TKey, TValue)(IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary<TKey, TValue>(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.ToImmutableSortedDictionary(Of TKey, TValue)(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary.cs
    startLine: 244
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates an immutable sorted dictionary given a sequence of key=value pairs.
  syntax:
    content: public static ImmutableSortedDictionary<TKey, TValue> ToImmutableSortedDictionary<TKey, TValue>(IEnumerable<KeyValuePair<TKey, TValue>> source)
    content.vb: Public Shared Function ToImmutableSortedDictionary(Of TKey, TValue)(source As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableSortedDictionary(Of TKey, TValue)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
      description: The sequence of key=value pairs.
    typeParameters:
    - id: TKey
      description: The type of key in the map.
    - id: TValue
      description: The type of value in the map.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}
      description: An immutable map.
references:
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2
  parent: System.Collections.Immutable
  isExternal: false
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: ImmutableSortedDictionary<TKey, TValue>
  name.vb: ImmutableSortedDictionary(Of TKey, TValue)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue)
  type: Class
  summary: An immutable sorted dictionary implementation.
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary`2
    name: ImmutableSortedDictionary
    fullName: System.Collections.Immutable.ImmutableSortedDictionary
    href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary`2
    name: ImmutableSortedDictionary
    fullName: System.Collections.Immutable.ImmutableSortedDictionary
    href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Immutable
  isExternal: false
  name: System.Collections.Immutable
  fullName: System.Collections.Immutable
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: ImmutableSortedDictionary<TKey, TValue>
  name.vb: ImmutableSortedDictionary(Of TKey, TValue)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary`2
    name: ImmutableSortedDictionary
    fullName: System.Collections.Immutable.ImmutableSortedDictionary
    href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary`2
    name: ImmutableSortedDictionary
    fullName: System.Collections.Immutable.ImmutableSortedDictionary
    href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic.IComparer{{TKey}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  name: IComparer<TKey>
  name.vb: IComparer(Of TKey)
  fullName: System.Collections.Generic.IComparer<TKey>
  fullName.vb: System.Collections.Generic.IComparer(Of TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
- uid: System.Collections.Generic.IComparer`1
  parent: System.Collections.Generic
  isExternal: true
  name: IComparer<T>
  name.vb: IComparer(Of T)
  fullName: System.Collections.Generic.IComparer<T>
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEqualityComparer{{TValue}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<TValue>
  name.vb: IEqualityComparer(Of TValue)
  fullName: System.Collections.Generic.IEqualityComparer<TValue>
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEqualityComparer`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEqualityComparer<T>
  name.vb: IEqualityComparer(Of T)
  fullName: System.Collections.Generic.IEqualityComparer<T>
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<TKey, TValue>>
  name.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue))
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  name.vb: IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Immutable.ImmutableSortedDictionary{{TKey},{TValue}}.Builder
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableSortedDictionary`2.Builder
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.Builder.yml
  name: ImmutableSortedDictionary.Builder<>
  name.vb: ImmutableSortedDictionary.Builder(Of )
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.Builder<>
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.Builder(Of )
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Builder
    name: ImmutableSortedDictionary.Builder
    fullName: System.Collections.Immutable.ImmutableSortedDictionary.Builder
    href: System.Collections.Immutable.ImmutableSortedDictionary`2.Builder.yml
  - name: <
    fullName: <
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Builder
    name: ImmutableSortedDictionary.Builder
    fullName: System.Collections.Immutable.ImmutableSortedDictionary.Builder
    href: System.Collections.Immutable.ImmutableSortedDictionary`2.Builder.yml
  - name: '(Of '
    fullName: '(Of '
  - name: )
    fullName: )
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Builder
  parent: System.Collections.Immutable
  isExternal: false
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.Builder.yml
  name: ImmutableSortedDictionary.Builder<>
  name.vb: ImmutableSortedDictionary.Builder(Of )
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.Builder<>
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.Builder(Of )
  type: Class
  summary: >-
    A sorted dictionary that mutates with little or no memory allocations,

    can produce and/or build on immutable sorted dictionary instances very efficiently.
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Builder
    name: ImmutableSortedDictionary.Builder
    fullName: System.Collections.Immutable.ImmutableSortedDictionary.Builder
    href: System.Collections.Immutable.ImmutableSortedDictionary`2.Builder.yml
  - name: <
    fullName: <
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Builder
    name: ImmutableSortedDictionary.Builder
    fullName: System.Collections.Immutable.ImmutableSortedDictionary.Builder
    href: System.Collections.Immutable.ImmutableSortedDictionary`2.Builder.yml
  - name: '(Of '
    fullName: '(Of '
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{TSource}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TSource>
  name.vb: IEnumerable(Of TSource)
  fullName: System.Collections.Generic.IEnumerable<TSource>
  fullName.vb: System.Collections.Generic.IEnumerable(Of TSource)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
- uid: System.Func{{TSource},{TKey}}
  parent: System
  definition: System.Func`2
  name: Func<TSource, TKey>
  name.vb: Func(Of TSource, TKey)
  fullName: System.Func<TSource, TKey>
  fullName.vb: System.Func(Of TSource, TKey)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
- uid: System.Func{{TSource},{TValue}}
  parent: System
  definition: System.Func`2
  name: Func<TSource, TValue>
  name.vb: Func(Of TSource, TValue)
  fullName: System.Func<TSource, TValue>
  fullName.vb: System.Func(Of TSource, TValue)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Func`2
  parent: System
  isExternal: true
  name: Func<T, TResult>
  name.vb: Func(Of T, TResult)
  fullName: System.Func<T, TResult>
  fullName.vb: System.Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
