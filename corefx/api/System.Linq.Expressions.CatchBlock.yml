items:
- uid: System.Linq.Expressions.CatchBlock
  id: CatchBlock
  parent: System.Linq.Expressions
  children:
  - System.Linq.Expressions.CatchBlock.Body
  - System.Linq.Expressions.CatchBlock.Filter
  - System.Linq.Expressions.CatchBlock.Test
  - System.Linq.Expressions.CatchBlock.ToString
  - System.Linq.Expressions.CatchBlock.Update(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  - System.Linq.Expressions.CatchBlock.Variable
  href: System.Linq.Expressions.CatchBlock.yml
  name: CatchBlock
  fullName: System.Linq.Expressions.CatchBlock
  type: Class
  source:
    remote: &o0
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/CatchBlock.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/CatchBlock.cs
    startLine: 13
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: >-
    Represents a catch statement in a try block.

    This must have the same return type (i.e., the type of [System.Linq.Expressions.CatchBlock.Body](System.Linq.Expressions.CatchBlock.yml)) as the try block it is associated with.
  syntax:
    content: public sealed class CatchBlock
    content.vb: Public NotInheritable Class CatchBlock
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Linq.Expressions.CatchBlock.Variable
  id: Variable
  parent: System.Linq.Expressions.CatchBlock
  href: System.Linq.Expressions.CatchBlock.yml
  name: Variable
  fullName: System.Linq.Expressions.CatchBlock.Variable
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/CatchBlock.cs
    startLine: 32
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Gets a reference to the [System.Exception]() object caught by this handler.
  syntax:
    content: public ParameterExpression Variable { get; }
    content.vb: Public ReadOnly Property Variable As ParameterExpression
    parameters: []
    return:
      type: System.Linq.Expressions.ParameterExpression
- uid: System.Linq.Expressions.CatchBlock.Test
  id: Test
  parent: System.Linq.Expressions.CatchBlock
  href: System.Linq.Expressions.CatchBlock.yml
  name: Test
  fullName: System.Linq.Expressions.CatchBlock.Test
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/CatchBlock.cs
    startLine: 40
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Gets the type of [System.Exception]() this handler catches.
  syntax:
    content: public Type Test { get; }
    content.vb: Public ReadOnly Property Test As Type
    parameters: []
    return:
      type: System.Type
- uid: System.Linq.Expressions.CatchBlock.Body
  id: Body
  parent: System.Linq.Expressions.CatchBlock
  href: System.Linq.Expressions.CatchBlock.yml
  name: Body
  fullName: System.Linq.Expressions.CatchBlock.Body
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/CatchBlock.cs
    startLine: 48
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Gets the body of the catch block.
  syntax:
    content: public Expression Body { get; }
    content.vb: Public ReadOnly Property Body As Expression
    parameters: []
    return:
      type: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.CatchBlock.Filter
  id: Filter
  parent: System.Linq.Expressions.CatchBlock
  href: System.Linq.Expressions.CatchBlock.yml
  name: Filter
  fullName: System.Linq.Expressions.CatchBlock.Filter
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/CatchBlock.cs
    startLine: 56
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Gets the body of the [System.Linq.Expressions.CatchBlock](System.Linq.Expressions.CatchBlock.yml)'s filter.
  syntax:
    content: public Expression Filter { get; }
    content.vb: Public ReadOnly Property Filter As Expression
    parameters: []
    return:
      type: System.Linq.Expressions.Expression
- uid: System.Linq.Expressions.CatchBlock.ToString
  id: ToString
  parent: System.Linq.Expressions.CatchBlock
  href: System.Linq.Expressions.CatchBlock.yml
  name: ToString()
  fullName: System.Linq.Expressions.CatchBlock.ToString()
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/CatchBlock.cs
    startLine: 68
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Returns a [System.String]() that represents the current [System.Object]().
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: A <see cref="T:System.String" /> that represents the current <see cref="T:System.Object" />.
  overridden: System.Object.ToString
- uid: System.Linq.Expressions.CatchBlock.Update(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  id: Update(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)
  parent: System.Linq.Expressions.CatchBlock
  href: System.Linq.Expressions.CatchBlock.yml
  name: Update(ParameterExpression, Expression, Expression)
  fullName: System.Linq.Expressions.CatchBlock.Update(System.Linq.Expressions.ParameterExpression, System.Linq.Expressions.Expression, System.Linq.Expressions.Expression)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/CatchBlock.cs
    startLine: 82
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: >-
    Creates a new expression that is like this one, but using the

    supplied children. If all of the children are the same, it will

    return this expression.
  syntax:
    content: public CatchBlock Update(ParameterExpression variable, Expression filter, Expression body)
    content.vb: Public Function Update(variable As ParameterExpression, filter As Expression, body As Expression) As CatchBlock
    parameters:
    - id: variable
      type: System.Linq.Expressions.ParameterExpression
      description: The [System.Linq.Expressions.CatchBlock.Variable](System.Linq.Expressions.CatchBlock.yml) property of the result.
    - id: filter
      type: System.Linq.Expressions.Expression
      description: The [System.Linq.Expressions.CatchBlock.Filter](System.Linq.Expressions.CatchBlock.yml) property of the result.
    - id: body
      type: System.Linq.Expressions.Expression
      description: The [System.Linq.Expressions.CatchBlock.Body](System.Linq.Expressions.CatchBlock.yml) property of the result.
    return:
      type: System.Linq.Expressions.CatchBlock
      description: This expression if no children changed, or an expression with the updated children.
references:
- uid: CatchBlock.Body
- uid: System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  fullName: System.Linq.Expressions
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  fullName: System.Exception
- uid: System.Linq.Expressions.ParameterExpression
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.ParameterExpression.yml
  name: ParameterExpression
  fullName: System.Linq.Expressions.ParameterExpression
  type: Class
  summary: Represents a named parameter expression.
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  fullName: System.Type
- uid: System.Linq.Expressions.Expression
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.Expression.yml
  name: Expression
  fullName: System.Linq.Expressions.Expression
  type: Class
  summary: The base type for all nodes in Expression Trees.
- uid: System.Linq.Expressions.CatchBlock
  parent: System.Linq.Expressions
  isExternal: false
  href: System.Linq.Expressions.CatchBlock.yml
  name: CatchBlock
  fullName: System.Linq.Expressions.CatchBlock
  type: Class
  summary: >-
    Represents a catch statement in a try block.

    This must have the same return type (i.e., the type of @'CatchBlock.Body') as the try block it is associated with.
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Linq.Expressions.CatchBlock.Variable
- uid: System.Linq.Expressions.CatchBlock.Filter
- uid: System.Linq.Expressions.CatchBlock.Body
