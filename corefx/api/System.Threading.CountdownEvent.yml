items:
- uid: System.Threading.CountdownEvent
  id: CountdownEvent
  parent: System.Threading
  children:
  - System.Threading.CountdownEvent.#ctor(System.Int32)
  - System.Threading.CountdownEvent.AddCount
  - System.Threading.CountdownEvent.AddCount(System.Int32)
  - System.Threading.CountdownEvent.CurrentCount
  - System.Threading.CountdownEvent.Dispose
  - System.Threading.CountdownEvent.Dispose(System.Boolean)
  - System.Threading.CountdownEvent.InitialCount
  - System.Threading.CountdownEvent.IsSet
  - System.Threading.CountdownEvent.Reset
  - System.Threading.CountdownEvent.Reset(System.Int32)
  - System.Threading.CountdownEvent.Signal
  - System.Threading.CountdownEvent.Signal(System.Int32)
  - System.Threading.CountdownEvent.TryAddCount
  - System.Threading.CountdownEvent.TryAddCount(System.Int32)
  - System.Threading.CountdownEvent.Wait
  - System.Threading.CountdownEvent.Wait(System.Int32)
  - System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)
  - System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)
  - System.Threading.CountdownEvent.Wait(System.TimeSpan)
  - System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)
  - System.Threading.CountdownEvent.WaitHandle
  href: System.Threading.CountdownEvent.yml
  name: CountdownEvent
  fullName: System.Threading.CountdownEvent
  type: Class
  source:
    remote: &o0
      path: src/System.Threading/src/System/Threading/CountdownEvent.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 23
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Represents a synchronization primitive that is signaled when its count reaches zero.
  remarks: >-
    All public and protected members of <see cref="T:System.Threading.CountdownEvent" /> are thread-safe and may be used

    concurrently from multiple threads, with the exception of Dispose, which

    must only be used when all other operations on the <see cref="T:System.Threading.CountdownEvent" /> have

    completed, and Reset, which should only be used when no other threads are

    accessing the event.
  syntax:
    content: 'public class CountdownEvent : IDisposable'
    content.vb: Public Class CountdownEvent Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Threading.CountdownEvent.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Threading.CountdownEvent
  href: System.Threading.CountdownEvent.yml
  name: CountdownEvent(Int32)
  fullName: System.Threading.CountdownEvent.CountdownEvent(System.Int32)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 46
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: >-
    Initializes a new instance of [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml) class with the

    specified count.
  syntax:
    content: public CountdownEvent(int initialCount)
    content.vb: Public Sub New(initialCount As Integer)
    parameters:
    - id: initialCount
      type: System.Int32
      description: The number of signals required to set the <see cref="T:System.Threading.CountdownEvent" />.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: >-
      is less

      than 0.
- uid: System.Threading.CountdownEvent.CurrentCount
  id: CurrentCount
  parent: System.Threading.CountdownEvent
  href: System.Threading.CountdownEvent.yml
  name: CurrentCount
  fullName: System.Threading.CountdownEvent.CurrentCount
  type: Property
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 72
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Gets the number of remaining signals required to set the event.
  syntax:
    content: public int CurrentCount { get; }
    content.vb: Public ReadOnly Property CurrentCount As Integer
    parameters: []
    return:
      type: System.Int32
- uid: System.Threading.CountdownEvent.InitialCount
  id: InitialCount
  parent: System.Threading.CountdownEvent
  href: System.Threading.CountdownEvent.yml
  name: InitialCount
  fullName: System.Threading.CountdownEvent.InitialCount
  type: Property
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 87
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Gets the numbers of signals initially required to set the event.
  syntax:
    content: public int InitialCount { get; }
    content.vb: Public ReadOnly Property InitialCount As Integer
    parameters: []
    return:
      type: System.Int32
- uid: System.Threading.CountdownEvent.IsSet
  id: IsSet
  parent: System.Threading.CountdownEvent
  href: System.Threading.CountdownEvent.yml
  name: IsSet
  fullName: System.Threading.CountdownEvent.IsSet
  type: Property
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 96
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Determines whether the event is set.
  syntax:
    content: public bool IsSet { get; }
    content.vb: Public ReadOnly Property IsSet As Boolean
    parameters: []
    return:
      type: System.Boolean
- uid: System.Threading.CountdownEvent.WaitHandle
  id: WaitHandle
  parent: System.Threading.CountdownEvent
  href: System.Threading.CountdownEvent.yml
  name: WaitHandle
  fullName: System.Threading.CountdownEvent.WaitHandle
  type: Property
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 118
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Gets a [System.Threading.WaitHandle]() that is used to wait for the event to be set.
  remarks: >-
    [System.Threading.CountdownEvent.WaitHandle](System.Threading.CountdownEvent.yml) should only be used if it's needed for integration with code bases

    that rely on having a WaitHandle.  If all that's needed is to wait for the [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml)

    to be set, the [System.Threading.CountdownEvent.Wait](System.Threading.CountdownEvent.yml) method should be preferred.
  syntax:
    content: public WaitHandle WaitHandle { get; }
    content.vb: Public ReadOnly Property WaitHandle As WaitHandle
    parameters: []
    return:
      type: System.Threading.WaitHandle
  exceptions:
  - type: System.ObjectDisposedException
    description: The current instance has already been disposed.
- uid: System.Threading.CountdownEvent.Dispose
  id: Dispose
  parent: System.Threading.CountdownEvent
  href: System.Threading.CountdownEvent.yml
  name: Dispose()
  fullName: System.Threading.CountdownEvent.Dispose()
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 134
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Releases all resources used by the current instance of [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml).
  remarks: >-
    Unlike most of the members of <see cref="T:System.Threading.CountdownEvent" />, <see cref="M:System.Threading.CountdownEvent.Dispose" /> is not

    thread-safe and may not be used concurrently with other members of this instance.
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
- uid: System.Threading.CountdownEvent.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Threading.CountdownEvent
  href: System.Threading.CountdownEvent.yml
  name: Dispose(Boolean)
  fullName: System.Threading.CountdownEvent.Dispose(System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 155
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: >-
    When overridden in a derived class, releases the unmanaged resources used by the

    [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml), and optionally releases the managed resources.
  remarks: >-
    Unlike most of the members of <see cref="T:System.Threading.CountdownEvent" />, <see cref="M:System.Threading.CountdownEvent.Dispose" /> is not

    thread-safe and may not be used concurrently with other members of this instance.
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: >-
        true to release both managed and unmanaged resources; false to release

        only unmanaged resources.
- uid: System.Threading.CountdownEvent.Signal
  id: Signal
  parent: System.Threading.CountdownEvent
  href: System.Threading.CountdownEvent.yml
  name: Signal()
  fullName: System.Threading.CountdownEvent.Signal()
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 174
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: >-
    Registers a signal with the [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml), decrementing its

    count.
  syntax:
    content: public bool Signal()
    content.vb: Public Function Signal As Boolean
    return:
      type: System.Boolean
      description: >-
        true if the signal caused the count to reach zero and the event was set; otherwise,

        false.
  exceptions:
  - type: System.InvalidOperationException
    description: The current instance is already set.
  - type: System.ObjectDisposedException
    description: >-
      The current instance has already been

      disposed.
- uid: System.Threading.CountdownEvent.Signal(System.Int32)
  id: Signal(System.Int32)
  parent: System.Threading.CountdownEvent
  href: System.Threading.CountdownEvent.yml
  name: Signal(Int32)
  fullName: System.Threading.CountdownEvent.Signal(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 216
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: >-
    Registers multiple signals with the [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml),

    decrementing its count by the specified amount.
  syntax:
    content: public bool Signal(int signalCount)
    content.vb: Public Function Signal(signalCount As Integer) As Boolean
    parameters:
    - id: signalCount
      type: System.Int32
      description: The number of signals to register.
    return:
      type: System.Boolean
      description: >-
        true if the signals caused the count to reach zero and the event was set; otherwise,

        false.
  exceptions:
  - type: System.InvalidOperationException
    description: The current instance is already set. -or- Or  is greater than .
  - type: System.ArgumentOutOfRangeException
    description: >-
      is less

      than 1.
  - type: System.ObjectDisposedException
    description: >-
      The current instance has already been

      disposed.
- uid: System.Threading.CountdownEvent.AddCount
  id: AddCount
  parent: System.Threading.CountdownEvent
  href: System.Threading.CountdownEvent.yml
  name: AddCount()
  fullName: System.Threading.CountdownEvent.AddCount()
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 272
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Increments the [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml)'s current count by one.
  syntax:
    content: public void AddCount()
    content.vb: Public Sub AddCount
  exceptions:
  - type: System.InvalidOperationException
    description: >-
      The current instance is already

      set.
  - type: System.InvalidOperationException
    description: is equal to .
  - type: System.ObjectDisposedException
    description: The current instance has already been disposed.
- uid: System.Threading.CountdownEvent.TryAddCount
  id: TryAddCount
  parent: System.Threading.CountdownEvent
  href: System.Threading.CountdownEvent.yml
  name: TryAddCount()
  fullName: System.Threading.CountdownEvent.TryAddCount()
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 286
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Attempts to increment the [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml)'s current count by one.
  syntax:
    content: public bool TryAddCount()
    content.vb: Public Function TryAddCount As Boolean
    return:
      type: System.Boolean
      description: >-
        true if the increment succeeded; otherwise, false. If [System.Threading.CountdownEvent.CurrentCount](System.Threading.CountdownEvent.yml) is

        already at zero. this will return false.
  exceptions:
  - type: System.InvalidOperationException
    description: is equal to .
  - type: System.ObjectDisposedException
    description: >-
      The current instance has already been

      disposed.
- uid: System.Threading.CountdownEvent.AddCount(System.Int32)
  id: AddCount(System.Int32)
  parent: System.Threading.CountdownEvent
  href: System.Threading.CountdownEvent.yml
  name: AddCount(Int32)
  fullName: System.Threading.CountdownEvent.AddCount(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 304
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: >-
    Increments the [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml)'s current count by a specified

    value.
  syntax:
    content: public void AddCount(int signalCount)
    content.vb: Public Sub AddCount(signalCount As Integer)
    parameters:
    - id: signalCount
      type: System.Int32
      description: The value by which to increase [System.Threading.CountdownEvent.CurrentCount](System.Threading.CountdownEvent.yml).
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: >-
      is less than

      0.
  - type: System.InvalidOperationException
    description: >-
      The current instance is already

      set.
  - type: System.InvalidOperationException
    description: is equal to .
  - type: System.ObjectDisposedException
    description: >-
      The current instance has already been

      disposed.
- uid: System.Threading.CountdownEvent.TryAddCount(System.Int32)
  id: TryAddCount(System.Int32)
  parent: System.Threading.CountdownEvent
  href: System.Threading.CountdownEvent.yml
  name: TryAddCount(Int32)
  fullName: System.Threading.CountdownEvent.TryAddCount(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 327
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: >-
    Attempts to increment the [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml)'s current count by a

    specified value.
  syntax:
    content: public bool TryAddCount(int signalCount)
    content.vb: Public Function TryAddCount(signalCount As Integer) As Boolean
    parameters:
    - id: signalCount
      type: System.Int32
      description: The value by which to increase <see cref="P:System.Threading.CountdownEvent.CurrentCount" />.
    return:
      type: System.Boolean
      description: >-
        true if the increment succeeded; otherwise, false. If [System.Threading.CountdownEvent.CurrentCount](System.Threading.CountdownEvent.yml) is

        already at zero this will return false.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: >-
      is less

      than 0.
  - type: System.InvalidOperationException
    description: >-
      The current instance is already

      set.
  - type: System.InvalidOperationException
    description: is equal to .
  - type: System.ObjectDisposedException
    description: >-
      The current instance has already been

      disposed.
- uid: System.Threading.CountdownEvent.Reset
  id: Reset
  parent: System.Threading.CountdownEvent
  href: System.Threading.CountdownEvent.yml
  name: Reset()
  fullName: System.Threading.CountdownEvent.Reset()
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 377
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Resets the [System.Threading.CountdownEvent.CurrentCount](System.Threading.CountdownEvent.yml) to the value of [System.Threading.CountdownEvent.InitialCount](System.Threading.CountdownEvent.yml).
  remarks: >-
    Unlike most of the members of [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml), Reset is not

    thread-safe and may not be used concurrently with other members of this instance.
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
  exceptions:
  - type: System.ObjectDisposedException
    description: >-
      The current instance has already been

      disposed..
- uid: System.Threading.CountdownEvent.Reset(System.Int32)
  id: Reset(System.Int32)
  parent: System.Threading.CountdownEvent
  href: System.Threading.CountdownEvent.yml
  name: Reset(Int32)
  fullName: System.Threading.CountdownEvent.Reset(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 394
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Resets the [System.Threading.CountdownEvent.CurrentCount](System.Threading.CountdownEvent.yml) to a specified value.
  remarks: >-
    Unlike most of the members of [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml), Reset is not

    thread-safe and may not be used concurrently with other members of this instance.
  syntax:
    content: public void Reset(int count)
    content.vb: Public Sub Reset(count As Integer)
    parameters:
    - id: count
      type: System.Int32
      description: The number of signals required to set the <see cref="T:System.Threading.CountdownEvent" />.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: >-
      is

      less than 0.
  - type: System.ObjectDisposedException
    description: The current instance has alread been disposed.
- uid: System.Threading.CountdownEvent.Wait
  id: Wait
  parent: System.Threading.CountdownEvent
  href: System.Threading.CountdownEvent.yml
  name: Wait()
  fullName: System.Threading.CountdownEvent.Wait()
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 425
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: Blocks the current thread until the [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml) is set.
  remarks: >-
    The caller of this method blocks indefinitely until the current instance is set. The caller will

    return immediately if the event is currently in a set state.
  syntax:
    content: public void Wait()
    content.vb: Public Sub Wait
  exceptions:
  - type: System.ObjectDisposedException
    description: >-
      The current instance has already been

      disposed.
- uid: System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)
  id: Wait(System.Threading.CancellationToken)
  parent: System.Threading.CountdownEvent
  href: System.Threading.CountdownEvent.yml
  name: Wait(CancellationToken)
  fullName: System.Threading.CountdownEvent.Wait(System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 448
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: >-
    Blocks the current thread until the [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml) is set, while

    observing a [System.Threading.CancellationToken]().
  remarks: >-
    The caller of this method blocks indefinitely until the current instance is set. The caller will

    return immediately if the event is currently in a set state.  If the

    <see cref="T:System.Threading.CancellationToken">CancellationToken</see> being observed

    is canceled during the wait operation, an <see cref="T:System.OperationCanceledException" />

    will be thrown.
  syntax:
    content: public void Wait(CancellationToken cancellationToken)
    content.vb: Public Sub Wait(cancellationToken As CancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: >-
        The <see cref="T:System.Threading.CancellationToken" /> to

        observe.
  exceptions:
  - type: System.OperationCanceledException
    description: >-
      has been

      canceled.
  - type: System.ObjectDisposedException
    description: >-
      The current instance has already been

      disposed.
- uid: System.Threading.CountdownEvent.Wait(System.TimeSpan)
  id: Wait(System.TimeSpan)
  parent: System.Threading.CountdownEvent
  href: System.Threading.CountdownEvent.yml
  name: Wait(TimeSpan)
  fullName: System.Threading.CountdownEvent.Wait(System.TimeSpan)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 467
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: >-
    Blocks the current thread until the [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml) is set, using a

    [System.TimeSpan]() to measure the time interval.
  syntax:
    content: public bool Wait(TimeSpan timeout)
    content.vb: Public Function Wait(timeout As TimeSpan) As Boolean
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: >-
        A <see cref="T:System.TimeSpan" /> that represents the number of

        milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to

        wait indefinitely.
    return:
      type: System.Boolean
      description: >-
        true if the <see cref="T:System.Threading.CountdownEvent" /> was set; otherwise,

        false.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: >-
      is a negative

      number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater

      than .
  - type: System.ObjectDisposedException
    description: >-
      The current instance has already been

      disposed.
- uid: System.Threading.CountdownEvent.Wait(System.TimeSpan,System.Threading.CancellationToken)
  id: Wait(System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Threading.CountdownEvent
  href: System.Threading.CountdownEvent.yml
  name: Wait(TimeSpan, CancellationToken)
  fullName: System.Threading.CountdownEvent.Wait(System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 497
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: >-
    Blocks the current thread until the [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml) is set, using

    a [System.TimeSpan]() to measure the time interval, while observing a

    [System.Threading.CancellationToken]().
  syntax:
    content: public bool Wait(TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function Wait(timeout As TimeSpan, cancellationToken As CancellationToken) As Boolean
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: >-
        A <see cref="T:System.TimeSpan" /> that represents the number of

        milliseconds to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to

        wait indefinitely.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: >-
        The <see cref="T:System.Threading.CancellationToken" /> to

        observe.
    return:
      type: System.Boolean
      description: >-
        true if the <see cref="T:System.Threading.CountdownEvent" /> was set; otherwise,

        false.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: >-
      is a negative

      number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater

      than .
  - type: System.ObjectDisposedException
    description: >-
      The current instance has already been

      disposed.
  - type: System.OperationCanceledException
    description: >-
      has

      been canceled.
- uid: System.Threading.CountdownEvent.Wait(System.Int32)
  id: Wait(System.Int32)
  parent: System.Threading.CountdownEvent
  href: System.Threading.CountdownEvent.yml
  name: Wait(Int32)
  fullName: System.Threading.CountdownEvent.Wait(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 520
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: >-
    Blocks the current thread until the [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml) is set, using a

    32-bit signed integer to measure the time interval.
  syntax:
    content: public bool Wait(int millisecondsTimeout)
    content.vb: Public Function Wait(millisecondsTimeout As Integer) As Boolean
    parameters:
    - id: millisecondsTimeout
      type: System.Int32
      description: The number of milliseconds to wait, or [System.Threading.Timeout.Infinite]()(-1) to wait indefinitely.
    return:
      type: System.Boolean
      description: >-
        true if the <see cref="T:System.Threading.CountdownEvent" /> was set; otherwise,

        false.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: >-
      is a

      negative number other than -1, which represents an infinite time-out.
  - type: System.ObjectDisposedException
    description: >-
      The current instance has already been

      disposed.
- uid: System.Threading.CountdownEvent.Wait(System.Int32,System.Threading.CancellationToken)
  id: Wait(System.Int32,System.Threading.CancellationToken)
  parent: System.Threading.CountdownEvent
  href: System.Threading.CountdownEvent.yml
  name: Wait(Int32, CancellationToken)
  fullName: System.Threading.CountdownEvent.Wait(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/System.Threading/src/System/Threading/CountdownEvent.cs
    startLine: 542
  assemblies:
  - System.Threading
  namespace: System.Threading
  summary: >-
    Blocks the current thread until the [System.Threading.CountdownEvent](System.Threading.CountdownEvent.yml) is set, using a

    32-bit signed integer to measure the time interval, while observing a

    [System.Threading.CancellationToken]().
  syntax:
    content: public bool Wait(int millisecondsTimeout, CancellationToken cancellationToken)
    content.vb: Public Function Wait(millisecondsTimeout As Integer, cancellationToken As CancellationToken) As Boolean
    parameters:
    - id: millisecondsTimeout
      type: System.Int32
      description: The number of milliseconds to wait, or [System.Threading.Timeout.Infinite]()(-1) to wait indefinitely.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: >-
        The <see cref="T:System.Threading.CancellationToken" /> to

        observe.
    return:
      type: System.Boolean
      description: >-
        true if the <see cref="T:System.Threading.CountdownEvent" /> was set; otherwise,

        false.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: >-
      is a

      negative number other than -1, which represents an infinite time-out.
  - type: System.ObjectDisposedException
    description: >-
      The current instance has already been

      disposed.
  - type: System.OperationCanceledException
    description: >-
      has

      been canceled.
references:
- uid: System.Threading.CountdownEvent
  isExternal: false
  href: System.Threading.CountdownEvent.yml
  name: CountdownEvent
  fullName: System.Threading.CountdownEvent
  type: Class
  summary: Represents a synchronization primitive that is signaled when its count reaches zero.
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.ArgumentOutOfRangeException
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Threading.WaitHandle
  parent: System.Threading
  isExternal: true
  name: WaitHandle
  fullName: System.Threading.WaitHandle
- uid: System.Threading.CountdownEvent.WaitHandle
- uid: System.Threading.CountdownEvent.Wait
- uid: System.ObjectDisposedException
- uid: System.InvalidOperationException
  parent: System
  isExternal: true
  name: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Threading.CountdownEvent.CurrentCount
- uid: System.Threading.CountdownEvent.InitialCount
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.OperationCanceledException
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  fullName: System.TimeSpan
- uid: System.Threading.Timeout.Infinite
