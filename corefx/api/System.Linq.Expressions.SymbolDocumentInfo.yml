items:
- uid: System.Linq.Expressions.SymbolDocumentInfo
  id: SymbolDocumentInfo
  parent: System.Linq.Expressions
  children:
  - System.Linq.Expressions.SymbolDocumentInfo.DocumentType
  - System.Linq.Expressions.SymbolDocumentInfo.FileName
  - System.Linq.Expressions.SymbolDocumentInfo.Language
  - System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor
  href: System.Linq.Expressions.SymbolDocumentInfo.yml
  name: SymbolDocumentInfo
  fullName: System.Linq.Expressions.SymbolDocumentInfo
  type: Class
  source:
    remote: &o0
      path: src/System.Linq.Expressions/src/System/Linq/Expressions/SymbolDocumentInfo.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/SymbolDocumentInfo.cs
    startLine: 12
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: >-
    Stores information needed to emit debugging symbol information for a

    source file, in particular the file name and unique language identifier.
  syntax:
    content: public class SymbolDocumentInfo
    content.vb: Public Class SymbolDocumentInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Linq.Expressions.SymbolDocumentInfo.FileName
  id: FileName
  parent: System.Linq.Expressions.SymbolDocumentInfo
  href: System.Linq.Expressions.SymbolDocumentInfo.yml
  name: FileName
  fullName: System.Linq.Expressions.SymbolDocumentInfo.FileName
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/SymbolDocumentInfo.cs
    startLine: 25
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: The source file name.
  syntax:
    content: public string FileName { get; }
    content.vb: Public ReadOnly Property FileName As String
    parameters: []
    return:
      type: System.String
- uid: System.Linq.Expressions.SymbolDocumentInfo.Language
  id: Language
  parent: System.Linq.Expressions.SymbolDocumentInfo
  href: System.Linq.Expressions.SymbolDocumentInfo.yml
  name: Language
  fullName: System.Linq.Expressions.SymbolDocumentInfo.Language
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/SymbolDocumentInfo.cs
    startLine: 33
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Returns the language's unique identifier, if any.
  syntax:
    content: public virtual Guid Language { get; }
    content.vb: Public Overridable ReadOnly Property Language As Guid
    parameters: []
    return:
      type: System.Guid
- uid: System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor
  id: LanguageVendor
  parent: System.Linq.Expressions.SymbolDocumentInfo
  href: System.Linq.Expressions.SymbolDocumentInfo.yml
  name: LanguageVendor
  fullName: System.Linq.Expressions.SymbolDocumentInfo.LanguageVendor
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/SymbolDocumentInfo.cs
    startLine: 41
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: Returns the language vendor's unique identifier, if any.
  syntax:
    content: public virtual Guid LanguageVendor { get; }
    content.vb: Public Overridable ReadOnly Property LanguageVendor As Guid
    parameters: []
    return:
      type: System.Guid
- uid: System.Linq.Expressions.SymbolDocumentInfo.DocumentType
  id: DocumentType
  parent: System.Linq.Expressions.SymbolDocumentInfo
  href: System.Linq.Expressions.SymbolDocumentInfo.yml
  name: DocumentType
  fullName: System.Linq.Expressions.SymbolDocumentInfo.DocumentType
  type: Property
  source:
    remote: *o0
    path: src/System.Linq.Expressions/src/System/Linq/Expressions/SymbolDocumentInfo.cs
    startLine: 52
  assemblies:
  - System.Linq.Expressions
  namespace: System.Linq.Expressions
  summary: >-
    Returns the document type's unique identifier, if any.

    Defaults to the guid for a text file.
  syntax:
    content: public virtual Guid DocumentType { get; }
    content.vb: Public Overridable ReadOnly Property DocumentType As Guid
    parameters: []
    return:
      type: System.Guid
references:
- uid: System.Linq.Expressions
  isExternal: false
  name: System.Linq.Expressions
  fullName: System.Linq.Expressions
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  fullName: System.Guid
