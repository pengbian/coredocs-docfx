items:
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2
  id: ImmutableSortedDictionary`2
  parent: System.Collections.Immutable
  children:
  - System.Collections.Immutable.ImmutableSortedDictionary`2.Add(`0,`1)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  - System.Collections.Immutable.ImmutableSortedDictionary`2.Clear
  - System.Collections.Immutable.ImmutableSortedDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  - System.Collections.Immutable.ImmutableSortedDictionary`2.ContainsKey(`0)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.ContainsValue(`1)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.Count
  - System.Collections.Immutable.ImmutableSortedDictionary`2.Empty
  - System.Collections.Immutable.ImmutableSortedDictionary`2.GetEnumerator
  - System.Collections.Immutable.ImmutableSortedDictionary`2.IsEmpty
  - System.Collections.Immutable.ImmutableSortedDictionary`2.Item(`0)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.KeyComparer
  - System.Collections.Immutable.ImmutableSortedDictionary`2.Keys
  - System.Collections.Immutable.ImmutableSortedDictionary`2.Remove(`0)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.RemoveRange(System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Immutable.ImmutableSortedDictionary`2.SetItem(`0,`1)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.SetItems(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Item(`0)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#ICollection#IsSynchronized
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#ICollection#SyncRoot
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Clear
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Contains(System.Object)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#GetEnumerator
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#IsFixedSize
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#IsReadOnly
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Item(System.Object)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Keys
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Remove(System.Object)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Values
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Add(`0,`1)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Clear
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Remove(`0)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#RemoveRange(System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#SetItem(`0,`1)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#SetItems(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  - System.Collections.Immutable.ImmutableSortedDictionary`2.ToBuilder
  - System.Collections.Immutable.ImmutableSortedDictionary`2.TryGetKey(`0,`0@)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.TryGetValue(`0,`1@)
  - System.Collections.Immutable.ImmutableSortedDictionary`2.ValueComparer
  - System.Collections.Immutable.ImmutableSortedDictionary`2.Values
  - System.Collections.Immutable.ImmutableSortedDictionary`2.WithComparers(System.Collections.Generic.IComparer{`0})
  - System.Collections.Immutable.ImmutableSortedDictionary`2.WithComparers(System.Collections.Generic.IComparer{`0},System.Collections.Generic.IEqualityComparer{`1})
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: ImmutableSortedDictionary<TKey, TValue>
  name.vb: ImmutableSortedDictionary(Of TKey, TValue)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue)
  type: Class
  source:
    remote: &o0
      path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 19
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: An immutable sorted dictionary implementation.
  syntax:
    content: 'public sealed class ImmutableSortedDictionary<TKey, TValue> : IImmutableDictionary<TKey, TValue>, IReadOnlyDictionary<TKey, TValue>, IReadOnlyCollection<KeyValuePair<TKey, TValue>>, ISortKeyCollection<TKey>, IDictionary<TKey, TValue>, ICollection<KeyValuePair<TKey, TValue>>, IEnumerable<KeyValuePair<TKey, TValue>>, IDictionary, ICollection, IEnumerable'
    content.vb: Public NotInheritable Class ImmutableSortedDictionary(Of TKey, TValue) Implements IImmutableDictionary(Of TKey, TValue), IReadOnlyDictionary(Of TKey, TValue), IReadOnlyCollection(Of KeyValuePair(Of TKey, TValue)), ISortKeyCollection(Of TKey), IDictionary(Of TKey, TValue), ICollection(Of KeyValuePair(Of TKey, TValue)), IEnumerable(Of KeyValuePair(Of TKey, TValue)), IDictionary, ICollection, IEnumerable
    typeParameters:
    - id: TKey
      description: The type of the key.
    - id: TValue
      description: The type of the value.
  inheritance:
  - System.Object
  implements:
  - System.Collections.Immutable.IImmutableDictionary{{TKey},{TValue}}
  - System.Collections.Generic.IReadOnlyDictionary{{TKey},{TValue}}
  - System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  - System.Collections.Generic.IDictionary{{TKey},{TValue}}
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  - System.Collections.IDictionary
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Empty
  id: Empty
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: Empty
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.Empty
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).Empty
  type: Field
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 27
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: An empty sorted dictionary with default sort and equality comparers.
  syntax:
    content: public static readonly ImmutableSortedDictionary<TKey, TValue> Empty
    content.vb: Public Shared ReadOnly Empty As ImmutableSortedDictionary(Of TKey, TValue)
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Clear
  id: Clear
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: Clear()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.Clear()
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).Clear()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 85
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content: public ImmutableSortedDictionary<TKey, TValue> Clear()
    content.vb: Public Function Clear As ImmutableSortedDictionary(Of TKey, TValue)
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary`2
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.ValueComparer
  id: ValueComparer
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: ValueComparer
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.ValueComparer
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).ValueComparer
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 98
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Gets the value comparer used to determine whether values are equal.
  syntax:
    content: public IEqualityComparer<TValue> ValueComparer { get; }
    content.vb: Public ReadOnly Property ValueComparer As IEqualityComparer(Of TValue)
    parameters: []
    return:
      type: System.Collections.Generic.IEqualityComparer{{TValue}}
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.IsEmpty
  id: IsEmpty
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IsEmpty
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.IsEmpty
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).IsEmpty
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 106
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content: public bool IsEmpty { get; }
    content.vb: Public ReadOnly Property IsEmpty As Boolean
    parameters: []
    return:
      type: System.Boolean
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Count
  id: Count
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: Count
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.Count
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).Count
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 114
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Keys
  id: Keys
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: Keys
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.Keys
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).Keys
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 122
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content: public IEnumerable<TKey> Keys { get; }
    content.vb: Public ReadOnly Property Keys As IEnumerable(Of TKey)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{{TKey}}
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Values
  id: Values
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: Values
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.Values
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).Values
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 130
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content: public IEnumerable<TValue> Values { get; }
    content.vb: Public ReadOnly Property Values As IEnumerable(Of TValue)
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{{TValue}}
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Clear
  id: System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Clear
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IImmutableDictionary<TKey, TValue>.Clear()
  name.vb: System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.Clear()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Immutable.IImmutableDictionary<TKey, TValue>.Clear()
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.Clear()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 138
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content: IImmutableDictionary<TKey, TValue> IImmutableDictionary<TKey, TValue>.Clear()
    content.vb: Function System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.Clear As IImmutableDictionary(Of TKey, TValue) Implements IImmutableDictionary(Of TKey, TValue).Clear
    return:
      type: System.Collections.Immutable.IImmutableDictionary{{TKey},{TValue}}
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  id: System#Collections#Generic#IDictionary{TKey,TValue}#Keys
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IDictionary<TKey, TValue>.Keys
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Keys
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Keys
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Keys
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 150
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Gets the keys.
  syntax:
    content: ICollection<TKey> IDictionary<TKey, TValue>.Keys { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.IDictionary<TKey,TValue>.Keys As ICollection(Of TKey) Implements IDictionary(Of TKey, TValue).Keys
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{{TKey}}
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Values
  id: System#Collections#Generic#IDictionary{TKey,TValue}#Values
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IDictionary<TKey, TValue>.Values
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Values
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Values
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Values
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 158
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Gets the values.
  syntax:
    content: ICollection<TValue> IDictionary<TKey, TValue>.Values { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.IDictionary<TKey,TValue>.Values As ICollection(Of TValue) Implements IDictionary(Of TKey, TValue).Values
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{{TValue}}
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#IsReadOnly
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.IsReadOnly
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 167
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: bool ICollection<KeyValuePair<TKey, TValue>>.IsReadOnly { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.IsReadOnly As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).IsReadOnly
    parameters: []
    return:
      type: System.Boolean
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.KeyComparer
  id: KeyComparer
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: KeyComparer
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.KeyComparer
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).KeyComparer
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 179
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content: public IComparer<TKey> KeyComparer { get; }
    content.vb: Public ReadOnly Property KeyComparer As IComparer(Of TKey)
    parameters: []
    return:
      type: System.Collections.Generic.IComparer{{TKey}}
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Item(`0)
  id: Item(`0)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: Item[TKey]
  name.vb: Item(TKey)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.Item[TKey]
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).Item(TKey)
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 199
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Gets the <typeparamref name="TValue" /> with the specified key.
  syntax:
    content: public TValue this[TKey key] { get; }
    content.vb: Public ReadOnly Property Item(key As TKey) As TValue
    parameters:
    - id: key
      type: '{TKey}'
    return:
      type: '{TValue}'
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Item(`0)
  id: System#Collections#Generic#IDictionary{TKey,TValue}#Item(`0)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IDictionary<TKey, TValue>.Item[TKey]
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Item(TKey)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Item[TKey]
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Item(TKey)
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 220
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Gets or sets the <typeparamref name="TValue" /> with the specified key.
  syntax:
    content: TValue IDictionary<TKey, TValue>.this[TKey key] { get; set; }
    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.IDictionary<TKey,TValue>.Item(key As TKey) As TValue Implements IDictionary(Of TKey, TValue).this
    parameters:
    - id: key
      type: '{TKey}'
    return:
      type: '{TValue}'
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.ToBuilder
  id: ToBuilder
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: ToBuilder()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.ToBuilder()
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).ToBuilder()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 237
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: >-
    Creates a collection with the same contents as this collection that

    can be efficiently mutated across multiple operations using standard

    mutable interfaces.
  remarks: >-
    This is an O(1) operation and results in only a single (small) memory allocation.

    The mutable collection that is returned is *not* thread-safe.
  syntax:
    content: public ImmutableSortedDictionary<TKey, TValue>.Builder ToBuilder()
    content.vb: Public Function ToBuilder As ImmutableSortedDictionary(Of TKey, TValue).Builder
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary`2.Builder
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Add(`0,`1)
  id: Add(`0,`1)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: Add(TKey, TValue)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.Add(TKey, TValue)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).Add(TKey, TValue)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 249
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content: public ImmutableSortedDictionary<TKey, TValue> Add(TKey key, TValue value)
    content.vb: Public Function Add(key As TKey, value As TValue) As ImmutableSortedDictionary(Of TKey, TValue)
    parameters:
    - id: key
      type: '{TKey}'
    - id: value
      type: '{TValue}'
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary`2
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.SetItem(`0,`1)
  id: SetItem(`0,`1)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: SetItem(TKey, TValue)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.SetItem(TKey, TValue)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).SetItem(TKey, TValue)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 262
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content: public ImmutableSortedDictionary<TKey, TValue> SetItem(TKey key, TValue value)
    content.vb: Public Function SetItem(key As TKey, value As TValue) As ImmutableSortedDictionary(Of TKey, TValue)
    parameters:
    - id: key
      type: '{TKey}'
    - id: value
      type: '{TValue}'
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary`2
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.SetItems(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  id: SetItems(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: SetItems(IEnumerable<KeyValuePair<TKey, TValue>>)
  name.vb: SetItems(IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.SetItems(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).SetItems(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 278
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Applies a given set of key=value pairs to an immutable dictionary, replacing any conflicting keys in the resulting dictionary.
  syntax:
    content: public ImmutableSortedDictionary<TKey, TValue> SetItems(IEnumerable<KeyValuePair<TKey, TValue>> items)
    content.vb: Public Function SetItems(items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableSortedDictionary(Of TKey, TValue)
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
      description: The key=value pairs to set on the map.  Any keys that conflict with existing keys will overwrite the previous values.
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary`2
      description: An immutable dictionary.
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  id: AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: AddRange(IEnumerable<KeyValuePair<TKey, TValue>>)
  name.vb: AddRange(IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.AddRange(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).AddRange(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 291
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content: public ImmutableSortedDictionary<TKey, TValue> AddRange(IEnumerable<KeyValuePair<TKey, TValue>> items)
    content.vb: Public Function AddRange(items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As ImmutableSortedDictionary(Of TKey, TValue)
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary`2
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Remove(`0)
  id: Remove(`0)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: Remove(TKey)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.Remove(TKey)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).Remove(TKey)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 304
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content: public ImmutableSortedDictionary<TKey, TValue> Remove(TKey value)
    content.vb: Public Function Remove(value As TKey) As ImmutableSortedDictionary(Of TKey, TValue)
    parameters:
    - id: value
      type: '{TKey}'
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary`2
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.RemoveRange(System.Collections.Generic.IEnumerable{`0})
  id: RemoveRange(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: RemoveRange(IEnumerable<TKey>)
  name.vb: RemoveRange(IEnumerable(Of TKey))
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.RemoveRange(System.Collections.Generic.IEnumerable<TKey>)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).RemoveRange(System.Collections.Generic.IEnumerable(Of TKey))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 317
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content: public ImmutableSortedDictionary<TKey, TValue> RemoveRange(IEnumerable<TKey> keys)
    content.vb: Public Function RemoveRange(keys As IEnumerable(Of TKey)) As ImmutableSortedDictionary(Of TKey, TValue)
    parameters:
    - id: keys
      type: System.Collections.Generic.IEnumerable{{TKey}}
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary`2
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.WithComparers(System.Collections.Generic.IComparer{`0},System.Collections.Generic.IEqualityComparer{`1})
  id: WithComparers(System.Collections.Generic.IComparer{`0},System.Collections.Generic.IEqualityComparer{`1})
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: WithComparers(IComparer<TKey>, IEqualityComparer<TValue>)
  name.vb: WithComparers(IComparer(Of TKey), IEqualityComparer(Of TValue))
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.WithComparers(System.Collections.Generic.IComparer<TKey>, System.Collections.Generic.IEqualityComparer<TValue>)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).WithComparers(System.Collections.Generic.IComparer(Of TKey), System.Collections.Generic.IEqualityComparer(Of TValue))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 342
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content: public ImmutableSortedDictionary<TKey, TValue> WithComparers(IComparer<TKey> keyComparer, IEqualityComparer<TValue> valueComparer)
    content.vb: Public Function WithComparers(keyComparer As IComparer(Of TKey), valueComparer As IEqualityComparer(Of TValue)) As ImmutableSortedDictionary(Of TKey, TValue)
    parameters:
    - id: keyComparer
      type: System.Collections.Generic.IComparer{{TKey}}
    - id: valueComparer
      type: System.Collections.Generic.IEqualityComparer{{TValue}}
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary`2
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.WithComparers(System.Collections.Generic.IComparer{`0})
  id: WithComparers(System.Collections.Generic.IComparer{`0})
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: WithComparers(IComparer<TKey>)
  name.vb: WithComparers(IComparer(Of TKey))
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.WithComparers(System.Collections.Generic.IComparer<TKey>)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).WithComparers(System.Collections.Generic.IComparer(Of TKey))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 383
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content: public ImmutableSortedDictionary<TKey, TValue> WithComparers(IComparer<TKey> keyComparer)
    content.vb: Public Function WithComparers(keyComparer As IComparer(Of TKey)) As ImmutableSortedDictionary(Of TKey, TValue)
    parameters:
    - id: keyComparer
      type: System.Collections.Generic.IComparer{{TKey}}
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary`2
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.ContainsValue(`1)
  id: ContainsValue(`1)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: ContainsValue(TValue)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.ContainsValue(TValue)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).ContainsValue(TValue)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 401
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: >-
    Determines whether the [System.Collections.Immutable.ImmutableSortedDictionary`2](System.Collections.Immutable.ImmutableSortedDictionary`2.yml)

    contains an element with the specified value.
  syntax:
    content: public bool ContainsValue(TValue value)
    content.vb: Public Function ContainsValue(value As TValue) As Boolean
    parameters:
    - id: value
      type: '{TValue}'
      description: >-
        The value to locate in the <see cref="T:System.Collections.Immutable.ImmutableSortedDictionary`2" />.

        The value can be null for reference types.
    return:
      type: System.Boolean
      description: >-
        true if the <see cref="T:System.Collections.Immutable.ImmutableSortedDictionary`2" /> contains

        an element with the specified value; otherwise, false.
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Add(`0,`1)
  id: System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Add(`0,`1)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IImmutableDictionary<TKey, TValue>.Add(TKey, TValue)
  name.vb: System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.Add(TKey, TValue)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Immutable.IImmutableDictionary<TKey, TValue>.Add(TKey, TValue)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.Add(TKey, TValue)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 414
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content: IImmutableDictionary<TKey, TValue> IImmutableDictionary<TKey, TValue>.Add(TKey key, TValue value)
    content.vb: Function System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.Add(key As TKey, value As TValue) As IImmutableDictionary(Of TKey, TValue) Implements IImmutableDictionary(Of TKey, TValue).Add
    parameters:
    - id: key
      type: '{TKey}'
    - id: value
      type: '{TValue}'
    return:
      type: System.Collections.Immutable.IImmutableDictionary{{TKey},{TValue}}
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#SetItem(`0,`1)
  id: System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#SetItem(`0,`1)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IImmutableDictionary<TKey, TValue>.SetItem(TKey, TValue)
  name.vb: System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.SetItem(TKey, TValue)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Immutable.IImmutableDictionary<TKey, TValue>.SetItem(TKey, TValue)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.SetItem(TKey, TValue)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 423
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content: IImmutableDictionary<TKey, TValue> IImmutableDictionary<TKey, TValue>.SetItem(TKey key, TValue value)
    content.vb: Function System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.SetItem(key As TKey, value As TValue) As IImmutableDictionary(Of TKey, TValue) Implements IImmutableDictionary(Of TKey, TValue).SetItem
    parameters:
    - id: key
      type: '{TKey}'
    - id: value
      type: '{TValue}'
    return:
      type: System.Collections.Immutable.IImmutableDictionary{{TKey},{TValue}}
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#SetItems(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  id: System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#SetItems(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IImmutableDictionary<TKey, TValue>.SetItems(IEnumerable<KeyValuePair<TKey, TValue>>)
  name.vb: System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.SetItems(IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Immutable.IImmutableDictionary<TKey, TValue>.SetItems(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.SetItems(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 434
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Applies a given set of key=value pairs to an immutable dictionary, replacing any conflicting keys in the resulting dictionary.
  syntax:
    content: IImmutableDictionary<TKey, TValue> IImmutableDictionary<TKey, TValue>.SetItems(IEnumerable<KeyValuePair<TKey, TValue>> items)
    content.vb: Function System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.SetItems(items As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As IImmutableDictionary(Of TKey, TValue) Implements IImmutableDictionary(Of TKey, TValue).SetItems
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
      description: The key=value pairs to set on the map.  Any keys that conflict with existing keys will overwrite the previous values.
    return:
      type: System.Collections.Immutable.IImmutableDictionary{{TKey},{TValue}}
      description: An immutable dictionary.
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  id: System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#AddRange(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,`1}})
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IImmutableDictionary<TKey, TValue>.AddRange(IEnumerable<KeyValuePair<TKey, TValue>>)
  name.vb: System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.AddRange(IEnumerable(Of KeyValuePair(Of TKey, TValue)))
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Immutable.IImmutableDictionary<TKey, TValue>.AddRange(System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.AddRange(System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue)))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 442
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content: IImmutableDictionary<TKey, TValue> IImmutableDictionary<TKey, TValue>.AddRange(IEnumerable<KeyValuePair<TKey, TValue>> pairs)
    content.vb: Function System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.AddRange(pairs As IEnumerable(Of KeyValuePair(Of TKey, TValue))) As IImmutableDictionary(Of TKey, TValue) Implements IImmutableDictionary(Of TKey, TValue).AddRange
    parameters:
    - id: pairs
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
    return:
      type: System.Collections.Immutable.IImmutableDictionary{{TKey},{TValue}}
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#RemoveRange(System.Collections.Generic.IEnumerable{`0})
  id: System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#RemoveRange(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IImmutableDictionary<TKey, TValue>.RemoveRange(IEnumerable<TKey>)
  name.vb: System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.RemoveRange(IEnumerable(Of TKey))
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Immutable.IImmutableDictionary<TKey, TValue>.RemoveRange(System.Collections.Generic.IEnumerable<TKey>)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.RemoveRange(System.Collections.Generic.IEnumerable(Of TKey))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 451
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content: IImmutableDictionary<TKey, TValue> IImmutableDictionary<TKey, TValue>.RemoveRange(IEnumerable<TKey> keys)
    content.vb: Function System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.RemoveRange(keys As IEnumerable(Of TKey)) As IImmutableDictionary(Of TKey, TValue) Implements IImmutableDictionary(Of TKey, TValue).RemoveRange
    parameters:
    - id: keys
      type: System.Collections.Generic.IEnumerable{{TKey}}
    return:
      type: System.Collections.Immutable.IImmutableDictionary{{TKey},{TValue}}
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Remove(`0)
  id: System#Collections#Immutable#IImmutableDictionary{TKey,TValue}#Remove(`0)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IImmutableDictionary<TKey, TValue>.Remove(TKey)
  name.vb: System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.Remove(TKey)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Immutable.IImmutableDictionary<TKey, TValue>.Remove(TKey)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.Remove(TKey)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 460
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content: IImmutableDictionary<TKey, TValue> IImmutableDictionary<TKey, TValue>.Remove(TKey key)
    content.vb: Function System.Collections.Immutable.IImmutableDictionary<TKey,TValue>.Remove(key As TKey) As IImmutableDictionary(Of TKey, TValue) Implements IImmutableDictionary(Of TKey, TValue).Remove
    parameters:
    - id: key
      type: '{TKey}'
    return:
      type: System.Collections.Immutable.IImmutableDictionary{{TKey},{TValue}}
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.ContainsKey(`0)
  id: ContainsKey(`0)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: ContainsKey(TKey)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.ContainsKey(TKey)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).ContainsKey(TKey)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 469
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content: public bool ContainsKey(TKey key)
    content.vb: Public Function ContainsKey(key As TKey) As Boolean
    parameters:
    - id: key
      type: '{TKey}'
    return:
      type: System.Boolean
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  id: Contains(System.Collections.Generic.KeyValuePair{`0,`1})
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: Contains(KeyValuePair<TKey, TValue>)
  name.vb: Contains(KeyValuePair(Of TKey, TValue))
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.Contains(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).Contains(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 478
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content: public bool Contains(KeyValuePair<TKey, TValue> pair)
    content.vb: Public Function Contains(pair As KeyValuePair(Of TKey, TValue)) As Boolean
    parameters:
    - id: pair
      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}
    return:
      type: System.Boolean
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.TryGetValue(`0,`1@)
  id: TryGetValue(`0,`1@)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: TryGetValue(TKey, out TValue)
  name.vb: TryGetValue(TKey, ByRef TValue)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).TryGetValue(TKey, ByRef TValue)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 486
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content: public bool TryGetValue(TKey key, out TValue value)
    content.vb: Public Function TryGetValue(key As TKey, ByRef value As TValue) As Boolean
    parameters:
    - id: key
      type: '{TKey}'
    - id: value
      type: '{TValue}'
    return:
      type: System.Boolean
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.TryGetKey(`0,`0@)
  id: TryGetKey(`0,`0@)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: TryGetKey(TKey, out TKey)
  name.vb: TryGetKey(TKey, ByRef TKey)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.TryGetKey(TKey, out TKey)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).TryGetKey(TKey, ByRef TKey)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 495
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: See the [System.Collections.Immutable.IImmutableDictionary`2](System.Collections.Immutable.IImmutableDictionary`2.yml) interface.
  syntax:
    content: public bool TryGetKey(TKey equalKey, out TKey actualKey)
    content.vb: Public Function TryGetKey(equalKey As TKey, ByRef actualKey As TKey) As Boolean
    parameters:
    - id: equalKey
      type: '{TKey}'
    - id: actualKey
      type: '{TKey}'
    return:
      type: System.Boolean
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)
  id: System#Collections#Generic#IDictionary{TKey,TValue}#Add(`0,`1)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IDictionary<TKey, TValue>.Add(TKey, TValue)
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Add(TKey, TValue)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Add(TKey, TValue)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Add(TKey, TValue)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 518
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Adds an element with the provided key and value to the [System.Collections.Generic.IDictionary`2]().
  syntax:
    content: void IDictionary<TKey, TValue>.Add(TKey key, TValue value)
    content.vb: Sub System.Collections.Generic.IDictionary<TKey,TValue>.Add(key As TKey, value As TValue) Implements IDictionary(Of TKey, TValue).Add
    parameters:
    - id: key
      type: '{TKey}'
      description: The object to use as the key of the element to add.
    - id: value
      type: '{TValue}'
      description: The object to use as the value of the element to add.
  exceptions:
  - type: System.ArgumentNullException
    description: is null.
  - type: System.ArgumentException
    description: An element with the same key already exists in the .
  - type: System.NotSupportedException
    description: The  is read-only.
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)
  id: System#Collections#Generic#IDictionary{TKey,TValue}#Remove(`0)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IDictionary<TKey, TValue>.Remove(TKey)
  name.vb: System.Collections.Generic.IDictionary<TKey,TValue>.Remove(TKey)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Generic.IDictionary<TKey, TValue>.Remove(TKey)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).System.Collections.Generic.IDictionary<TKey,TValue>.Remove(TKey)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 535
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Removes the element with the specified key from the [System.Collections.Generic.IDictionary`2]().
  syntax:
    content: bool IDictionary<TKey, TValue>.Remove(TKey key)
    content.vb: Function System.Collections.Generic.IDictionary<TKey,TValue>.Remove(key As TKey) As Boolean Implements IDictionary(Of TKey, TValue).Remove
    parameters:
    - id: key
      type: '{TKey}'
      description: The key of the element to remove.
    return:
      type: System.Boolean
      description: true if the element is successfully removed; otherwise, false.  This method also returns false if <paramref name="key" /> was not found in the original <see cref="T:System.Collections.Generic.IDictionary`2" />.
  exceptions:
  - type: System.ArgumentNullException
    description: is null.
  - type: System.NotSupportedException
    description: The  is read-only.
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Add(System.Collections.Generic.KeyValuePair{`0,`1})
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue>)
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(KeyValuePair(Of TKey, TValue))
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Add(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 544
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: void ICollection<KeyValuePair<TKey, TValue>>.Add(KeyValuePair<TKey, TValue> item)
    content.vb: Sub System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Add(item As KeyValuePair(Of TKey, TValue)) Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Add
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Clear
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: ICollection<KeyValuePair<TKey, TValue>>.Clear()
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Clear()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Clear()
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Clear()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 549
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: void ICollection<KeyValuePair<TKey, TValue>>.Clear()
    content.vb: Sub System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Clear Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Clear
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#Remove(System.Collections.Generic.KeyValuePair{`0,`1})
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue>)
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(KeyValuePair(Of TKey, TValue))
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.Remove(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 554
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: bool ICollection<KeyValuePair<TKey, TValue>>.Remove(KeyValuePair<TKey, TValue> item)
    content.vb: Function System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.Remove(item As KeyValuePair(Of TKey, TValue)) As Boolean Implements ICollection(Of KeyValuePair(Of TKey, TValue)).Remove
    parameters:
    - id: item
      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}
    return:
      type: System.Boolean
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  id: System#Collections#Generic#ICollection{System#Collections#Generic#KeyValuePair{TKey,TValue}}#CopyTo(System.Collections.Generic.KeyValuePair{`0,`1}[],System.Int32)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[], Int32)
  name.vb: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(KeyValuePair(Of TKey, TValue)(), Int32)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, TValue>>.CopyTo(System.Collections.Generic.KeyValuePair<TKey, TValue>[], System.Int32)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(System.Collections.Generic.KeyValuePair(Of TKey, TValue)(), System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 559
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  syntax:
    content: void ICollection<KeyValuePair<TKey, TValue>>.CopyTo(KeyValuePair<TKey, TValue>[] array, int arrayIndex)
    content.vb: Sub System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey,TValue>>.CopyTo(array As KeyValuePair(Of TKey, TValue)(), arrayIndex As Integer) Implements ICollection(Of KeyValuePair(Of TKey, TValue)).CopyTo
    parameters:
    - id: array
      type: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[]
    - id: arrayIndex
      type: System.Int32
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#IsFixedSize
  id: System#Collections#IDictionary#IsFixedSize
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IDictionary.IsFixedSize
  name.vb: System.Collections.IDictionary.IsFixedSize
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.IDictionary.IsFixedSize
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).System.Collections.IDictionary.IsFixedSize
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 579
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Gets a value indicating whether the [System.Collections.IDictionary]() object has a fixed size.
  syntax:
    content: bool IDictionary.IsFixedSize { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.IsFixedSize As Boolean Implements IDictionary.IsFixedSize
    parameters: []
    return:
      type: System.Boolean
      description: true if the <see cref="T:System.Collections.IDictionary" /> object has a fixed size; otherwise, false.
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#IsReadOnly
  id: System#Collections#IDictionary#IsReadOnly
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IDictionary.IsReadOnly
  name.vb: System.Collections.IDictionary.IsReadOnly
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.IDictionary.IsReadOnly
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).System.Collections.IDictionary.IsReadOnly
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 589
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Gets a value indicating whether the [System.Collections.Generic.ICollection`1]() is read-only.
  syntax:
    content: bool IDictionary.IsReadOnly { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.IsReadOnly As Boolean Implements IDictionary.IsReadOnly
    parameters: []
    return:
      type: System.Boolean
      description: true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Keys
  id: System#Collections#IDictionary#Keys
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IDictionary.Keys
  name.vb: System.Collections.IDictionary.Keys
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.IDictionary.Keys
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).System.Collections.IDictionary.Keys
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 600
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Gets an [System.Collections.Generic.ICollection`1]() containing the keys of the [System.Collections.Generic.IDictionary`2]().
  syntax:
    content: ICollection IDictionary.Keys { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.Keys As ICollection Implements IDictionary.Keys
    parameters: []
    return:
      type: System.Collections.ICollection
      description: An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the keys of the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Values
  id: System#Collections#IDictionary#Values
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IDictionary.Values
  name.vb: System.Collections.IDictionary.Values
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.IDictionary.Values
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).System.Collections.IDictionary.Values
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 611
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Gets an [System.Collections.Generic.ICollection`1]() containing the values in the [System.Collections.Generic.IDictionary`2]().
  syntax:
    content: ICollection IDictionary.Values { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.Values As ICollection Implements IDictionary.Values
    parameters: []
    return:
      type: System.Collections.ICollection
      description: An <see cref="T:System.Collections.Generic.ICollection`1" /> containing the values in the object that implements <see cref="T:System.Collections.Generic.IDictionary`2" />.
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Add(System.Object,System.Object)
  id: System#Collections#IDictionary#Add(System.Object,System.Object)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IDictionary.Add(Object, Object)
  name.vb: System.Collections.IDictionary.Add(Object, Object)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.IDictionary.Add(System.Object, System.Object)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).System.Collections.IDictionary.Add(System.Object, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 625
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Adds an element with the provided key and value to the [System.Collections.IDictionary]() object.
  syntax:
    content: void IDictionary.Add(object key, object value)
    content.vb: Sub System.Collections.IDictionary.Add(key As Object, value As Object) Implements IDictionary.Add
    parameters:
    - id: key
      type: System.Object
      description: The [System.Object]() to use as the key of the element to add.
    - id: value
      type: System.Object
      description: The <see cref="T:System.Object" /> to use as the value of the element to add.
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Contains(System.Object)
  id: System#Collections#IDictionary#Contains(System.Object)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IDictionary.Contains(Object)
  name.vb: System.Collections.IDictionary.Contains(Object)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.IDictionary.Contains(System.Object)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).System.Collections.IDictionary.Contains(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 637
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Determines whether the [System.Collections.IDictionary]() object contains an element with the specified key.
  syntax:
    content: bool IDictionary.Contains(object key)
    content.vb: Function System.Collections.IDictionary.Contains(key As Object) As Boolean Implements IDictionary.Contains
    parameters:
    - id: key
      type: System.Object
      description: The key to locate in the <see cref="T:System.Collections.IDictionary" /> object.
    return:
      type: System.Boolean
      description: true if the <see cref="T:System.Collections.IDictionary" /> contains an element with the key; otherwise, false.
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#GetEnumerator
  id: System#Collections#IDictionary#GetEnumerator
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IDictionary.GetEnumerator()
  name.vb: System.Collections.IDictionary.GetEnumerator()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.IDictionary.GetEnumerator()
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).System.Collections.IDictionary.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 649
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Returns an [System.Collections.IDictionaryEnumerator]() object for the [System.Collections.IDictionary]() object.
  syntax:
    content: IDictionaryEnumerator IDictionary.GetEnumerator()
    content.vb: Function System.Collections.IDictionary.GetEnumerator As IDictionaryEnumerator Implements IDictionary.GetEnumerator
    return:
      type: System.Collections.IDictionaryEnumerator
      description: An <see cref="T:System.Collections.IDictionaryEnumerator" /> object for the <see cref="T:System.Collections.IDictionary" /> object.
  exceptions:
  - type: System.NotImplementedException
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Remove(System.Object)
  id: System#Collections#IDictionary#Remove(System.Object)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IDictionary.Remove(Object)
  name.vb: System.Collections.IDictionary.Remove(Object)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.IDictionary.Remove(System.Object)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).System.Collections.IDictionary.Remove(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 658
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Removes the element with the specified key from the [System.Collections.IDictionary]() object.
  syntax:
    content: void IDictionary.Remove(object key)
    content.vb: Sub System.Collections.IDictionary.Remove(key As Object) Implements IDictionary.Remove
    parameters:
    - id: key
      type: System.Object
      description: The key of the element to remove.
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Item(System.Object)
  id: System#Collections#IDictionary#Item(System.Object)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IDictionary.Item[Object]
  name.vb: System.Collections.IDictionary.Item(Object)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.IDictionary.Item[System.Object]
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).System.Collections.IDictionary.Item(System.Object)
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 668
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Gets or sets the element with the specified key.
  syntax:
    content: object IDictionary.this[object key] { get; set; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IDictionary.Item(key As Object) As Object Implements IDictionary.this
    parameters:
    - id: key
      type: System.Object
      description: The key.
    return:
      type: System.Object
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IDictionary#Clear
  id: System#Collections#IDictionary#Clear
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IDictionary.Clear()
  name.vb: System.Collections.IDictionary.Clear()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.IDictionary.Clear()
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).System.Collections.IDictionary.Clear()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 678
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Clears this instance.
  syntax:
    content: void IDictionary.Clear()
    content.vb: Sub System.Collections.IDictionary.Clear Implements IDictionary.Clear
  exceptions:
  - type: System.NotSupportedException
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: ICollection.CopyTo(Array, Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 692
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.
  syntax:
    content: void ICollection.CopyTo(Array array, int index)
    content.vb: Sub System.Collections.ICollection.CopyTo(array As Array, index As Integer) Implements ICollection.CopyTo
    parameters:
    - id: array
      type: System.Array
      description: The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from <see cref="T:System.Collections.ICollection" />. The <see cref="T:System.Array" /> must have zero-based indexing.
    - id: index
      type: System.Int32
      description: The zero-based index in <paramref name="array" /> at which copying begins.
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 705
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Gets an object that can be used to synchronize access to the [System.Collections.ICollection]().
  syntax:
    content: object ICollection.SyncRoot { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot
    parameters: []
    return:
      type: System.Object
      description: An object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 715
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Gets a value indicating whether access to the [System.Collections.ICollection]() is synchronized (thread safe).
  syntax:
    content: bool ICollection.IsSynchronized { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized
    parameters: []
    return:
      type: System.Boolean
      description: true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized (thread safe); otherwise, false.
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{System#Collections#Generic#KeyValuePair{TKey,TValue}}#GetEnumerator
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>.GetEnumerator()
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 735
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Returns an enumerator that iterates through the collection.
  syntax:
    content: IEnumerator<KeyValuePair<TKey, TValue>> IEnumerable<KeyValuePair<TKey, TValue>>.GetEnumerator()
    content.vb: Function System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey,TValue>>.GetEnumerator As IEnumerator(Of KeyValuePair(Of TKey, TValue)) Implements IEnumerable(Of KeyValuePair(Of TKey, TValue)).GetEnumerator
    return:
      type: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
      description: A [System.Collections.Generic.IEnumerator`1]() that can be used to iterate through the collection.
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 751
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Returns an enumerator that iterates through a collection.
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
      description: An [System.Collections.IEnumerator]() object that can be used to iterate through the collection.
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Immutable.ImmutableSortedDictionary`2
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: GetEnumerator()
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>.GetEnumerator()
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue).GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedDictionary`2.cs
    startLine: 765
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Returns an enumerator that iterates through the collection.
  syntax:
    content: public ImmutableSortedDictionary<TKey, TValue>.Enumerator GetEnumerator()
    content.vb: Public Function GetEnumerator As ImmutableSortedDictionary(Of TKey, TValue).Enumerator
    return:
      type: System.Collections.Immutable.ImmutableSortedDictionary`2.Enumerator
      description: A [System.Collections.Generic.IEnumerator`1]() that can be used to iterate through the collection.
references:
- uid: System.Collections.Immutable
  isExternal: false
  name: System.Collections.Immutable
  fullName: System.Collections.Immutable
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Collections.Immutable.IImmutableDictionary`2
  parent: System.Collections.Immutable
  isExternal: false
  href: System.Collections.Immutable.IImmutableDictionary`2.yml
  name: IImmutableDictionary<TKey, TValue>
  name.vb: IImmutableDictionary(Of TKey, TValue)
  fullName: System.Collections.Immutable.IImmutableDictionary<TKey, TValue>
  fullName.vb: System.Collections.Immutable.IImmutableDictionary(Of TKey, TValue)
  type: Interface
  summary: An immutable key-value dictionary.
  spec.csharp:
  - uid: System.Collections.Immutable.IImmutableDictionary`2
    name: IImmutableDictionary
    fullName: System.Collections.Immutable.IImmutableDictionary
    href: System.Collections.Immutable.IImmutableDictionary`2.yml
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.IImmutableDictionary`2
    name: IImmutableDictionary
    fullName: System.Collections.Immutable.IImmutableDictionary
    href: System.Collections.Immutable.IImmutableDictionary`2.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2
  parent: System.Collections.Immutable
  isExternal: false
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  name: ImmutableSortedDictionary<TKey, TValue>
  name.vb: ImmutableSortedDictionary(Of TKey, TValue)
  fullName: System.Collections.Immutable.ImmutableSortedDictionary<TKey, TValue>
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary(Of TKey, TValue)
  type: Class
  summary: An immutable sorted dictionary implementation.
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary`2
    name: ImmutableSortedDictionary
    fullName: System.Collections.Immutable.ImmutableSortedDictionary
    href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary`2
    name: ImmutableSortedDictionary
    fullName: System.Collections.Immutable.ImmutableSortedDictionary
    href: System.Collections.Immutable.ImmutableSortedDictionary`2.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEqualityComparer{{TValue}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<TValue>
  name.vb: IEqualityComparer(Of TValue)
  fullName: System.Collections.Generic.IEqualityComparer<TValue>
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEqualityComparer`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEqualityComparer<T>
  name.vb: IEqualityComparer(Of T)
  fullName: System.Collections.Generic.IEqualityComparer<T>
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IEnumerable{{TKey}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TKey>
  name.vb: IEnumerable(Of TKey)
  fullName: System.Collections.Generic.IEnumerable<TKey>
  fullName.vb: System.Collections.Generic.IEnumerable(Of TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  name.vb: IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{TValue}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TValue>
  name.vb: IEnumerable(Of TValue)
  fullName: System.Collections.Generic.IEnumerable<TValue>
  fullName.vb: System.Collections.Generic.IEnumerable(Of TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Immutable.IImmutableDictionary{{TKey},{TValue}}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.IImmutableDictionary`2
  href: System.Collections.Immutable.IImmutableDictionary`2.yml
  name: IImmutableDictionary<TKey, TValue>
  name.vb: IImmutableDictionary(Of TKey, TValue)
  fullName: System.Collections.Immutable.IImmutableDictionary<TKey, TValue>
  fullName.vb: System.Collections.Immutable.IImmutableDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Immutable.IImmutableDictionary`2
    name: IImmutableDictionary
    fullName: System.Collections.Immutable.IImmutableDictionary
    href: System.Collections.Immutable.IImmutableDictionary`2.yml
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.IImmutableDictionary`2
    name: IImmutableDictionary
    fullName: System.Collections.Immutable.IImmutableDictionary
    href: System.Collections.Immutable.IImmutableDictionary`2.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic.ICollection{{TKey}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<TKey>
  name.vb: ICollection(Of TKey)
  fullName: System.Collections.Generic.ICollection<TKey>
  fullName.vb: System.Collections.Generic.ICollection(Of TKey)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<T>
  name.vb: ICollection(Of T)
  fullName: System.Collections.Generic.ICollection<T>
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.ICollection{{TValue}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<TValue>
  name.vb: ICollection(Of TValue)
  fullName: System.Collections.Generic.ICollection<TValue>
  fullName.vb: System.Collections.Generic.ICollection(Of TValue)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    fullName: <
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic.IComparer{{TKey}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  name: IComparer<TKey>
  name.vb: IComparer(Of TKey)
  fullName: System.Collections.Generic.IComparer<TKey>
  fullName.vb: System.Collections.Generic.IComparer(Of TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
- uid: System.Collections.Generic.IComparer`1
  parent: System.Collections.Generic
  isExternal: true
  name: IComparer<T>
  name.vb: IComparer(Of T)
  fullName: System.Collections.Generic.IComparer<T>
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: '{TKey}'
  isExternal: false
  name: TKey
  fullName: TKey
- uid: '{TValue}'
  isExternal: false
  name: TValue
  fullName: TValue
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Builder
  parent: System.Collections.Immutable
  isExternal: false
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.Builder.yml
  name: ImmutableSortedDictionary.Builder<>
  name.vb: ImmutableSortedDictionary.Builder(Of )
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.Builder<>
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.Builder(Of )
  type: Class
  summary: >-
    A sorted dictionary that mutates with little or no memory allocations,

    can produce and/or build on immutable sorted dictionary instances very efficiently.
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Builder
    name: ImmutableSortedDictionary.Builder
    fullName: System.Collections.Immutable.ImmutableSortedDictionary.Builder
    href: System.Collections.Immutable.ImmutableSortedDictionary`2.Builder.yml
  - name: <
    fullName: <
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Builder
    name: ImmutableSortedDictionary.Builder
    fullName: System.Collections.Immutable.ImmutableSortedDictionary.Builder
    href: System.Collections.Immutable.ImmutableSortedDictionary`2.Builder.yml
  - name: '(Of '
    fullName: '(Of '
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<TKey, TValue>>
  name.vb: IEnumerable(Of KeyValuePair(Of TKey, TValue))
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.KeyValuePair`2
  name: KeyValuePair<TKey, TValue>
  name.vb: KeyValuePair(Of TKey, TValue)
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>
  fullName.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic.KeyValuePair`2
  parent: System.Collections.Generic
  isExternal: true
  name: KeyValuePair<TKey, TValue>
  name.vb: KeyValuePair(Of TKey, TValue)
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>
  fullName.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  name.vb: IDictionary(Of TKey, TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.ArgumentNullException
- uid: System.ArgumentException
- uid: System.NotSupportedException
- uid: System.Collections.Generic.KeyValuePair{{TKey},{TValue}}[]
  isExternal: true
  name: KeyValuePair<TKey, TValue>[]
  name.vb: KeyValuePair(Of TKey, TValue)()
  fullName: System.Collections.Generic.KeyValuePair<TKey, TValue>[]
  fullName.vb: System.Collections.Generic.KeyValuePair(Of TKey, TValue)()
  spec.csharp:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: ()
    fullName: ()
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.NotImplementedException
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  fullName: System.Array
- uid: System.Collections.Generic.IEnumerator`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<T>
  name.vb: IEnumerator(Of T)
  fullName: System.Collections.Generic.IEnumerator<T>
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{System.Collections.Generic.KeyValuePair{{TKey},{TValue}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<KeyValuePair<TKey, TValue>>
  name.vb: IEnumerator(Of KeyValuePair(Of TKey, TValue))
  fullName: System.Collections.Generic.IEnumerator<System.Collections.Generic.KeyValuePair<TKey, TValue>>
  fullName.vb: System.Collections.Generic.IEnumerator(Of System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Enumerator
  parent: System.Collections.Immutable
  isExternal: false
  href: System.Collections.Immutable.ImmutableSortedDictionary`2.Enumerator.yml
  name: ImmutableSortedDictionary.Enumerator<>
  name.vb: ImmutableSortedDictionary.Enumerator(Of )
  fullName: System.Collections.Immutable.ImmutableSortedDictionary.Enumerator<>
  fullName.vb: System.Collections.Immutable.ImmutableSortedDictionary.Enumerator(Of )
  type: Struct
  summary: Enumerates the contents of a binary tree.
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Enumerator
    name: ImmutableSortedDictionary.Enumerator
    fullName: System.Collections.Immutable.ImmutableSortedDictionary.Enumerator
    href: System.Collections.Immutable.ImmutableSortedDictionary`2.Enumerator.yml
  - name: <
    fullName: <
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableSortedDictionary`2.Enumerator
    name: ImmutableSortedDictionary.Enumerator
    fullName: System.Collections.Immutable.ImmutableSortedDictionary.Enumerator
    href: System.Collections.Immutable.ImmutableSortedDictionary`2.Enumerator.yml
  - name: '(Of '
    fullName: '(Of '
  - name: )
    fullName: )
