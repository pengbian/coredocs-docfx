items:
- uid: System.Reflection.Metadata.AssemblyFile
  id: AssemblyFile
  parent: System.Reflection.Metadata
  children:
  - System.Reflection.Metadata.AssemblyFile.ContainsMetadata
  - System.Reflection.Metadata.AssemblyFile.GetCustomAttributes
  - System.Reflection.Metadata.AssemblyFile.HashValue
  - System.Reflection.Metadata.AssemblyFile.Name
  href: System.Reflection.Metadata.AssemblyFile.yml
  name: AssemblyFile
  fullName: System.Reflection.Metadata.AssemblyFile
  type: Struct
  source:
    remote: &o0
      path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/AssemblyFile.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/AssemblyFile.cs
    startLine: 7
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public struct AssemblyFile
    content.vb: Public Structure AssemblyFile
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: System.Reflection.Metadata.AssemblyFile.ContainsMetadata
  id: ContainsMetadata
  parent: System.Reflection.Metadata.AssemblyFile
  href: System.Reflection.Metadata.AssemblyFile.yml
  name: ContainsMetadata
  fullName: System.Reflection.Metadata.AssemblyFile.ContainsMetadata
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/AssemblyFile.cs
    startLine: 34
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  summary: True if the file contains metadata.
  remarks: Corresponds to Flags field of File table in ECMA-335 Standard.
  syntax:
    content: public bool ContainsMetadata { get; }
    content.vb: Public ReadOnly Property ContainsMetadata As Boolean
    parameters: []
    return:
      type: System.Boolean
- uid: System.Reflection.Metadata.AssemblyFile.Name
  id: Name
  parent: System.Reflection.Metadata.AssemblyFile
  href: System.Reflection.Metadata.AssemblyFile.yml
  name: Name
  fullName: System.Reflection.Metadata.AssemblyFile.Name
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/AssemblyFile.cs
    startLine: 45
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  summary: File name with extension.
  remarks: Corresponds to Name field of File table in ECMA-335 Standard.
  syntax:
    content: public StringHandle Name { get; }
    content.vb: Public ReadOnly Property Name As StringHandle
    parameters: []
    return:
      type: System.Reflection.Metadata.StringHandle
- uid: System.Reflection.Metadata.AssemblyFile.HashValue
  id: HashValue
  parent: System.Reflection.Metadata.AssemblyFile
  href: System.Reflection.Metadata.AssemblyFile.yml
  name: HashValue
  fullName: System.Reflection.Metadata.AssemblyFile.HashValue
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/AssemblyFile.cs
    startLine: 56
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  summary: Hash value of the file content calculated using [System.Reflection.Metadata.AssemblyDefinition.HashAlgorithm](System.Reflection.Metadata.AssemblyDefinition.yml).
  remarks: Corresponds to HashValue field of File table in ECMA-335 Standard.
  syntax:
    content: public BlobHandle HashValue { get; }
    content.vb: Public ReadOnly Property HashValue As BlobHandle
    parameters: []
    return:
      type: System.Reflection.Metadata.BlobHandle
- uid: System.Reflection.Metadata.AssemblyFile.GetCustomAttributes
  id: GetCustomAttributes
  parent: System.Reflection.Metadata.AssemblyFile
  href: System.Reflection.Metadata.AssemblyFile.yml
  name: GetCustomAttributes()
  fullName: System.Reflection.Metadata.AssemblyFile.GetCustomAttributes()
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/AssemblyFile.cs
    startLine: 61
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public CustomAttributeHandleCollection GetCustomAttributes()
    content.vb: Public Function GetCustomAttributes As CustomAttributeHandleCollection
    return:
      type: System.Reflection.Metadata.CustomAttributeHandleCollection
references:
- uid: System.Reflection.Metadata
  isExternal: false
  name: System.Reflection.Metadata
  fullName: System.Reflection.Metadata
  type: Namespace
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  fullName: System.ValueType
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Metadata.StringHandle
  parent: System.Reflection.Metadata
  isExternal: false
  href: System.Reflection.Metadata.StringHandle.yml
  name: StringHandle
  fullName: System.Reflection.Metadata.StringHandle
  type: Struct
- uid: System.Reflection.Metadata.AssemblyDefinition.HashAlgorithm
- uid: System.Reflection.Metadata.BlobHandle
  parent: System.Reflection.Metadata
  isExternal: false
  href: System.Reflection.Metadata.BlobHandle.yml
  name: BlobHandle
  fullName: System.Reflection.Metadata.BlobHandle
  type: Struct
- uid: System.Reflection.Metadata.CustomAttributeHandleCollection
  parent: System.Reflection.Metadata
  isExternal: false
  href: System.Reflection.Metadata.CustomAttributeHandleCollection.yml
  name: CustomAttributeHandleCollection
  fullName: System.Reflection.Metadata.CustomAttributeHandleCollection
  type: Struct
