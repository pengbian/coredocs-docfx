items:
- uid: System.Collections.Immutable.ImmutableQueue`1.Enumerator
  id: ImmutableQueue`1.Enumerator
  parent: System.Collections.Immutable
  children:
  - System.Collections.Immutable.ImmutableQueue`1.Enumerator.Current
  - System.Collections.Immutable.ImmutableQueue`1.Enumerator.MoveNext
  href: System.Collections.Immutable.ImmutableQueue`1.Enumerator.yml
  name: ImmutableQueue<T>.Enumerator
  name.vb: ImmutableQueue(Of T).Enumerator
  fullName: System.Collections.Immutable.ImmutableQueue<T>.Enumerator
  fullName.vb: System.Collections.Immutable.ImmutableQueue(Of T).Enumerator
  type: Struct
  source:
    remote: &o0
      path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableQueue`1.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableQueue`1.cs
    startLine: 268
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: A memory allocation-free enumerator of [System.Collections.Immutable.ImmutableQueue`1](System.Collections.Immutable.ImmutableQueue`1.yml).
  syntax:
    content: public struct Enumerator
    content.vb: Public Structure Enumerator
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: System.Collections.Immutable.ImmutableQueue`1.Enumerator.Current
  id: Current
  parent: System.Collections.Immutable.ImmutableQueue`1.Enumerator
  href: System.Collections.Immutable.ImmutableQueue`1.Enumerator.yml
  name: Current
  fullName: System.Collections.Immutable.ImmutableQueue<T>.Enumerator.Current
  fullName.vb: System.Collections.Immutable.ImmutableQueue(Of T).Enumerator.Current
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableQueue`1.cs
    startLine: 303
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: The current element.
  syntax:
    content: public T Current { get; }
    content.vb: Public ReadOnly Property Current As T
    parameters: []
    return:
      type: '{T}'
- uid: System.Collections.Immutable.ImmutableQueue`1.Enumerator.MoveNext
  id: MoveNext
  parent: System.Collections.Immutable.ImmutableQueue`1.Enumerator
  href: System.Collections.Immutable.ImmutableQueue`1.Enumerator.yml
  name: MoveNext()
  fullName: System.Collections.Immutable.ImmutableQueue<T>.Enumerator.MoveNext()
  fullName.vb: System.Collections.Immutable.ImmutableQueue(Of T).Enumerator.MoveNext()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableQueue`1.cs
    startLine: 333
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Advances enumeration to the next element.
  syntax:
    content: public bool MoveNext()
    content.vb: Public Function MoveNext As Boolean
    return:
      type: System.Boolean
      description: A value indicating whether there is another element in the enumeration.
references:
- uid: System.Collections.Immutable.ImmutableQueue`1
  parent: System.Collections.Immutable
  isExternal: false
  href: System.Collections.Immutable.ImmutableQueue`1.yml
  name: ImmutableQueue<T>
  name.vb: ImmutableQueue(Of T)
  fullName: System.Collections.Immutable.ImmutableQueue<T>
  fullName.vb: System.Collections.Immutable.ImmutableQueue(Of T)
  type: Class
  summary: An immutable queue.
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableQueue`1
    name: ImmutableQueue
    fullName: System.Collections.Immutable.ImmutableQueue
    href: System.Collections.Immutable.ImmutableQueue`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableQueue`1
    name: ImmutableQueue
    fullName: System.Collections.Immutable.ImmutableQueue
    href: System.Collections.Immutable.ImmutableQueue`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Immutable
  isExternal: false
  name: System.Collections.Immutable
  fullName: System.Collections.Immutable
  type: Namespace
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  fullName: System.ValueType
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
