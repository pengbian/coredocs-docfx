items:
- uid: System.Diagnostics.ProcessStartInfo
  id: ProcessStartInfo
  parent: System.Diagnostics
  children:
  - System.Diagnostics.ProcessStartInfo.#ctor
  - System.Diagnostics.ProcessStartInfo.#ctor(System.String)
  - System.Diagnostics.ProcessStartInfo.#ctor(System.String,System.String)
  - System.Diagnostics.ProcessStartInfo.Arguments
  - System.Diagnostics.ProcessStartInfo.CreateNoWindow
  - System.Diagnostics.ProcessStartInfo.Domain
  - System.Diagnostics.ProcessStartInfo.Environment
  - System.Diagnostics.ProcessStartInfo.FileName
  - System.Diagnostics.ProcessStartInfo.LoadUserProfile
  - System.Diagnostics.ProcessStartInfo.Password
  - System.Diagnostics.ProcessStartInfo.RedirectStandardError
  - System.Diagnostics.ProcessStartInfo.RedirectStandardInput
  - System.Diagnostics.ProcessStartInfo.RedirectStandardOutput
  - System.Diagnostics.ProcessStartInfo.StandardErrorEncoding
  - System.Diagnostics.ProcessStartInfo.StandardOutputEncoding
  - System.Diagnostics.ProcessStartInfo.UserName
  - System.Diagnostics.ProcessStartInfo.UseShellExecute
  - System.Diagnostics.ProcessStartInfo.WorkingDirectory
  href: System.Diagnostics.ProcessStartInfo.yml
  name: ProcessStartInfo
  fullName: System.Diagnostics.ProcessStartInfo
  type: Class
  source:
    remote: &o1
      path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessStartInfo.Windows.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessStartInfo.Windows.cs
    startLine: 4
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public sealed class ProcessStartInfo
    content.vb: Public NotInheritable Class ProcessStartInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Diagnostics.ProcessStartInfo.#ctor
  id: '#ctor'
  parent: System.Diagnostics.ProcessStartInfo
  href: System.Diagnostics.ProcessStartInfo.yml
  name: ProcessStartInfo()
  fullName: System.Diagnostics.ProcessStartInfo.ProcessStartInfo()
  type: Constructor
  source:
    remote: &o0
      path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessStartInfo.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessStartInfo.cs
    startLine: 33
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public ProcessStartInfo()
    content.vb: Public Sub New
- uid: System.Diagnostics.ProcessStartInfo.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.ProcessStartInfo
  href: System.Diagnostics.ProcessStartInfo.yml
  name: ProcessStartInfo(String)
  fullName: System.Diagnostics.ProcessStartInfo.ProcessStartInfo(System.String)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessStartInfo.cs
    startLine: 40
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public ProcessStartInfo(string fileName)
    content.vb: Public Sub New(fileName As String)
    parameters:
    - id: fileName
      type: System.String
- uid: System.Diagnostics.ProcessStartInfo.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.ProcessStartInfo
  href: System.Diagnostics.ProcessStartInfo.yml
  name: ProcessStartInfo(String, String)
  fullName: System.Diagnostics.ProcessStartInfo.ProcessStartInfo(System.String, System.String)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessStartInfo.cs
    startLine: 49
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public ProcessStartInfo(string fileName, string arguments)
    content.vb: Public Sub New(fileName As String, arguments As String)
    parameters:
    - id: fileName
      type: System.String
    - id: arguments
      type: System.String
- uid: System.Diagnostics.ProcessStartInfo.Arguments
  id: Arguments
  parent: System.Diagnostics.ProcessStartInfo
  href: System.Diagnostics.ProcessStartInfo.yml
  name: Arguments
  fullName: System.Diagnostics.ProcessStartInfo.Arguments
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessStartInfo.cs
    startLine: 58
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public string Arguments { get; set; }
    content.vb: Public Property Arguments As String
    parameters: []
    return:
      type: System.String
- uid: System.Diagnostics.ProcessStartInfo.CreateNoWindow
  id: CreateNoWindow
  parent: System.Diagnostics.ProcessStartInfo
  href: System.Diagnostics.ProcessStartInfo.yml
  name: CreateNoWindow
  fullName: System.Diagnostics.ProcessStartInfo.CreateNoWindow
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessStartInfo.cs
    startLine: 74
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public bool CreateNoWindow { get; set; }
    content.vb: Public Property CreateNoWindow As Boolean
    parameters: []
    return:
      type: System.Boolean
- uid: System.Diagnostics.ProcessStartInfo.Environment
  id: Environment
  parent: System.Diagnostics.ProcessStartInfo
  href: System.Diagnostics.ProcessStartInfo.yml
  name: Environment
  fullName: System.Diagnostics.ProcessStartInfo.Environment
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessStartInfo.cs
    startLine: 80
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public IDictionary<string, string> Environment { get; }
    content.vb: Public ReadOnly Property Environment As IDictionary(Of String, String)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
- uid: System.Diagnostics.ProcessStartInfo.RedirectStandardInput
  id: RedirectStandardInput
  parent: System.Diagnostics.ProcessStartInfo
  href: System.Diagnostics.ProcessStartInfo.yml
  name: RedirectStandardInput
  fullName: System.Diagnostics.ProcessStartInfo.RedirectStandardInput
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessStartInfo.cs
    startLine: 106
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public bool RedirectStandardInput { get; set; }
    content.vb: Public Property RedirectStandardInput As Boolean
    parameters: []
    return:
      type: System.Boolean
- uid: System.Diagnostics.ProcessStartInfo.RedirectStandardOutput
  id: RedirectStandardOutput
  parent: System.Diagnostics.ProcessStartInfo
  href: System.Diagnostics.ProcessStartInfo.yml
  name: RedirectStandardOutput
  fullName: System.Diagnostics.ProcessStartInfo.RedirectStandardOutput
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessStartInfo.cs
    startLine: 115
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public bool RedirectStandardOutput { get; set; }
    content.vb: Public Property RedirectStandardOutput As Boolean
    parameters: []
    return:
      type: System.Boolean
- uid: System.Diagnostics.ProcessStartInfo.RedirectStandardError
  id: RedirectStandardError
  parent: System.Diagnostics.ProcessStartInfo
  href: System.Diagnostics.ProcessStartInfo.yml
  name: RedirectStandardError
  fullName: System.Diagnostics.ProcessStartInfo.RedirectStandardError
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessStartInfo.cs
    startLine: 124
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public bool RedirectStandardError { get; set; }
    content.vb: Public Property RedirectStandardError As Boolean
    parameters: []
    return:
      type: System.Boolean
- uid: System.Diagnostics.ProcessStartInfo.StandardErrorEncoding
  id: StandardErrorEncoding
  parent: System.Diagnostics.ProcessStartInfo
  href: System.Diagnostics.ProcessStartInfo.yml
  name: StandardErrorEncoding
  fullName: System.Diagnostics.ProcessStartInfo.StandardErrorEncoding
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessStartInfo.cs
    startLine: 131
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public Encoding StandardErrorEncoding { get; set; }
    content.vb: Public Property StandardErrorEncoding As Encoding
    parameters: []
    return:
      type: System.Text.Encoding
- uid: System.Diagnostics.ProcessStartInfo.StandardOutputEncoding
  id: StandardOutputEncoding
  parent: System.Diagnostics.ProcessStartInfo
  href: System.Diagnostics.ProcessStartInfo.yml
  name: StandardOutputEncoding
  fullName: System.Diagnostics.ProcessStartInfo.StandardOutputEncoding
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessStartInfo.cs
    startLine: 137
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public Encoding StandardOutputEncoding { get; set; }
    content.vb: Public Property StandardOutputEncoding As Encoding
    parameters: []
    return:
      type: System.Text.Encoding
- uid: System.Diagnostics.ProcessStartInfo.UseShellExecute
  id: UseShellExecute
  parent: System.Diagnostics.ProcessStartInfo
  href: System.Diagnostics.ProcessStartInfo.yml
  name: UseShellExecute
  fullName: System.Diagnostics.ProcessStartInfo.UseShellExecute
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessStartInfo.cs
    startLine: 151
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public bool UseShellExecute { get; set; }
    content.vb: Public Property UseShellExecute As Boolean
    parameters: []
    return:
      type: System.Boolean
- uid: System.Diagnostics.ProcessStartInfo.FileName
  id: FileName
  parent: System.Diagnostics.ProcessStartInfo
  href: System.Diagnostics.ProcessStartInfo.yml
  name: FileName
  fullName: System.Diagnostics.ProcessStartInfo.FileName
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessStartInfo.cs
    startLine: 162
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public string FileName { get; set; }
    content.vb: Public Property FileName As String
    parameters: []
    return:
      type: System.String
- uid: System.Diagnostics.ProcessStartInfo.WorkingDirectory
  id: WorkingDirectory
  parent: System.Diagnostics.ProcessStartInfo
  href: System.Diagnostics.ProcessStartInfo.yml
  name: WorkingDirectory
  fullName: System.Diagnostics.ProcessStartInfo.WorkingDirectory
  type: Property
  source:
    remote: *o0
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessStartInfo.cs
    startLine: 172
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public string WorkingDirectory { get; set; }
    content.vb: Public Property WorkingDirectory As String
    parameters: []
    return:
      type: System.String
- uid: System.Diagnostics.ProcessStartInfo.UserName
  id: UserName
  parent: System.Diagnostics.ProcessStartInfo
  href: System.Diagnostics.ProcessStartInfo.yml
  name: UserName
  fullName: System.Diagnostics.ProcessStartInfo.UserName
  type: Property
  source:
    remote: *o1
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessStartInfo.Windows.cs
    startLine: 13
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public string UserName { get; set; }
    content.vb: Public Property UserName As String
    parameters: []
    return:
      type: System.String
- uid: System.Diagnostics.ProcessStartInfo.Password
  id: Password
  parent: System.Diagnostics.ProcessStartInfo
  href: System.Diagnostics.ProcessStartInfo.yml
  name: Password
  fullName: System.Diagnostics.ProcessStartInfo.Password
  type: Property
  source:
    remote: *o1
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessStartInfo.Windows.cs
    startLine: 19
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public SecureString Password { get; set; }
    content.vb: Public Property Password As SecureString
    parameters: []
    return:
      type: System.Security.SecureString
- uid: System.Diagnostics.ProcessStartInfo.Domain
  id: Domain
  parent: System.Diagnostics.ProcessStartInfo
  href: System.Diagnostics.ProcessStartInfo.yml
  name: Domain
  fullName: System.Diagnostics.ProcessStartInfo.Domain
  type: Property
  source:
    remote: *o1
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessStartInfo.Windows.cs
    startLine: 25
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public string Domain { get; set; }
    content.vb: Public Property Domain As String
    parameters: []
    return:
      type: System.String
- uid: System.Diagnostics.ProcessStartInfo.LoadUserProfile
  id: LoadUserProfile
  parent: System.Diagnostics.ProcessStartInfo
  href: System.Diagnostics.ProcessStartInfo.yml
  name: LoadUserProfile
  fullName: System.Diagnostics.ProcessStartInfo.LoadUserProfile
  type: Property
  source:
    remote: *o1
    path: src/System.Diagnostics.Process/src/System/Diagnostics/ProcessStartInfo.Windows.cs
    startLine: 31
  assemblies:
  - System.Diagnostics.Process
  namespace: System.Diagnostics
  syntax:
    content: public bool LoadUserProfile { get; set; }
    content.vb: Public Property LoadUserProfile As Boolean
    parameters: []
    return:
      type: System.Boolean
references:
- uid: System.Diagnostics
  isExternal: false
  name: System.Diagnostics
  fullName: System.Diagnostics
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  name.vb: IDictionary(Of String, String)
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  name.vb: IDictionary(Of TKey, TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  fullName: System.Text.Encoding
- uid: System.Text
  isExternal: false
  name: System.Text
  fullName: System.Text
- uid: System.Security.SecureString
  parent: System.Security
  isExternal: true
  name: SecureString
  fullName: System.Security.SecureString
- uid: System.Security
  isExternal: false
  name: System.Security
  fullName: System.Security
