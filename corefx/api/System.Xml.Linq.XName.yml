items:
- uid: System.Xml.Linq.XName
  id: XName
  parent: System.Xml.Linq
  children:
  - System.Xml.Linq.XName.Equals(System.Object)
  - System.Xml.Linq.XName.Get(System.String)
  - System.Xml.Linq.XName.Get(System.String,System.String)
  - System.Xml.Linq.XName.GetHashCode
  - System.Xml.Linq.XName.LocalName
  - System.Xml.Linq.XName.Namespace
  - System.Xml.Linq.XName.NamespaceName
  - System.Xml.Linq.XName.op_Equality(System.Xml.Linq.XName,System.Xml.Linq.XName)
  - System.Xml.Linq.XName.op_Implicit(System.String)~System.Xml.Linq.XName
  - System.Xml.Linq.XName.op_Inequality(System.Xml.Linq.XName,System.Xml.Linq.XName)
  - System.Xml.Linq.XName.System#IEquatable{System#Xml#Linq#XName}#Equals(System.Xml.Linq.XName)
  - System.Xml.Linq.XName.ToString
  href: System.Xml.Linq.XName.yml
  name: XName
  fullName: System.Xml.Linq.XName
  type: Class
  source:
    remote: &o0
      path: src/System.Xml.XDocument/src/System/Xml/Linq/XName.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XName.cs
    startLine: 10
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Represents a name of an XML element or attribute. This class cannot be inherited.
  syntax:
    content: 'public sealed class XName : IEquatable<XName>'
    content.vb: Public NotInheritable Class XName Implements IEquatable(Of XName)
  inheritance:
  - System.Object
  implements:
  - System.IEquatable{System.Xml.Linq.XName}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Xml.Linq.XName.LocalName
  id: LocalName
  parent: System.Xml.Linq.XName
  href: System.Xml.Linq.XName.yml
  name: LocalName
  fullName: System.Xml.Linq.XName.LocalName
  type: Property
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XName.cs
    startLine: 31
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Gets the local (unqualified) part of the name.
  syntax:
    content: public string LocalName { get; }
    content.vb: Public ReadOnly Property LocalName As String
    parameters: []
    return:
      type: System.String
  seealso:
  - type: System.Xml.Linq.XName.Namespace
- uid: System.Xml.Linq.XName.Namespace
  id: Namespace
  parent: System.Xml.Linq.XName
  href: System.Xml.Linq.XName.yml
  name: Namespace
  fullName: System.Xml.Linq.XName.Namespace
  type: Property
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XName.cs
    startLine: 39
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Gets the namespace of the name.
  syntax:
    content: public XNamespace Namespace { get; }
    content.vb: Public ReadOnly Property Namespace As XNamespace
    parameters: []
    return:
      type: System.Xml.Linq.XNamespace
- uid: System.Xml.Linq.XName.NamespaceName
  id: NamespaceName
  parent: System.Xml.Linq.XName
  href: System.Xml.Linq.XName.yml
  name: NamespaceName
  fullName: System.Xml.Linq.XName.NamespaceName
  type: Property
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XName.cs
    startLine: 47
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Gets the namespace name part of the name.
  syntax:
    content: public string NamespaceName { get; }
    content.vb: Public ReadOnly Property NamespaceName As String
    parameters: []
    return:
      type: System.String
- uid: System.Xml.Linq.XName.ToString
  id: ToString
  parent: System.Xml.Linq.XName
  href: System.Xml.Linq.XName.yml
  name: ToString()
  fullName: System.Xml.Linq.XName.ToString()
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XName.cs
    startLine: 55
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: 'Returns the expanded XML name in the format: {namespaceName}localName.'
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
  overridden: System.Object.ToString
- uid: System.Xml.Linq.XName.Get(System.String)
  id: Get(System.String)
  parent: System.Xml.Linq.XName
  href: System.Xml.Linq.XName.yml
  name: Get(String)
  fullName: System.Xml.Linq.XName.Get(System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XName.cs
    startLine: 70
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Returns an [System.Xml.Linq.XName](System.Xml.Linq.XName.yml) object created from the specified expanded name.
  syntax:
    content: public static XName Get(string expandedName)
    content.vb: Public Shared Function Get(expandedName As String) As XName
    parameters:
    - id: expandedName
      type: System.String
      description: 'A string containing an expanded XML name in the format: {namespace}localname.'
    return:
      type: System.Xml.Linq.XName
      description: An <see cref="T:System.Xml.Linq.XName" /> object constructed from the specified expanded name.
- uid: System.Xml.Linq.XName.Get(System.String,System.String)
  id: Get(System.String,System.String)
  parent: System.Xml.Linq.XName
  href: System.Xml.Linq.XName.yml
  name: Get(String, String)
  fullName: System.Xml.Linq.XName.Get(System.String, System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XName.cs
    startLine: 92
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Returns an [System.Xml.Linq.XName](System.Xml.Linq.XName.yml) object from a local name and a namespace.
  syntax:
    content: public static XName Get(string localName, string namespaceName)
    content.vb: Public Shared Function Get(localName As String, namespaceName As String) As XName
    parameters:
    - id: localName
      type: System.String
      description: A local (unqualified) name.
    - id: namespaceName
      type: System.String
      description: An XML namespace.
    return:
      type: System.Xml.Linq.XName
      description: An XName object created from the specified local name and namespace.
- uid: System.Xml.Linq.XName.op_Implicit(System.String)~System.Xml.Linq.XName
  id: op_Implicit(System.String)~System.Xml.Linq.XName
  parent: System.Xml.Linq.XName
  href: System.Xml.Linq.XName.yml
  name: Implicit(String to XName)
  name.vb: Widening(String to XName)
  fullName: System.Xml.Linq.XName.Implicit(System.String to System.Xml.Linq.XName)
  fullName.vb: System.Xml.Linq.XName.Widening(System.String to System.Xml.Linq.XName)
  type: Operator
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XName.cs
    startLine: 102
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Converts a string formatted as an expanded XML name ({namespace}localname) to an XName object.
  syntax:
    content: public static implicit operator XName(string expandedName)
    content.vb: Public Shared Widening Operator CType(expandedName As String) As XName
    parameters:
    - id: expandedName
      type: System.String
      description: 'A string containing an expanded XML name in the format: {namespace}localname.'
    return:
      type: System.Xml.Linq.XName
      description: An XName object constructed from the expanded name.
- uid: System.Xml.Linq.XName.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Xml.Linq.XName
  href: System.Xml.Linq.XName.yml
  name: Equals(Object)
  fullName: System.Xml.Linq.XName.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XName.cs
    startLine: 118
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Determines whether the specified <see cref="T:System.Xml.Linq.XName" /> is equal to the current <see cref="T:System.Xml.Linq.XName" />.
  remarks: For two <see cref="T:System.Xml.Linq.XName" /> objects to be equal, they must have the same expanded name.
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: The XName to compare to the current XName.
    return:
      type: System.Boolean
      description: true if the specified <see cref="T:System.Xml.Linq.XName" /> is equal to the current XName; otherwise false.
  overridden: System.Object.Equals(System.Object)
- uid: System.Xml.Linq.XName.GetHashCode
  id: GetHashCode
  parent: System.Xml.Linq.XName
  href: System.Xml.Linq.XName.yml
  name: GetHashCode()
  fullName: System.Xml.Linq.XName.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XName.cs
    startLine: 127
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Serves as a hash function for [System.Xml.Linq.XName](System.Xml.Linq.XName.yml). GetHashCode is suitable

    for use in hashing algorithms and data structures like a hash table.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.Object.GetHashCode
- uid: System.Xml.Linq.XName.op_Equality(System.Xml.Linq.XName,System.Xml.Linq.XName)
  id: op_Equality(System.Xml.Linq.XName,System.Xml.Linq.XName)
  parent: System.Xml.Linq.XName
  href: System.Xml.Linq.XName.yml
  name: Equality(XName, XName)
  fullName: System.Xml.Linq.XName.Equality(System.Xml.Linq.XName, System.Xml.Linq.XName)
  type: Operator
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XName.cs
    startLine: 148
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Returns a value indicating whether two instances of [System.Xml.Linq.XName](System.Xml.Linq.XName.yml) are equal.
  remarks: >-
    This overload is included to enable the comparison between

    an instance of XName and string.
  syntax:
    content: public static bool operator ==(XName left, XName right)
    content.vb: Public Shared Operator =(left As XName, right As XName) As Boolean
    parameters:
    - id: left
      type: System.Xml.Linq.XName
      description: The first XName to compare.
    - id: right
      type: System.Xml.Linq.XName
      description: The second XName to compare.
    return:
      type: System.Boolean
      description: true if left and right are equal; otherwise false.
- uid: System.Xml.Linq.XName.op_Inequality(System.Xml.Linq.XName,System.Xml.Linq.XName)
  id: op_Inequality(System.Xml.Linq.XName,System.Xml.Linq.XName)
  parent: System.Xml.Linq.XName
  href: System.Xml.Linq.XName.yml
  name: Inequality(XName, XName)
  fullName: System.Xml.Linq.XName.Inequality(System.Xml.Linq.XName, System.Xml.Linq.XName)
  type: Operator
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XName.cs
    startLine: 163
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: Returns a value indicating whether two instances of [System.Xml.Linq.XName](System.Xml.Linq.XName.yml) are not equal.
  remarks: >-
    This overload is included to enable the comparison between

    an instance of XName and string.
  syntax:
    content: public static bool operator !=(XName left, XName right)
    content.vb: Public Shared Operator <>(left As XName, right As XName) As Boolean
    parameters:
    - id: left
      type: System.Xml.Linq.XName
      description: The first XName to compare.
    - id: right
      type: System.Xml.Linq.XName
      description: The second XName to compare.
    return:
      type: System.Boolean
      description: true if left and right are not equal; otherwise false.
- uid: System.Xml.Linq.XName.System#IEquatable{System#Xml#Linq#XName}#Equals(System.Xml.Linq.XName)
  id: System#IEquatable{System#Xml#Linq#XName}#Equals(System.Xml.Linq.XName)
  parent: System.Xml.Linq.XName
  href: System.Xml.Linq.XName.yml
  name: IEquatable<XName>.Equals(XName)
  name.vb: System.IEquatable<System.Xml.Linq.XName>.Equals(XName)
  fullName: System.Xml.Linq.XName.System.IEquatable<System.Xml.Linq.XName>.Equals(System.Xml.Linq.XName)
  type: Method
  source:
    remote: *o0
    path: src/System.Xml.XDocument/src/System/Xml/Linq/XName.cs
    startLine: 178
  assemblies:
  - System.Xml.XDocument
  namespace: System.Xml.Linq
  summary: >-
    Indicates whether the current <see cref="T:System.Xml.Linq.XName" /> is equal to

    the specified <see cref="T:System.Xml.Linq.XName" />
  syntax:
    content: bool IEquatable<XName>.Equals(XName other)
    content.vb: Function System.IEquatable<System.Xml.Linq.XName>.Equals(other As XName) As Boolean Implements IEquatable(Of XName).Equals
    parameters:
    - id: other
      type: System.Xml.Linq.XName
      description: >-
        The <see cref="T:System.Xml.Linq.XName" /> to compare with the

        current <see cref="T:System.Xml.Linq.XName" />
    return:
      type: System.Boolean
      description: >-
        Returns true if the current <see cref="T:System.Xml.Linq.XName" /> is equal to

        the specified <see cref="T:System.Xml.Linq.XName" />. Returns false otherwise.
references:
- uid: System.Xml.Linq
  isExternal: false
  name: System.Xml.Linq
  fullName: System.Xml.Linq
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Xml.Linq.XName.Namespace
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Xml.Linq.XNamespace
  parent: System.Xml.Linq
  isExternal: false
  href: System.Xml.Linq.XNamespace.yml
  name: XNamespace
  fullName: System.Xml.Linq.XNamespace
  type: Class
  summary: Represents an XML namespace. This class cannot be inherited.
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Xml.Linq.XName
  parent: System.Xml.Linq
  isExternal: false
  href: System.Xml.Linq.XName.yml
  name: XName
  fullName: System.Xml.Linq.XName
  type: Class
  summary: Represents a name of an XML element or attribute. This class cannot be inherited.
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
