items:
- uid: System.Collections.Specialized.NameObjectCollectionBase
  id: NameObjectCollectionBase
  parent: System.Collections.Specialized
  children:
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseClear
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
  - System.Collections.Specialized.NameObjectCollectionBase.Count
  - System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
  - System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  - System.Collections.Specialized.NameObjectCollectionBase.Keys
  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: NameObjectCollectionBase
  fullName: System.Collections.Specialized.NameObjectCollectionBase
  type: Class
  source:
    remote: &o0
      path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 21
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: 'public abstract class NameObjectCollectionBase : ICollection, IEnumerable'
    content.vb: Public MustInherit Class NameObjectCollectionBase Implements ICollection, IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor
  id: '#ctor'
  parent: System.Collections.Specialized.NameObjectCollectionBase
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: NameObjectCollectionBase()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 38
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected NameObjectCollectionBase()
    content.vb: Protected Sub New
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Collections.IEqualityComparer)
  id: '#ctor(System.Collections.IEqualityComparer)'
  parent: System.Collections.Specialized.NameObjectCollectionBase
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: NameObjectCollectionBase(IEqualityComparer)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(System.Collections.IEqualityComparer)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 42
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected NameObjectCollectionBase(IEqualityComparer equalityComparer)
    content.vb: Protected Sub New(equalityComparer As IEqualityComparer)
    parameters:
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32,System.Collections.IEqualityComparer)
  id: '#ctor(System.Int32,System.Collections.IEqualityComparer)'
  parent: System.Collections.Specialized.NameObjectCollectionBase
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: NameObjectCollectionBase(Int32, IEqualityComparer)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(System.Int32, System.Collections.IEqualityComparer)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 48
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected NameObjectCollectionBase(int capacity, IEqualityComparer equalityComparer)
    content.vb: Protected Sub New(capacity As Integer, equalityComparer As IEqualityComparer)
    parameters:
    - id: capacity
      type: System.Int32
    - id: equalityComparer
      type: System.Collections.IEqualityComparer
- uid: System.Collections.Specialized.NameObjectCollectionBase.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Specialized.NameObjectCollectionBase
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: NameObjectCollectionBase(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.NameObjectCollectionBase(System.Int32)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 58
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected NameObjectCollectionBase(int capacity)
    content.vb: Protected Sub New(capacity As Integer)
    parameters:
    - id: capacity
      type: System.Int32
- uid: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  id: IsReadOnly
  parent: System.Collections.Specialized.NameObjectCollectionBase
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: IsReadOnly
  fullName: System.Collections.Specialized.NameObjectCollectionBase.IsReadOnly
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 108
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected bool IsReadOnly { get; set; }
    content.vb: Protected Property IsReadOnly As Boolean
    parameters: []
    return:
      type: System.Boolean
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys
  id: BaseHasKeys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: BaseHasKeys()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseHasKeys()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 118
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected bool BaseHasKeys()
    content.vb: Protected Function BaseHasKeys As Boolean
    return:
      type: System.Boolean
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String,System.Object)
  id: BaseAdd(System.String,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: BaseAdd(String, Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseAdd(System.String, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 131
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected void BaseAdd(string name, object value)
    content.vb: Protected Sub BaseAdd(name As String, value As Object)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: System.Object
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
  id: BaseRemove(System.String)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: BaseRemove(String)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemove(System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 160
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected void BaseRemove(string name)
    content.vb: Protected Sub BaseRemove(name As String)
    parameters:
    - id: name
      type: System.String
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
  id: BaseRemoveAt(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: BaseRemoveAt(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseRemoveAt(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 197
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected void BaseRemoveAt(int index)
    content.vb: Protected Sub BaseRemoveAt(index As Integer)
    parameters:
    - id: index
      type: System.Int32
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseClear
  id: BaseClear
  parent: System.Collections.Specialized.NameObjectCollectionBase
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: BaseClear()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseClear()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 224
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected void BaseClear()
    content.vb: Protected Sub BaseClear
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
  id: BaseGet(System.String)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: BaseGet(String)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 240
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected object BaseGet(string name)
    content.vb: Protected Function BaseGet(name As String) As Object
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Object
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String,System.Object)
  id: BaseSet(System.String,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: BaseSet(String, Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.String, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 252
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected void BaseSet(string name, object value)
    content.vb: Protected Sub BaseSet(name As String, value As Object)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: System.Object
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
  id: BaseGet(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: BaseGet(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGet(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 277
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected object BaseGet(int index)
    content.vb: Protected Function BaseGet(index As Integer) As Object
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Object
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
  id: BaseGetKey(System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: BaseGetKey(Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetKey(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 288
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected string BaseGetKey(int index)
    content.vb: Protected Function BaseGetKey(index As Integer) As String
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.String
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32,System.Object)
  id: BaseSet(System.Int32,System.Object)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: BaseSet(Int32, Object)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseSet(System.Int32, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 298
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected void BaseSet(int index, object value)
    content.vb: Protected Sub BaseSet(index As Integer, value As Object)
    parameters:
    - id: index
      type: System.Int32
    - id: value
      type: System.Object
- uid: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Specialized.NameObjectCollectionBase
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: GetEnumerator()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 315
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: public virtual IEnumerator GetEnumerator()
    content.vb: Public Overridable Function GetEnumerator As IEnumerator
    return:
      type: System.Collections.IEnumerator
- uid: System.Collections.Specialized.NameObjectCollectionBase.Count
  id: Count
  parent: System.Collections.Specialized.NameObjectCollectionBase
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: Count
  fullName: System.Collections.Specialized.NameObjectCollectionBase.Count
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 323
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: public virtual int Count { get; }
    content.vb: Public Overridable ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: ICollection.CopyTo(Array, Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 331
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: void ICollection.CopyTo(Array array, int index)
    content.vb: Sub System.Collections.ICollection.CopyTo(array As Array, index As Integer) Implements ICollection.CopyTo
    parameters:
    - id: array
      type: System.Array
    - id: index
      type: System.Int32
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  parent: System.Collections.Specialized.NameObjectCollectionBase
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
  fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 357
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: object ICollection.SyncRoot { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot
    parameters: []
    return:
      type: System.Object
- uid: System.Collections.Specialized.NameObjectCollectionBase.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  parent: System.Collections.Specialized.NameObjectCollectionBase
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.Specialized.NameObjectCollectionBase.System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 369
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: bool ICollection.IsSynchronized { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized
    parameters: []
    return:
      type: System.Boolean
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys
  id: BaseGetAllKeys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: BaseGetAllKeys()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllKeys()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 382
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected string[] BaseGetAllKeys()
    content.vb: Protected Function BaseGetAllKeys As String()
    return:
      type: System.String[]
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues
  id: BaseGetAllValues
  parent: System.Collections.Specialized.NameObjectCollectionBase
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: BaseGetAllValues()
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 397
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected object[] BaseGetAllValues()
    content.vb: Protected Function BaseGetAllValues As Object()
    return:
      type: System.Object[]
- uid: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  id: BaseGetAllValues(System.Type)
  parent: System.Collections.Specialized.NameObjectCollectionBase
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: BaseGetAllValues(Type)
  fullName: System.Collections.Specialized.NameObjectCollectionBase.BaseGetAllValues(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 412
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: protected object[] BaseGetAllValues(Type type)
    content.vb: Protected Function BaseGetAllValues(type As Type) As Object()
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Object[]
- uid: System.Collections.Specialized.NameObjectCollectionBase.Keys
  id: Keys
  parent: System.Collections.Specialized.NameObjectCollectionBase
  href: System.Collections.Specialized.NameObjectCollectionBase.yml
  name: Keys
  fullName: System.Collections.Specialized.NameObjectCollectionBase.Keys
  type: Property
  source:
    remote: *o0
    path: src/System.Collections.Specialized/src/System/Collections/Specialized/NameObjectCollectionBase.cs
    startLine: 437
  assemblies:
  - System.Collections.Specialized
  namespace: System.Collections.Specialized
  syntax:
    content: public virtual NameObjectCollectionBase.KeysCollection Keys { get; }
    content.vb: Public Overridable ReadOnly Property Keys As NameObjectCollectionBase.KeysCollection
    parameters: []
    return:
      type: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
references:
- uid: System.Collections.Specialized
  isExternal: false
  name: System.Collections.Specialized
  fullName: System.Collections.Specialized
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Collections.IEqualityComparer
  parent: System.Collections
  isExternal: true
  name: IEqualityComparer
  fullName: System.Collections.IEqualityComparer
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  fullName: System.Array
- uid: System.String[]
  isExternal: true
  name: String[]
  name.vb: String()
  fullName: System.String[]
  fullName.vb: System.String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Object[]
  isExternal: true
  name: Object[]
  name.vb: Object()
  fullName: System.Object[]
  fullName.vb: System.Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  fullName: System.Type
- uid: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
  parent: System.Collections.Specialized
  isExternal: false
  href: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection.yml
  name: NameObjectCollectionBase.KeysCollection
  fullName: System.Collections.Specialized.NameObjectCollectionBase.KeysCollection
  type: Class
