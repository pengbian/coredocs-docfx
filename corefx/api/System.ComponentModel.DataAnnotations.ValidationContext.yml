items:
- uid: System.ComponentModel.DataAnnotations.ValidationContext
  id: ValidationContext
  parent: System.ComponentModel.DataAnnotations
  children:
  - System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object)
  - System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,System.Collections.Generic.IDictionary{System.Object,System.Object})
  - System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,System.IServiceProvider,System.Collections.Generic.IDictionary{System.Object,System.Object})
  - System.ComponentModel.DataAnnotations.ValidationContext.DisplayName
  - System.ComponentModel.DataAnnotations.ValidationContext.GetService(System.Type)
  - System.ComponentModel.DataAnnotations.ValidationContext.InitializeServiceProvider(System.Func{System.Type,System.Object})
  - System.ComponentModel.DataAnnotations.ValidationContext.Items
  - System.ComponentModel.DataAnnotations.ValidationContext.MemberName
  - System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance
  - System.ComponentModel.DataAnnotations.ValidationContext.ObjectType
  href: System.ComponentModel.DataAnnotations.ValidationContext.yml
  name: ValidationContext
  fullName: System.ComponentModel.DataAnnotations.ValidationContext
  type: Class
  source:
    remote: &o0
      path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
    startLine: 23
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Describes the context in which a validation is being performed.
  remarks: >-
    This class contains information describing the instance on which

    validation is being performed.

    <para>

    It supports <see cref="T:System.IServiceProvider" /> so that custom validation

    code can acquire additional services to help it perform its validation.

    </para><para>

    An <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.Items" /> property bag is available for additional contextual

    information about the validation.  Values stored in <see cref="P:System.ComponentModel.DataAnnotations.ValidationContext.Items" />

    will be available to validation methods that use this <see cref="T:System.ComponentModel.DataAnnotations.ValidationContext" /></para>
  syntax:
    content: 'public sealed class ValidationContext : IServiceProvider'
    content.vb: Public NotInheritable Class ValidationContext Implements IServiceProvider
  inheritance:
  - System.Object
  implements:
  - System.IServiceProvider
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.ComponentModel.DataAnnotations.ValidationContext
  href: System.ComponentModel.DataAnnotations.ValidationContext.yml
  name: ValidationContext(Object)
  fullName: System.ComponentModel.DataAnnotations.ValidationContext.ValidationContext(System.Object)
  type: Constructor
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
    startLine: 45
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Construct a [System.ComponentModel.DataAnnotations.ValidationContext](System.ComponentModel.DataAnnotations.ValidationContext.yml) for a given object instance being validated.
  syntax:
    content: public ValidationContext(object instance)
    content.vb: Public Sub New(instance As Object)
    parameters:
    - id: instance
      type: System.Object
      description: The object instance being validated.  It cannot be <c>null</c>.
  exceptions:
  - type: System.ArgumentNullException
    description: When  is null
- uid: System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,System.Collections.Generic.IDictionary{System.Object,System.Object})
  id: '#ctor(System.Object,System.Collections.Generic.IDictionary{System.Object,System.Object})'
  parent: System.ComponentModel.DataAnnotations.ValidationContext
  href: System.ComponentModel.DataAnnotations.ValidationContext.yml
  name: ValidationContext(Object, IDictionary<Object, Object>)
  name.vb: ValidationContext(Object, IDictionary(Of Object, Object))
  fullName: System.ComponentModel.DataAnnotations.ValidationContext.ValidationContext(System.Object, System.Collections.Generic.IDictionary<System.Object, System.Object>)
  fullName.vb: System.ComponentModel.DataAnnotations.ValidationContext.ValidationContext(System.Object, System.Collections.Generic.IDictionary(Of System.Object, System.Object))
  type: Constructor
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
    startLine: 61
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: >-
    Construct a [System.ComponentModel.DataAnnotations.ValidationContext](System.ComponentModel.DataAnnotations.ValidationContext.yml) for a given object instance and an optional

    property bag of <paramref name="items" />.
  syntax:
    content: public ValidationContext(object instance, IDictionary<object, object> items)
    content.vb: Public Sub New(instance As Object, items As IDictionary(Of Object, Object))
    parameters:
    - id: instance
      type: System.Object
      description: The object instance being validated.  It cannot be null.
    - id: items
      type: System.Collections.Generic.IDictionary{System.Object,System.Object}
      description: >-
        Optional set of key/value pairs to make available to consumers via [System.ComponentModel.DataAnnotations.ValidationContext.Items](System.ComponentModel.DataAnnotations.ValidationContext.yml).

        If null, an empty dictionary will be created.  If not null, the set of key/value pairs will be copied into a

        new dictionary, preventing consumers from modifying the original dictionary.
  exceptions:
  - type: System.ArgumentNullException
    description: When  is null
- uid: System.ComponentModel.DataAnnotations.ValidationContext.#ctor(System.Object,System.IServiceProvider,System.Collections.Generic.IDictionary{System.Object,System.Object})
  id: '#ctor(System.Object,System.IServiceProvider,System.Collections.Generic.IDictionary{System.Object,System.Object})'
  parent: System.ComponentModel.DataAnnotations.ValidationContext
  href: System.ComponentModel.DataAnnotations.ValidationContext.yml
  name: ValidationContext(Object, IServiceProvider, IDictionary<Object, Object>)
  name.vb: ValidationContext(Object, IServiceProvider, IDictionary(Of Object, Object))
  fullName: System.ComponentModel.DataAnnotations.ValidationContext.ValidationContext(System.Object, System.IServiceProvider, System.Collections.Generic.IDictionary<System.Object, System.Object>)
  fullName.vb: System.ComponentModel.DataAnnotations.ValidationContext.ValidationContext(System.Object, System.IServiceProvider, System.Collections.Generic.IDictionary(Of System.Object, System.Object))
  type: Constructor
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
    startLine: 82
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: >-
    Construct a [System.ComponentModel.DataAnnotations.ValidationContext](System.ComponentModel.DataAnnotations.ValidationContext.yml) for a given object instance, an optional

    <paramref name="serviceProvider" />, and an optional

    property bag of <paramref name="items" />.
  syntax:
    content: public ValidationContext(object instance, IServiceProvider serviceProvider, IDictionary<object, object> items)
    content.vb: Public Sub New(instance As Object, serviceProvider As IServiceProvider, items As IDictionary(Of Object, Object))
    parameters:
    - id: instance
      type: System.Object
      description: The object instance being validated.  It cannot be null.
    - id: serviceProvider
      type: System.IServiceProvider
      description: >-
        Optional <see cref="T:System.IServiceProvider" /> to use when <see cref="M:System.ComponentModel.DataAnnotations.ValidationContext.GetService(System.Type)" /> is called.

        If it is null, <see cref="M:System.ComponentModel.DataAnnotations.ValidationContext.GetService(System.Type)" /> will always return null.
    - id: items
      type: System.Collections.Generic.IDictionary{System.Object,System.Object}
      description: >-
        Optional set of key/value pairs to make available to consumers via [System.ComponentModel.DataAnnotations.ValidationContext.Items](System.ComponentModel.DataAnnotations.ValidationContext.yml).

        If null, an empty dictionary will be created.  If not null, the set of key/value pairs will be copied into a

        new dictionary, preventing consumers from modifying the original dictionary.
  exceptions:
  - type: System.ArgumentNullException
    description: When  is null
- uid: System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance
  id: ObjectInstance
  parent: System.ComponentModel.DataAnnotations.ValidationContext
  href: System.ComponentModel.DataAnnotations.ValidationContext.yml
  name: ObjectInstance
  fullName: System.ComponentModel.DataAnnotations.ValidationContext.ObjectInstance
  type: Property
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
    startLine: 120
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: >-
    Gets the object instance being validated.  While it will not be null, the state of the instance is indeterminate

    as it might only be partially initialized during validation.

    <para>Consume this instance with caution!</para>
  remarks: >-
    During validation, especially property-level validation, the object instance might be in an indeterminate state.

    For example, the property being validated, as well as other properties on the instance might not have been

    updated to their new values.
  syntax:
    content: public object ObjectInstance { get; }
    content.vb: Public ReadOnly Property ObjectInstance As Object
    parameters: []
    return:
      type: System.Object
- uid: System.ComponentModel.DataAnnotations.ValidationContext.ObjectType
  id: ObjectType
  parent: System.ComponentModel.DataAnnotations.ValidationContext
  href: System.ComponentModel.DataAnnotations.ValidationContext.yml
  name: ObjectType
  fullName: System.ComponentModel.DataAnnotations.ValidationContext.ObjectType
  type: Property
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
    startLine: 128
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Gets the type of the object being validated.  It will not be null.
  syntax:
    content: public Type ObjectType { get; }
    content.vb: Public ReadOnly Property ObjectType As Type
    parameters: []
    return:
      type: System.Type
- uid: System.ComponentModel.DataAnnotations.ValidationContext.DisplayName
  id: DisplayName
  parent: System.ComponentModel.DataAnnotations.ValidationContext
  href: System.ComponentModel.DataAnnotations.ValidationContext.yml
  name: DisplayName
  fullName: System.ComponentModel.DataAnnotations.ValidationContext.DisplayName
  type: Property
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
    startLine: 142
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Gets or sets the user-visible name of the type or property being validated.
  syntax:
    content: public string DisplayName { get; set; }
    content.vb: Public Property DisplayName As String
    parameters: []
    return:
      type: System.String
- uid: System.ComponentModel.DataAnnotations.ValidationContext.MemberName
  id: MemberName
  parent: System.ComponentModel.DataAnnotations.ValidationContext
  href: System.ComponentModel.DataAnnotations.ValidationContext.yml
  name: MemberName
  fullName: System.ComponentModel.DataAnnotations.ValidationContext.MemberName
  type: Property
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
    startLine: 173
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Gets or sets the name of the type or property being validated.
  syntax:
    content: public string MemberName { get; set; }
    content.vb: Public Property MemberName As String
    parameters: []
    return:
      type: System.String
- uid: System.ComponentModel.DataAnnotations.ValidationContext.Items
  id: Items
  parent: System.ComponentModel.DataAnnotations.ValidationContext
  href: System.ComponentModel.DataAnnotations.ValidationContext.yml
  name: Items
  fullName: System.ComponentModel.DataAnnotations.ValidationContext.Items
  type: Property
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
    startLine: 186
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: Gets the dictionary of key/value pairs associated with this context.
  syntax:
    content: public IDictionary<object, object> Items { get; }
    content.vb: Public ReadOnly Property Items As IDictionary(Of Object, Object)
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.Object,System.Object}
- uid: System.ComponentModel.DataAnnotations.ValidationContext.InitializeServiceProvider(System.Func{System.Type,System.Object})
  id: InitializeServiceProvider(System.Func{System.Type,System.Object})
  parent: System.ComponentModel.DataAnnotations.ValidationContext
  href: System.ComponentModel.DataAnnotations.ValidationContext.yml
  name: InitializeServiceProvider(Func<Type, Object>)
  name.vb: InitializeServiceProvider(Func(Of Type, Object))
  fullName: System.ComponentModel.DataAnnotations.ValidationContext.InitializeServiceProvider(System.Func<System.Type, System.Object>)
  fullName.vb: System.ComponentModel.DataAnnotations.ValidationContext.InitializeServiceProvider(System.Func(Of System.Type, System.Object))
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
    startLine: 231
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: >-
    Initializes the [System.ComponentModel.DataAnnotations.ValidationContext](System.ComponentModel.DataAnnotations.ValidationContext.yml) with a service provider that can return

    service instances by [System.Type]() when [System.ComponentModel.DataAnnotations.ValidationContext.GetService(System.Type)](System.ComponentModel.DataAnnotations.ValidationContext.yml) is called.
  syntax:
    content: public void InitializeServiceProvider(Func<Type, object> serviceProvider)
    content.vb: Public Sub InitializeServiceProvider(serviceProvider As Func(Of Type, Object))
    parameters:
    - id: serviceProvider
      type: System.Func{System.Type,System.Object}
      description: >-
        A <see cref="T:System.Func`2" /> that can return service instances given the

        desired <see cref="T:System.Type" /> when <see cref="M:System.ComponentModel.DataAnnotations.ValidationContext.GetService(System.Type)" /> is called.

        If it is <c>null</c>, <see cref="M:System.ComponentModel.DataAnnotations.ValidationContext.GetService(System.Type)" /> will always return <c>null</c>.
- uid: System.ComponentModel.DataAnnotations.ValidationContext.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.DataAnnotations.ValidationContext
  href: System.ComponentModel.DataAnnotations.ValidationContext.yml
  name: GetService(Type)
  fullName: System.ComponentModel.DataAnnotations.ValidationContext.GetService(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/System.ComponentModel.Annotations/src/System/ComponentModel/DataAnnotations/ValidationContext.cs
    startLine: 245
  assemblies:
  - System.ComponentModel.Annotations
  namespace: System.ComponentModel.DataAnnotations
  summary: See [System.IServiceProvider.GetService(System.Type)](System.IServiceProvider.yml).
  syntax:
    content: public object GetService(Type serviceType)
    content.vb: Public Function GetService(serviceType As Type) As Object
    parameters:
    - id: serviceType
      type: System.Type
      description: The type of the service needed.
    return:
      type: System.Object
      description: An instance of that service or null if it is not available.
references:
- uid: System.ComponentModel.DataAnnotations
  isExternal: false
  name: System.ComponentModel.DataAnnotations
  fullName: System.ComponentModel.DataAnnotations
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.ComponentModel.DataAnnotations.ValidationContext
  parent: System.ComponentModel.DataAnnotations
  isExternal: false
  href: System.ComponentModel.DataAnnotations.ValidationContext.yml
  name: ValidationContext
  fullName: System.ComponentModel.DataAnnotations.ValidationContext
  type: Class
  summary: Describes the context in which a validation is being performed.
- uid: System.ArgumentNullException
- uid: System.ComponentModel.DataAnnotations.ValidationContext.Items
- uid: System.Collections.Generic.IDictionary{System.Object,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<Object, Object>
  name.vb: IDictionary(Of Object, Object)
  fullName: System.Collections.Generic.IDictionary<System.Object, System.Object>
  fullName.vb: System.Collections.Generic.IDictionary(Of System.Object, System.Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<TKey, TValue>
  name.vb: IDictionary(Of TKey, TValue)
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.IServiceProvider
  isExternal: false
  href: System.IServiceProvider.yml
  name: IServiceProvider
  fullName: System.IServiceProvider
  type: Interface
- uid: System.ComponentModel.DataAnnotations.ValidationContext.GetService(System.Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  fullName: System.Type
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.Func`2
  parent: System
  isExternal: true
  name: Func<T, TResult>
  name.vb: Func(Of T, TResult)
  fullName: System.Func<T, TResult>
  fullName.vb: System.Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Func{System.Type,System.Object}
  parent: System
  definition: System.Func`2
  name: Func<Type, Object>
  name.vb: Func(Of Type, Object)
  fullName: System.Func<System.Type, System.Object>
  fullName.vb: System.Func(Of System.Type, System.Object)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.IServiceProvider.GetService(System.Type)
  parent: System.IServiceProvider
  isExternal: true
  name: GetService(Type)
  fullName: System.IServiceProvider.GetService(System.Type)
  spec.csharp:
  - uid: System.IServiceProvider.GetService(System.Type)
    name: GetService
    fullName: System.IServiceProvider.GetService
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.IServiceProvider.GetService(System.Type)
    name: GetService
    fullName: System.IServiceProvider.GetService
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Type
    name: Type
    fullName: System.Type
    isExternal: true
  - name: )
    fullName: )
