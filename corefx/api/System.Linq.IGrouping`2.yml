items:
- uid: System.Linq.IGrouping`2
  id: IGrouping`2
  parent: System.Linq
  children:
  - System.Linq.IGrouping`2.Key
  href: System.Linq.IGrouping`2.yml
  name: IGrouping<TKey, TElement>
  name.vb: IGrouping(Of TKey, TElement)
  fullName: System.Linq.IGrouping<TKey, TElement>
  fullName.vb: System.Linq.IGrouping(Of TKey, TElement)
  type: Interface
  source:
    remote: &o0
      path: src/System.Linq/src/System/Linq/Enumerable.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2515
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: 'public interface IGrouping<out TKey, out TElement> : IEnumerable<TElement>, IEnumerable'
    content.vb: Public Interface IGrouping(Of Out TKey, Out TElement) Inherits IEnumerable(Of TElement)
    typeParameters:
    - id: TKey
    - id: TElement
  inheritedMembers:
  - System.Collections.Generic.IEnumerable{{TElement}}.GetEnumerator
- uid: System.Linq.IGrouping`2.Key
  id: Key
  parent: System.Linq.IGrouping`2
  href: System.Linq.IGrouping`2.yml
  name: Key
  fullName: System.Linq.IGrouping<TKey, TElement>.Key
  fullName.vb: System.Linq.IGrouping(Of TKey, TElement).Key
  type: Property
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2517
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: TKey Key { get; }
    content.vb: ReadOnly Property Key As TKey
    parameters: []
    return:
      type: '{TKey}'
references:
- uid: System.Linq
  isExternal: false
  name: System.Linq
  fullName: System.Linq
  type: Namespace
- uid: System.Collections.Generic.IEnumerable{{TElement}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{TElement}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  name: GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<TElement>.GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of TElement).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<TElement>.GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of TElement).GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  parent: System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{TElement}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TElement>
  name.vb: IEnumerable(Of TElement)
  fullName: System.Collections.Generic.IEnumerable<TElement>
  fullName.vb: System.Collections.Generic.IEnumerable(Of TElement)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  name.vb: IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: '{TKey}'
  isExternal: false
  name: TKey
  fullName: TKey
