items:
- uid: System.Linq.Enumerable
  id: Enumerable
  parent: System.Linq
  children:
  - System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
  - System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
  - System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
  - System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  - System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  - System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  - System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
  - System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  - System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  - System.Linq.Enumerable.Empty``1
  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
  - System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
  - System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  - System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  - System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  - System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  - System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  - System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  - System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  - System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  - System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  - System.Linq.Enumerable.Range(System.Int32,System.Int32)
  - System.Linq.Enumerable.Repeat``1(``0,System.Int32)
  - System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
  - System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  - System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  - System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  - System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  - System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  - System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  - System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  - System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  - System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  - System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  - System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  - System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  - System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
  href: System.Linq.Enumerable.yml
  name: Enumerable
  fullName: System.Linq.Enumerable
  type: Class
  source:
    remote: &o0
      path: src/System.Linq/src/System/Linq/Enumerable.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 10
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public class Enumerable
    content.vb: Public Class Enumerable
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  id: Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Where<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  name.vb: Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  fullName: System.Linq.Enumerable.Where<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullName.vb: System.Linq.Enumerable.Where(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 12
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TSource> Where<TSource>(IEnumerable<TSource> source, Func<TSource, bool> predicate)
    content.vb: Public Shared Function Where(Of TSource)(source As IEnumerable(Of TSource), predicate As Func(Of TSource, Boolean)) As IEnumerable(Of TSource)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: predicate
      type: System.Func{{TSource},System.Boolean}
    typeParameters:
    - id: TSource
    return:
      type: System.Collections.Generic.IEnumerable{{TSource}}
- uid: System.Linq.Enumerable.Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  id: Where``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Where<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)
  name.vb: Where(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))
  fullName: System.Linq.Enumerable.Where<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)
  fullName.vb: System.Linq.Enumerable.Where(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 22
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TSource> Where<TSource>(IEnumerable<TSource> source, Func<TSource, int, bool> predicate)
    content.vb: Public Shared Function Where(Of TSource)(source As IEnumerable(Of TSource), predicate As Func(Of TSource, Integer, Boolean)) As IEnumerable(Of TSource)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: predicate
      type: System.Func{{TSource},System.Int32,System.Boolean}
    typeParameters:
    - id: TSource
    return:
      type: System.Collections.Generic.IEnumerable{{TSource}}
- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  id: Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)
  name.vb: Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))
  fullName: System.Linq.Enumerable.Select<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)
  fullName.vb: System.Linq.Enumerable.Select(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 39
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TResult> Select<TSource, TResult>(IEnumerable<TSource> source, Func<TSource, TResult> selector)
    content.vb: Public Shared Function Select(Of TSource, TResult)(source As IEnumerable(Of TSource), selector As Func(Of TSource, TResult)) As IEnumerable(Of TResult)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},{TResult}}
    typeParameters:
    - id: TSource
    - id: TResult
    return:
      type: System.Collections.Generic.IEnumerable{{TResult}}
- uid: System.Linq.Enumerable.Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
  id: Select``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,``1})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Select<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, TResult>)
  name.vb: Select(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, TResult))
  fullName: System.Linq.Enumerable.Select<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, TResult>)
  fullName.vb: System.Linq.Enumerable.Select(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, TResult))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 49
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TResult> Select<TSource, TResult>(IEnumerable<TSource> source, Func<TSource, int, TResult> selector)
    content.vb: Public Shared Function Select(Of TSource, TResult)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Integer, TResult)) As IEnumerable(Of TResult)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Int32,{TResult}}
    typeParameters:
    - id: TSource
    - id: TResult
    return:
      type: System.Collections.Generic.IEnumerable{{TResult}}
- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
  id: SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TResult>>)
  name.vb: SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TResult)))
  fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)
  fullName.vb: System.Linq.Enumerable.SelectMany(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TResult)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 549
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TResult> SelectMany<TSource, TResult>(IEnumerable<TSource> source, Func<TSource, IEnumerable<TResult>> selector)
    content.vb: Public Shared Function SelectMany(Of TSource, TResult)(source As IEnumerable(Of TSource), selector As Func(Of TSource, IEnumerable(Of TResult))) As IEnumerable(Of TResult)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Collections.Generic.IEnumerable{{TResult}}}
    typeParameters:
    - id: TSource
    - id: TResult
    return:
      type: System.Collections.Generic.IEnumerable{{TResult}}
- uid: System.Linq.Enumerable.SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
  id: SelectMany``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: SelectMany<TSource, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TResult>>)
  name.vb: SelectMany(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TResult)))
  fullName: System.Linq.Enumerable.SelectMany<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Collections.Generic.IEnumerable<TResult>>)
  fullName.vb: System.Linq.Enumerable.SelectMany(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Collections.Generic.IEnumerable(Of TResult)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 567
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TResult> SelectMany<TSource, TResult>(IEnumerable<TSource> source, Func<TSource, int, IEnumerable<TResult>> selector)
    content.vb: Public Shared Function SelectMany(Of TSource, TResult)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Integer, IEnumerable(Of TResult))) As IEnumerable(Of TResult)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Int32,System.Collections.Generic.IEnumerable{{TResult}}}
    typeParameters:
    - id: TSource
    - id: TResult
    return:
      type: System.Collections.Generic.IEnumerable{{TResult}}
- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  id: SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, Int32, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)
  name.vb: SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, Int32, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))
  fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<TSource, TCollection, TResult>)
  fullName.vb: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of TSource, TCollection, TResult))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 586
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TResult> SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource> source, Func<TSource, int, IEnumerable<TCollection>> collectionSelector, Func<TSource, TCollection, TResult> resultSelector)
    content.vb: Public Shared Function SelectMany(Of TSource, TCollection, TResult)(source As IEnumerable(Of TSource), collectionSelector As Func(Of TSource, Integer, IEnumerable(Of TCollection)), resultSelector As Func(Of TSource, TCollection, TResult)) As IEnumerable(Of TResult)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: collectionSelector
      type: System.Func{{TSource},System.Int32,System.Collections.Generic.IEnumerable{{TCollection}}}
    - id: resultSelector
      type: System.Func{{TSource},{TCollection},{TResult}}
    typeParameters:
    - id: TSource
    - id: TCollection
    - id: TResult
    return:
      type: System.Collections.Generic.IEnumerable{{TResult}}
- uid: System.Linq.Enumerable.SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  id: SelectMany``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Collections.Generic.IEnumerable{``1}},System.Func{``0,``1,``2})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource>, Func<TSource, IEnumerable<TCollection>>, Func<TSource, TCollection, TResult>)
  name.vb: SelectMany(Of TSource, TCollection, TResult)(IEnumerable(Of TSource), Func(Of TSource, IEnumerable(Of TCollection)), Func(Of TSource, TCollection, TResult))
  fullName: System.Linq.Enumerable.SelectMany<TSource, TCollection, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Collections.Generic.IEnumerable<TCollection>>, System.Func<TSource, TCollection, TResult>)
  fullName.vb: System.Linq.Enumerable.SelectMany(Of TSource, TCollection, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TCollection)), System.Func(Of TSource, TCollection, TResult))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 607
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TResult> SelectMany<TSource, TCollection, TResult>(IEnumerable<TSource> source, Func<TSource, IEnumerable<TCollection>> collectionSelector, Func<TSource, TCollection, TResult> resultSelector)
    content.vb: Public Shared Function SelectMany(Of TSource, TCollection, TResult)(source As IEnumerable(Of TSource), collectionSelector As Func(Of TSource, IEnumerable(Of TCollection)), resultSelector As Func(Of TSource, TCollection, TResult)) As IEnumerable(Of TResult)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: collectionSelector
      type: System.Func{{TSource},System.Collections.Generic.IEnumerable{{TCollection}}}
    - id: resultSelector
      type: System.Func{{TSource},{TCollection},{TResult}}
    typeParameters:
    - id: TSource
    - id: TCollection
    - id: TResult
    return:
      type: System.Collections.Generic.IEnumerable{{TResult}}
- uid: System.Linq.Enumerable.Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  id: Take``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Take<TSource>(IEnumerable<TSource>, Int32)
  name.vb: Take(Of TSource)(IEnumerable(Of TSource), Int32)
  fullName: System.Linq.Enumerable.Take<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)
  fullName.vb: System.Linq.Enumerable.Take(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 626
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TSource> Take<TSource>(IEnumerable<TSource> source, int count)
    content.vb: Public Shared Function Take(Of TSource)(source As IEnumerable(Of TSource), count As Integer) As IEnumerable(Of TSource)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: count
      type: System.Int32
    typeParameters:
    - id: TSource
    return:
      type: System.Collections.Generic.IEnumerable{{TSource}}
- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  id: TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  name.vb: TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  fullName: System.Linq.Enumerable.TakeWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullName.vb: System.Linq.Enumerable.TakeWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 644
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TSource> TakeWhile<TSource>(IEnumerable<TSource> source, Func<TSource, bool> predicate)
    content.vb: Public Shared Function TakeWhile(Of TSource)(source As IEnumerable(Of TSource), predicate As Func(Of TSource, Boolean)) As IEnumerable(Of TSource)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: predicate
      type: System.Func{{TSource},System.Boolean}
    typeParameters:
    - id: TSource
    return:
      type: System.Collections.Generic.IEnumerable{{TSource}}
- uid: System.Linq.Enumerable.TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  id: TakeWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: TakeWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)
  name.vb: TakeWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))
  fullName: System.Linq.Enumerable.TakeWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)
  fullName.vb: System.Linq.Enumerable.TakeWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 660
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TSource> TakeWhile<TSource>(IEnumerable<TSource> source, Func<TSource, int, bool> predicate)
    content.vb: Public Shared Function TakeWhile(Of TSource)(source As IEnumerable(Of TSource), predicate As Func(Of TSource, Integer, Boolean)) As IEnumerable(Of TSource)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: predicate
      type: System.Func{{TSource},System.Int32,System.Boolean}
    typeParameters:
    - id: TSource
    return:
      type: System.Collections.Generic.IEnumerable{{TSource}}
- uid: System.Linq.Enumerable.Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  id: Skip``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Skip<TSource>(IEnumerable<TSource>, Int32)
  name.vb: Skip(Of TSource)(IEnumerable(Of TSource), Int32)
  fullName: System.Linq.Enumerable.Skip<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)
  fullName.vb: System.Linq.Enumerable.Skip(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 678
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TSource> Skip<TSource>(IEnumerable<TSource> source, int count)
    content.vb: Public Shared Function Skip(Of TSource)(source As IEnumerable(Of TSource), count As Integer) As IEnumerable(Of TSource)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: count
      type: System.Int32
    typeParameters:
    - id: TSource
    return:
      type: System.Collections.Generic.IEnumerable{{TSource}}
- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  id: SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  name.vb: SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  fullName: System.Linq.Enumerable.SkipWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullName.vb: System.Linq.Enumerable.SkipWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 696
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TSource> SkipWhile<TSource>(IEnumerable<TSource> source, Func<TSource, bool> predicate)
    content.vb: Public Shared Function SkipWhile(Of TSource)(source As IEnumerable(Of TSource), predicate As Func(Of TSource, Boolean)) As IEnumerable(Of TSource)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: predicate
      type: System.Func{{TSource},System.Boolean}
    typeParameters:
    - id: TSource
    return:
      type: System.Collections.Generic.IEnumerable{{TSource}}
- uid: System.Linq.Enumerable.SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  id: SkipWhile``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32,System.Boolean})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: SkipWhile<TSource>(IEnumerable<TSource>, Func<TSource, Int32, Boolean>)
  name.vb: SkipWhile(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32, Boolean))
  fullName: System.Linq.Enumerable.SkipWhile<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32, System.Boolean>)
  fullName.vb: System.Linq.Enumerable.SkipWhile(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32, System.Boolean))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 713
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TSource> SkipWhile<TSource>(IEnumerable<TSource> source, Func<TSource, int, bool> predicate)
    content.vb: Public Shared Function SkipWhile(Of TSource)(source As IEnumerable(Of TSource), predicate As Func(Of TSource, Integer, Boolean)) As IEnumerable(Of TSource)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: predicate
      type: System.Func{{TSource},System.Int32,System.Boolean}
    typeParameters:
    - id: TSource
    return:
      type: System.Collections.Generic.IEnumerable{{TSource}}
- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  id: Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>)
  name.vb: Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult))
  fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>)
  fullName.vb: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, TInner, TResult))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 732
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TResult> Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter> outer, IEnumerable<TInner> inner, Func<TOuter, TKey> outerKeySelector, Func<TInner, TKey> innerKeySelector, Func<TOuter, TInner, TResult> resultSelector)
    content.vb: Public Shared Function Join(Of TOuter, TInner, TKey, TResult)(outer As IEnumerable(Of TOuter), inner As IEnumerable(Of TInner), outerKeySelector As Func(Of TOuter, TKey), innerKeySelector As Func(Of TInner, TKey), resultSelector As Func(Of TOuter, TInner, TResult)) As IEnumerable(Of TResult)
    parameters:
    - id: outer
      type: System.Collections.Generic.IEnumerable{{TOuter}}
    - id: inner
      type: System.Collections.Generic.IEnumerable{{TInner}}
    - id: outerKeySelector
      type: System.Func{{TOuter},{TKey}}
    - id: innerKeySelector
      type: System.Func{{TInner},{TKey}}
    - id: resultSelector
      type: System.Func{{TOuter},{TInner},{TResult}}
    typeParameters:
    - id: TOuter
    - id: TInner
    - id: TKey
    - id: TResult
    return:
      type: System.Collections.Generic.IEnumerable{{TResult}}
- uid: System.Linq.Enumerable.Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  id: Join``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,``1,``3},System.Collections.Generic.IEqualityComparer{``2})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, TInner, TResult>, IEqualityComparer<TKey>)
  name.vb: Join(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, TInner, TResult), IEqualityComparer(Of TKey))
  fullName: System.Linq.Enumerable.Join<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, TInner, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullName.vb: System.Linq.Enumerable.Join(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, TInner, TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 742
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TResult> Join<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter> outer, IEnumerable<TInner> inner, Func<TOuter, TKey> outerKeySelector, Func<TInner, TKey> innerKeySelector, Func<TOuter, TInner, TResult> resultSelector, IEqualityComparer<TKey> comparer)
    content.vb: Public Shared Function Join(Of TOuter, TInner, TKey, TResult)(outer As IEnumerable(Of TOuter), inner As IEnumerable(Of TInner), outerKeySelector As Func(Of TOuter, TKey), innerKeySelector As Func(Of TInner, TKey), resultSelector As Func(Of TOuter, TInner, TResult), comparer As IEqualityComparer(Of TKey)) As IEnumerable(Of TResult)
    parameters:
    - id: outer
      type: System.Collections.Generic.IEnumerable{{TOuter}}
    - id: inner
      type: System.Collections.Generic.IEnumerable{{TInner}}
    - id: outerKeySelector
      type: System.Func{{TOuter},{TKey}}
    - id: innerKeySelector
      type: System.Func{{TInner},{TKey}}
    - id: resultSelector
      type: System.Func{{TOuter},{TInner},{TResult}}
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
    typeParameters:
    - id: TOuter
    - id: TInner
    - id: TKey
    - id: TResult
    return:
      type: System.Collections.Generic.IEnumerable{{TResult}}
- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  id: GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>)
  name.vb: GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult))
  fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>)
  fullName.vb: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 768
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TResult> GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter> outer, IEnumerable<TInner> inner, Func<TOuter, TKey> outerKeySelector, Func<TInner, TKey> innerKeySelector, Func<TOuter, IEnumerable<TInner>, TResult> resultSelector)
    content.vb: Public Shared Function GroupJoin(Of TOuter, TInner, TKey, TResult)(outer As IEnumerable(Of TOuter), inner As IEnumerable(Of TInner), outerKeySelector As Func(Of TOuter, TKey), innerKeySelector As Func(Of TInner, TKey), resultSelector As Func(Of TOuter, IEnumerable(Of TInner), TResult)) As IEnumerable(Of TResult)
    parameters:
    - id: outer
      type: System.Collections.Generic.IEnumerable{{TOuter}}
    - id: inner
      type: System.Collections.Generic.IEnumerable{{TInner}}
    - id: outerKeySelector
      type: System.Func{{TOuter},{TKey}}
    - id: innerKeySelector
      type: System.Func{{TInner},{TKey}}
    - id: resultSelector
      type: System.Func{{TOuter},System.Collections.Generic.IEnumerable{{TInner}},{TResult}}
    typeParameters:
    - id: TOuter
    - id: TInner
    - id: TKey
    - id: TResult
    return:
      type: System.Collections.Generic.IEnumerable{{TResult}}
- uid: System.Linq.Enumerable.GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  id: GroupJoin``4(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``2},System.Func{``1,``2},System.Func{``0,System.Collections.Generic.IEnumerable{``1},``3},System.Collections.Generic.IEqualityComparer{``2})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter>, IEnumerable<TInner>, Func<TOuter, TKey>, Func<TInner, TKey>, Func<TOuter, IEnumerable<TInner>, TResult>, IEqualityComparer<TKey>)
  name.vb: GroupJoin(Of TOuter, TInner, TKey, TResult)(IEnumerable(Of TOuter), IEnumerable(Of TInner), Func(Of TOuter, TKey), Func(Of TInner, TKey), Func(Of TOuter, IEnumerable(Of TInner), TResult), IEqualityComparer(Of TKey))
  fullName: System.Linq.Enumerable.GroupJoin<TOuter, TInner, TKey, TResult>(System.Collections.Generic.IEnumerable<TOuter>, System.Collections.Generic.IEnumerable<TInner>, System.Func<TOuter, TKey>, System.Func<TInner, TKey>, System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullName.vb: System.Linq.Enumerable.GroupJoin(Of TOuter, TInner, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TOuter), System.Collections.Generic.IEnumerable(Of TInner), System.Func(Of TOuter, TKey), System.Func(Of TInner, TKey), System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 778
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TResult> GroupJoin<TOuter, TInner, TKey, TResult>(IEnumerable<TOuter> outer, IEnumerable<TInner> inner, Func<TOuter, TKey> outerKeySelector, Func<TInner, TKey> innerKeySelector, Func<TOuter, IEnumerable<TInner>, TResult> resultSelector, IEqualityComparer<TKey> comparer)
    content.vb: Public Shared Function GroupJoin(Of TOuter, TInner, TKey, TResult)(outer As IEnumerable(Of TOuter), inner As IEnumerable(Of TInner), outerKeySelector As Func(Of TOuter, TKey), innerKeySelector As Func(Of TInner, TKey), resultSelector As Func(Of TOuter, IEnumerable(Of TInner), TResult), comparer As IEqualityComparer(Of TKey)) As IEnumerable(Of TResult)
    parameters:
    - id: outer
      type: System.Collections.Generic.IEnumerable{{TOuter}}
    - id: inner
      type: System.Collections.Generic.IEnumerable{{TInner}}
    - id: outerKeySelector
      type: System.Func{{TOuter},{TKey}}
    - id: innerKeySelector
      type: System.Func{{TInner},{TKey}}
    - id: resultSelector
      type: System.Func{{TOuter},System.Collections.Generic.IEnumerable{{TInner}},{TResult}}
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
    typeParameters:
    - id: TOuter
    - id: TInner
    - id: TKey
    - id: TResult
    return:
      type: System.Collections.Generic.IEnumerable{{TResult}}
- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  id: OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  name.vb: OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  fullName.vb: System.Linq.Enumerable.OrderBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 797
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IOrderedEnumerable<TSource> OrderBy<TSource, TKey>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector)
    content.vb: Public Shared Function OrderBy(Of TSource, TKey)(source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey)) As IOrderedEnumerable(Of TSource)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
    typeParameters:
    - id: TSource
    - id: TKey
    return:
      type: System.Linq.IOrderedEnumerable{{TSource}}
- uid: System.Linq.Enumerable.OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  id: OrderBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: OrderBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)
  name.vb: OrderBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))
  fullName: System.Linq.Enumerable.OrderBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)
  fullName.vb: System.Linq.Enumerable.OrderBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IComparer(Of TKey))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 802
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IOrderedEnumerable<TSource> OrderBy<TSource, TKey>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, IComparer<TKey> comparer)
    content.vb: Public Shared Function OrderBy(Of TSource, TKey)(source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), comparer As IComparer(Of TKey)) As IOrderedEnumerable(Of TSource)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
    - id: comparer
      type: System.Collections.Generic.IComparer{{TKey}}
    typeParameters:
    - id: TSource
    - id: TKey
    return:
      type: System.Linq.IOrderedEnumerable{{TSource}}
- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  id: OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  name.vb: OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  fullName.vb: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 807
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IOrderedEnumerable<TSource> OrderByDescending<TSource, TKey>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector)
    content.vb: Public Shared Function OrderByDescending(Of TSource, TKey)(source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey)) As IOrderedEnumerable(Of TSource)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
    typeParameters:
    - id: TSource
    - id: TKey
    return:
      type: System.Linq.IOrderedEnumerable{{TSource}}
- uid: System.Linq.Enumerable.OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  id: OrderByDescending``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: OrderByDescending<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)
  name.vb: OrderByDescending(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))
  fullName: System.Linq.Enumerable.OrderByDescending<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)
  fullName.vb: System.Linq.Enumerable.OrderByDescending(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IComparer(Of TKey))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 812
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IOrderedEnumerable<TSource> OrderByDescending<TSource, TKey>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, IComparer<TKey> comparer)
    content.vb: Public Shared Function OrderByDescending(Of TSource, TKey)(source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), comparer As IComparer(Of TKey)) As IOrderedEnumerable(Of TSource)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
    - id: comparer
      type: System.Collections.Generic.IComparer{{TKey}}
    typeParameters:
    - id: TSource
    - id: TKey
    return:
      type: System.Linq.IOrderedEnumerable{{TSource}}
- uid: System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})
  id: ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: ThenBy<TSource, TKey>(IOrderedEnumerable<TSource>, Func<TSource, TKey>)
  name.vb: ThenBy(Of TSource, TKey)(IOrderedEnumerable(Of TSource), Func(Of TSource, TKey))
  fullName: System.Linq.Enumerable.ThenBy<TSource, TKey>(System.Linq.IOrderedEnumerable<TSource>, System.Func<TSource, TKey>)
  fullName.vb: System.Linq.Enumerable.ThenBy(Of TSource, TKey)(System.Linq.IOrderedEnumerable(Of TSource), System.Func(Of TSource, TKey))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 817
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IOrderedEnumerable<TSource> ThenBy<TSource, TKey>(IOrderedEnumerable<TSource> source, Func<TSource, TKey> keySelector)
    content.vb: Public Shared Function ThenBy(Of TSource, TKey)(source As IOrderedEnumerable(Of TSource), keySelector As Func(Of TSource, TKey)) As IOrderedEnumerable(Of TSource)
    parameters:
    - id: source
      type: System.Linq.IOrderedEnumerable{{TSource}}
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
    typeParameters:
    - id: TSource
    - id: TKey
    return:
      type: System.Linq.IOrderedEnumerable{{TSource}}
- uid: System.Linq.Enumerable.ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  id: ThenBy``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: ThenBy<TSource, TKey>(IOrderedEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)
  name.vb: ThenBy(Of TSource, TKey)(IOrderedEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))
  fullName: System.Linq.Enumerable.ThenBy<TSource, TKey>(System.Linq.IOrderedEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)
  fullName.vb: System.Linq.Enumerable.ThenBy(Of TSource, TKey)(System.Linq.IOrderedEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IComparer(Of TKey))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 823
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IOrderedEnumerable<TSource> ThenBy<TSource, TKey>(IOrderedEnumerable<TSource> source, Func<TSource, TKey> keySelector, IComparer<TKey> comparer)
    content.vb: Public Shared Function ThenBy(Of TSource, TKey)(source As IOrderedEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), comparer As IComparer(Of TKey)) As IOrderedEnumerable(Of TSource)
    parameters:
    - id: source
      type: System.Linq.IOrderedEnumerable{{TSource}}
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
    - id: comparer
      type: System.Collections.Generic.IComparer{{TKey}}
    typeParameters:
    - id: TSource
    - id: TKey
    return:
      type: System.Linq.IOrderedEnumerable{{TSource}}
- uid: System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})
  id: ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: ThenByDescending<TSource, TKey>(IOrderedEnumerable<TSource>, Func<TSource, TKey>)
  name.vb: ThenByDescending(Of TSource, TKey)(IOrderedEnumerable(Of TSource), Func(Of TSource, TKey))
  fullName: System.Linq.Enumerable.ThenByDescending<TSource, TKey>(System.Linq.IOrderedEnumerable<TSource>, System.Func<TSource, TKey>)
  fullName.vb: System.Linq.Enumerable.ThenByDescending(Of TSource, TKey)(System.Linq.IOrderedEnumerable(Of TSource), System.Func(Of TSource, TKey))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 829
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IOrderedEnumerable<TSource> ThenByDescending<TSource, TKey>(IOrderedEnumerable<TSource> source, Func<TSource, TKey> keySelector)
    content.vb: Public Shared Function ThenByDescending(Of TSource, TKey)(source As IOrderedEnumerable(Of TSource), keySelector As Func(Of TSource, TKey)) As IOrderedEnumerable(Of TSource)
    parameters:
    - id: source
      type: System.Linq.IOrderedEnumerable{{TSource}}
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
    typeParameters:
    - id: TSource
    - id: TKey
    return:
      type: System.Linq.IOrderedEnumerable{{TSource}}
- uid: System.Linq.Enumerable.ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  id: ThenByDescending``2(System.Linq.IOrderedEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IComparer{``1})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: ThenByDescending<TSource, TKey>(IOrderedEnumerable<TSource>, Func<TSource, TKey>, IComparer<TKey>)
  name.vb: ThenByDescending(Of TSource, TKey)(IOrderedEnumerable(Of TSource), Func(Of TSource, TKey), IComparer(Of TKey))
  fullName: System.Linq.Enumerable.ThenByDescending<TSource, TKey>(System.Linq.IOrderedEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IComparer<TKey>)
  fullName.vb: System.Linq.Enumerable.ThenByDescending(Of TSource, TKey)(System.Linq.IOrderedEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IComparer(Of TKey))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 835
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IOrderedEnumerable<TSource> ThenByDescending<TSource, TKey>(IOrderedEnumerable<TSource> source, Func<TSource, TKey> keySelector, IComparer<TKey> comparer)
    content.vb: Public Shared Function ThenByDescending(Of TSource, TKey)(source As IOrderedEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), comparer As IComparer(Of TKey)) As IOrderedEnumerable(Of TSource)
    parameters:
    - id: source
      type: System.Linq.IOrderedEnumerable{{TSource}}
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
    - id: comparer
      type: System.Collections.Generic.IComparer{{TKey}}
    typeParameters:
    - id: TSource
    - id: TKey
    return:
      type: System.Linq.IOrderedEnumerable{{TSource}}
- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  id: GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  name.vb: GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  fullName.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 841
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<IGrouping<TKey, TSource>> GroupBy<TSource, TKey>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector)
    content.vb: Public Shared Function GroupBy(Of TSource, TKey)(source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey)) As IEnumerable(Of IGrouping(Of TKey, TSource))
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
    typeParameters:
    - id: TSource
    - id: TKey
    return:
      type: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TSource}}}
- uid: System.Linq.Enumerable.GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  id: GroupBy``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: GroupBy<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)
  name.vb: GroupBy(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullName.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 846
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<IGrouping<TKey, TSource>> GroupBy<TSource, TKey>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, IEqualityComparer<TKey> comparer)
    content.vb: Public Shared Function GroupBy(Of TSource, TKey)(source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), comparer As IEqualityComparer(Of TKey)) As IEnumerable(Of IGrouping(Of TKey, TSource))
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
    typeParameters:
    - id: TSource
    - id: TKey
    return:
      type: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TSource}}}
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  id: GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)
  name.vb: GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)
  fullName.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 851
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<IGrouping<TKey, TElement>> GroupBy<TSource, TKey, TElement>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TElement> elementSelector)
    content.vb: Public Shared Function GroupBy(Of TSource, TKey, TElement)(source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TElement)) As IEnumerable(Of IGrouping(Of TKey, TElement))
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
    - id: elementSelector
      type: System.Func{{TSource},{TElement}}
    typeParameters:
    - id: TSource
    - id: TKey
    - id: TElement
    return:
      type: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TElement}}}
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  id: GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: GroupBy<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)
  name.vb: GroupBy(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullName.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 856
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<IGrouping<TKey, TElement>> GroupBy<TSource, TKey, TElement>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TElement> elementSelector, IEqualityComparer<TKey> comparer)
    content.vb: Public Shared Function GroupBy(Of TSource, TKey, TElement)(source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TElement), comparer As IEqualityComparer(Of TKey)) As IEnumerable(Of IGrouping(Of TKey, TElement))
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
    - id: elementSelector
      type: System.Func{{TSource},{TElement}}
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
    typeParameters:
    - id: TSource
    - id: TKey
    - id: TElement
    return:
      type: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TElement}}}
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
  id: GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>)
  name.vb: GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult))
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>)
  fullName.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 861
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TResult> GroupBy<TSource, TKey, TResult>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TKey, IEnumerable<TSource>, TResult> resultSelector)
    content.vb: Public Shared Function GroupBy(Of TSource, TKey, TResult)(source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), resultSelector As Func(Of TKey, IEnumerable(Of TSource), TResult)) As IEnumerable(Of TResult)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
    - id: resultSelector
      type: System.Func{{TKey},System.Collections.Generic.IEnumerable{{TSource}},{TResult}}
    typeParameters:
    - id: TSource
    - id: TKey
    - id: TResult
    return:
      type: System.Collections.Generic.IEnumerable{{TResult}}
- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
  id: GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>)
  name.vb: GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult))
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>)
  fullName.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 866
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TResult> GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TElement> elementSelector, Func<TKey, IEnumerable<TElement>, TResult> resultSelector)
    content.vb: Public Shared Function GroupBy(Of TSource, TKey, TElement, TResult)(source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TElement), resultSelector As Func(Of TKey, IEnumerable(Of TElement), TResult)) As IEnumerable(Of TResult)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
    - id: elementSelector
      type: System.Func{{TSource},{TElement}}
    - id: resultSelector
      type: System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}}
    typeParameters:
    - id: TSource
    - id: TKey
    - id: TElement
    - id: TResult
    return:
      type: System.Collections.Generic.IEnumerable{{TResult}}
- uid: System.Linq.Enumerable.GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
  id: GroupBy``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``1,System.Collections.Generic.IEnumerable{``0},``2},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: GroupBy<TSource, TKey, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TKey, IEnumerable<TSource>, TResult>, IEqualityComparer<TKey>)
  name.vb: GroupBy(Of TSource, TKey, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TKey, IEnumerable(Of TSource), TResult), IEqualityComparer(Of TKey))
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullName.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 871
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TResult> GroupBy<TSource, TKey, TResult>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TKey, IEnumerable<TSource>, TResult> resultSelector, IEqualityComparer<TKey> comparer)
    content.vb: Public Shared Function GroupBy(Of TSource, TKey, TResult)(source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), resultSelector As Func(Of TKey, IEnumerable(Of TSource), TResult), comparer As IEqualityComparer(Of TKey)) As IEnumerable(Of TResult)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
    - id: resultSelector
      type: System.Func{{TKey},System.Collections.Generic.IEnumerable{{TSource}},{TResult}}
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
    typeParameters:
    - id: TSource
    - id: TKey
    - id: TResult
    return:
      type: System.Collections.Generic.IEnumerable{{TResult}}
- uid: System.Linq.Enumerable.GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
  id: GroupBy``4(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Func{``1,System.Collections.Generic.IEnumerable{``2},``3},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, Func<TKey, IEnumerable<TElement>, TResult>, IEqualityComparer<TKey>)
  name.vb: GroupBy(Of TSource, TKey, TElement, TResult)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), Func(Of TKey, IEnumerable(Of TElement), TResult), IEqualityComparer(Of TKey))
  fullName: System.Linq.Enumerable.GroupBy<TSource, TKey, TElement, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullName.vb: System.Linq.Enumerable.GroupBy(Of TSource, TKey, TElement, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult), System.Collections.Generic.IEqualityComparer(Of TKey))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 876
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TResult> GroupBy<TSource, TKey, TElement, TResult>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TElement> elementSelector, Func<TKey, IEnumerable<TElement>, TResult> resultSelector, IEqualityComparer<TKey> comparer)
    content.vb: Public Shared Function GroupBy(Of TSource, TKey, TElement, TResult)(source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TElement), resultSelector As Func(Of TKey, IEnumerable(Of TElement), TResult), comparer As IEqualityComparer(Of TKey)) As IEnumerable(Of TResult)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
    - id: elementSelector
      type: System.Func{{TSource},{TElement}}
    - id: resultSelector
      type: System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}}
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
    typeParameters:
    - id: TSource
    - id: TKey
    - id: TElement
    - id: TResult
    return:
      type: System.Collections.Generic.IEnumerable{{TResult}}
- uid: System.Linq.Enumerable.Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  id: Concat``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Concat<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  name.vb: Concat(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  fullName: System.Linq.Enumerable.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: System.Linq.Enumerable.Concat(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 881
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TSource> Concat<TSource>(IEnumerable<TSource> first, IEnumerable<TSource> second)
    content.vb: Public Shared Function Concat(Of TSource)(first As IEnumerable(Of TSource), second As IEnumerable(Of TSource)) As IEnumerable(Of TSource)
    parameters:
    - id: first
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: second
      type: System.Collections.Generic.IEnumerable{{TSource}}
    typeParameters:
    - id: TSource
    return:
      type: System.Collections.Generic.IEnumerable{{TSource}}
- uid: System.Linq.Enumerable.Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
  id: Zip``3(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Func{``0,``1,``2})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst>, IEnumerable<TSecond>, Func<TFirst, TSecond, TResult>)
  name.vb: Zip(Of TFirst, TSecond, TResult)(IEnumerable(Of TFirst), IEnumerable(Of TSecond), Func(Of TFirst, TSecond, TResult))
  fullName: System.Linq.Enumerable.Zip<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)
  fullName.vb: System.Linq.Enumerable.Zip(Of TFirst, TSecond, TResult)(System.Collections.Generic.IEnumerable(Of TFirst), System.Collections.Generic.IEnumerable(Of TSecond), System.Func(Of TFirst, TSecond, TResult))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 894
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TResult> Zip<TFirst, TSecond, TResult>(IEnumerable<TFirst> first, IEnumerable<TSecond> second, Func<TFirst, TSecond, TResult> resultSelector)
    content.vb: Public Shared Function Zip(Of TFirst, TSecond, TResult)(first As IEnumerable(Of TFirst), second As IEnumerable(Of TSecond), resultSelector As Func(Of TFirst, TSecond, TResult)) As IEnumerable(Of TResult)
    parameters:
    - id: first
      type: System.Collections.Generic.IEnumerable{{TFirst}}
    - id: second
      type: System.Collections.Generic.IEnumerable{{TSecond}}
    - id: resultSelector
      type: System.Func{{TFirst},{TSecond},{TResult}}
    typeParameters:
    - id: TFirst
    - id: TSecond
    - id: TResult
    return:
      type: System.Collections.Generic.IEnumerable{{TResult}}
- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0})
  id: Distinct``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Distinct<TSource>(IEnumerable<TSource>)
  name.vb: Distinct(Of TSource)(IEnumerable(Of TSource))
  fullName: System.Linq.Enumerable.Distinct<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: System.Linq.Enumerable.Distinct(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 911
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TSource> Distinct<TSource>(IEnumerable<TSource> source)
    content.vb: Public Shared Function Distinct(Of TSource)(source As IEnumerable(Of TSource)) As IEnumerable(Of TSource)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    typeParameters:
    - id: TSource
    return:
      type: System.Collections.Generic.IEnumerable{{TSource}}
- uid: System.Linq.Enumerable.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  id: Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Distinct<TSource>(IEnumerable<TSource>, IEqualityComparer<TSource>)
  name.vb: Distinct(Of TSource)(IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  fullName: System.Linq.Enumerable.Distinct<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullName.vb: System.Linq.Enumerable.Distinct(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 917
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TSource> Distinct<TSource>(IEnumerable<TSource> source, IEqualityComparer<TSource> comparer)
    content.vb: Public Shared Function Distinct(Of TSource)(source As IEnumerable(Of TSource), comparer As IEqualityComparer(Of TSource)) As IEnumerable(Of TSource)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{TSource}}
    typeParameters:
    - id: TSource
    return:
      type: System.Collections.Generic.IEnumerable{{TSource}}
- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  id: Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  name.vb: Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  fullName: System.Linq.Enumerable.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: System.Linq.Enumerable.Union(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 930
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TSource> Union<TSource>(IEnumerable<TSource> first, IEnumerable<TSource> second)
    content.vb: Public Shared Function Union(Of TSource)(first As IEnumerable(Of TSource), second As IEnumerable(Of TSource)) As IEnumerable(Of TSource)
    parameters:
    - id: first
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: second
      type: System.Collections.Generic.IEnumerable{{TSource}}
    typeParameters:
    - id: TSource
    return:
      type: System.Collections.Generic.IEnumerable{{TSource}}
- uid: System.Linq.Enumerable.Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  id: Union``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Union<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  name.vb: Union(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  fullName: System.Linq.Enumerable.Union<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullName.vb: System.Linq.Enumerable.Union(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 937
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TSource> Union<TSource>(IEnumerable<TSource> first, IEnumerable<TSource> second, IEqualityComparer<TSource> comparer)
    content.vb: Public Shared Function Union(Of TSource)(first As IEnumerable(Of TSource), second As IEnumerable(Of TSource), comparer As IEqualityComparer(Of TSource)) As IEnumerable(Of TSource)
    parameters:
    - id: first
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: second
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{TSource}}
    typeParameters:
    - id: TSource
    return:
      type: System.Collections.Generic.IEnumerable{{TSource}}
- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  id: Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  name.vb: Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  fullName: System.Linq.Enumerable.Intersect<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: System.Linq.Enumerable.Intersect(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 953
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TSource> Intersect<TSource>(IEnumerable<TSource> first, IEnumerable<TSource> second)
    content.vb: Public Shared Function Intersect(Of TSource)(first As IEnumerable(Of TSource), second As IEnumerable(Of TSource)) As IEnumerable(Of TSource)
    parameters:
    - id: first
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: second
      type: System.Collections.Generic.IEnumerable{{TSource}}
    typeParameters:
    - id: TSource
    return:
      type: System.Collections.Generic.IEnumerable{{TSource}}
- uid: System.Linq.Enumerable.Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  id: Intersect``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Intersect<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  name.vb: Intersect(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  fullName: System.Linq.Enumerable.Intersect<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullName.vb: System.Linq.Enumerable.Intersect(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 960
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TSource> Intersect<TSource>(IEnumerable<TSource> first, IEnumerable<TSource> second, IEqualityComparer<TSource> comparer)
    content.vb: Public Shared Function Intersect(Of TSource)(first As IEnumerable(Of TSource), second As IEnumerable(Of TSource), comparer As IEqualityComparer(Of TSource)) As IEnumerable(Of TSource)
    parameters:
    - id: first
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: second
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{TSource}}
    typeParameters:
    - id: TSource
    return:
      type: System.Collections.Generic.IEnumerable{{TSource}}
- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  id: Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  name.vb: Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  fullName: System.Linq.Enumerable.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: System.Linq.Enumerable.Except(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 975
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TSource> Except<TSource>(IEnumerable<TSource> first, IEnumerable<TSource> second)
    content.vb: Public Shared Function Except(Of TSource)(first As IEnumerable(Of TSource), second As IEnumerable(Of TSource)) As IEnumerable(Of TSource)
    parameters:
    - id: first
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: second
      type: System.Collections.Generic.IEnumerable{{TSource}}
    typeParameters:
    - id: TSource
    return:
      type: System.Collections.Generic.IEnumerable{{TSource}}
- uid: System.Linq.Enumerable.Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  id: Except``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Except<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  name.vb: Except(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  fullName: System.Linq.Enumerable.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullName.vb: System.Linq.Enumerable.Except(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 982
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TSource> Except<TSource>(IEnumerable<TSource> first, IEnumerable<TSource> second, IEqualityComparer<TSource> comparer)
    content.vb: Public Shared Function Except(Of TSource)(first As IEnumerable(Of TSource), second As IEnumerable(Of TSource), comparer As IEqualityComparer(Of TSource)) As IEnumerable(Of TSource)
    parameters:
    - id: first
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: second
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{TSource}}
    typeParameters:
    - id: TSource
    return:
      type: System.Collections.Generic.IEnumerable{{TSource}}
- uid: System.Linq.Enumerable.Reverse``1(System.Collections.Generic.IEnumerable{``0})
  id: Reverse``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Reverse<TSource>(IEnumerable<TSource>)
  name.vb: Reverse(Of TSource)(IEnumerable(Of TSource))
  fullName: System.Linq.Enumerable.Reverse<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: System.Linq.Enumerable.Reverse(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 997
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TSource> Reverse<TSource>(IEnumerable<TSource> source)
    content.vb: Public Shared Function Reverse(Of TSource)(source As IEnumerable(Of TSource)) As IEnumerable(Of TSource)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    typeParameters:
    - id: TSource
    return:
      type: System.Collections.Generic.IEnumerable{{TSource}}
- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  id: SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>)
  name.vb: SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource))
  fullName: System.Linq.Enumerable.SequenceEqual<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: System.Linq.Enumerable.SequenceEqual(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1009
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static bool SequenceEqual<TSource>(IEnumerable<TSource> first, IEnumerable<TSource> second)
    content.vb: Public Shared Function SequenceEqual(Of TSource)(first As IEnumerable(Of TSource), second As IEnumerable(Of TSource)) As Boolean
    parameters:
    - id: first
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: second
      type: System.Collections.Generic.IEnumerable{{TSource}}
    typeParameters:
    - id: TSource
    return:
      type: System.Boolean
- uid: System.Linq.Enumerable.SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  id: SequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: SequenceEqual<TSource>(IEnumerable<TSource>, IEnumerable<TSource>, IEqualityComparer<TSource>)
  name.vb: SequenceEqual(Of TSource)(IEnumerable(Of TSource), IEnumerable(Of TSource), IEqualityComparer(Of TSource))
  fullName: System.Linq.Enumerable.SequenceEqual<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEqualityComparer<TSource>)
  fullName.vb: System.Linq.Enumerable.SequenceEqual(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IEqualityComparer(Of TSource))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1014
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static bool SequenceEqual<TSource>(IEnumerable<TSource> first, IEnumerable<TSource> second, IEqualityComparer<TSource> comparer)
    content.vb: Public Shared Function SequenceEqual(Of TSource)(first As IEnumerable(Of TSource), second As IEnumerable(Of TSource), comparer As IEqualityComparer(Of TSource)) As Boolean
    parameters:
    - id: first
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: second
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{TSource}}
    typeParameters:
    - id: TSource
    return:
      type: System.Boolean
- uid: System.Linq.Enumerable.AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
  id: AsEnumerable``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: AsEnumerable<TSource>(IEnumerable<TSource>)
  name.vb: AsEnumerable(Of TSource)(IEnumerable(Of TSource))
  fullName: System.Linq.Enumerable.AsEnumerable<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: System.Linq.Enumerable.AsEnumerable(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1031
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TSource> AsEnumerable<TSource>(IEnumerable<TSource> source)
    content.vb: Public Shared Function AsEnumerable(Of TSource)(source As IEnumerable(Of TSource)) As IEnumerable(Of TSource)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    typeParameters:
    - id: TSource
    return:
      type: System.Collections.Generic.IEnumerable{{TSource}}
- uid: System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})
  id: ToArray``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: ToArray<TSource>(IEnumerable<TSource>)
  name.vb: ToArray(Of TSource)(IEnumerable(Of TSource))
  fullName: System.Linq.Enumerable.ToArray<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: System.Linq.Enumerable.ToArray(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1036
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static TSource[] ToArray<TSource>(IEnumerable<TSource> source)
    content.vb: Public Shared Function ToArray(Of TSource)(source As IEnumerable(Of TSource)) As TSource()
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    typeParameters:
    - id: TSource
    return:
      type: '{TSource}[]'
- uid: System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})
  id: ToList``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: ToList<TSource>(IEnumerable<TSource>)
  name.vb: ToList(Of TSource)(IEnumerable(Of TSource))
  fullName: System.Linq.Enumerable.ToList<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: System.Linq.Enumerable.ToList(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1042
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static List<TSource> ToList<TSource>(IEnumerable<TSource> source)
    content.vb: Public Shared Function ToList(Of TSource)(source As IEnumerable(Of TSource)) As List(Of TSource)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    typeParameters:
    - id: TSource
    return:
      type: System.Collections.Generic.List{{TSource}}
- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  id: ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  name.vb: ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  fullName.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1048
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static Dictionary<TKey, TSource> ToDictionary<TSource, TKey>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector)
    content.vb: Public Shared Function ToDictionary(Of TSource, TKey)(source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey)) As Dictionary(Of TKey, TSource)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
    typeParameters:
    - id: TSource
    - id: TKey
    return:
      type: System.Collections.Generic.Dictionary{{TKey},{TSource}}
- uid: System.Linq.Enumerable.ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  id: ToDictionary``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: ToDictionary<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)
  name.vb: ToDictionary(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullName.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1053
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static Dictionary<TKey, TSource> ToDictionary<TSource, TKey>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, IEqualityComparer<TKey> comparer)
    content.vb: Public Shared Function ToDictionary(Of TSource, TKey)(source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), comparer As IEqualityComparer(Of TKey)) As Dictionary(Of TKey, TSource)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
    typeParameters:
    - id: TSource
    - id: TKey
    return:
      type: System.Collections.Generic.Dictionary{{TKey},{TSource}}
- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  id: ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)
  name.vb: ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))
  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)
  fullName.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1058
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static Dictionary<TKey, TElement> ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TElement> elementSelector)
    content.vb: Public Shared Function ToDictionary(Of TSource, TKey, TElement)(source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TElement)) As Dictionary(Of TKey, TElement)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
    - id: elementSelector
      type: System.Func{{TSource},{TElement}}
    typeParameters:
    - id: TSource
    - id: TKey
    - id: TElement
    return:
      type: System.Collections.Generic.Dictionary{{TKey},{TElement}}
- uid: System.Linq.Enumerable.ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  id: ToDictionary``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)
  name.vb: ToDictionary(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))
  fullName: System.Linq.Enumerable.ToDictionary<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullName.vb: System.Linq.Enumerable.ToDictionary(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1063
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static Dictionary<TKey, TElement> ToDictionary<TSource, TKey, TElement>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TElement> elementSelector, IEqualityComparer<TKey> comparer)
    content.vb: Public Shared Function ToDictionary(Of TSource, TKey, TElement)(source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TElement), comparer As IEqualityComparer(Of TKey)) As Dictionary(Of TKey, TElement)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
    - id: elementSelector
      type: System.Func{{TSource},{TElement}}
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
    typeParameters:
    - id: TSource
    - id: TKey
    - id: TElement
    return:
      type: System.Collections.Generic.Dictionary{{TKey},{TElement}}
- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  id: ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>)
  name.vb: ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey))
  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>)
  fullName.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1073
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static ILookup<TKey, TSource> ToLookup<TSource, TKey>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector)
    content.vb: Public Shared Function ToLookup(Of TSource, TKey)(source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey)) As ILookup(Of TKey, TSource)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
    typeParameters:
    - id: TSource
    - id: TKey
    return:
      type: System.Linq.ILookup{{TKey},{TSource}}
- uid: System.Linq.Enumerable.ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  id: ToLookup``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: ToLookup<TSource, TKey>(IEnumerable<TSource>, Func<TSource, TKey>, IEqualityComparer<TKey>)
  name.vb: ToLookup(Of TSource, TKey)(IEnumerable(Of TSource), Func(Of TSource, TKey), IEqualityComparer(Of TKey))
  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullName.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Collections.Generic.IEqualityComparer(Of TKey))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1078
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static ILookup<TKey, TSource> ToLookup<TSource, TKey>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, IEqualityComparer<TKey> comparer)
    content.vb: Public Shared Function ToLookup(Of TSource, TKey)(source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), comparer As IEqualityComparer(Of TKey)) As ILookup(Of TKey, TSource)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
    typeParameters:
    - id: TSource
    - id: TKey
    return:
      type: System.Linq.ILookup{{TKey},{TSource}}
- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  id: ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>)
  name.vb: ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement))
  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>)
  fullName.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1083
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static ILookup<TKey, TElement> ToLookup<TSource, TKey, TElement>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TElement> elementSelector)
    content.vb: Public Shared Function ToLookup(Of TSource, TKey, TElement)(source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TElement)) As ILookup(Of TKey, TElement)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
    - id: elementSelector
      type: System.Func{{TSource},{TElement}}
    typeParameters:
    - id: TSource
    - id: TKey
    - id: TElement
    return:
      type: System.Linq.ILookup{{TKey},{TElement}}
- uid: System.Linq.Enumerable.ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  id: ToLookup``3(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: ToLookup<TSource, TKey, TElement>(IEnumerable<TSource>, Func<TSource, TKey>, Func<TSource, TElement>, IEqualityComparer<TKey>)
  name.vb: ToLookup(Of TSource, TKey, TElement)(IEnumerable(Of TSource), Func(Of TSource, TKey), Func(Of TSource, TElement), IEqualityComparer(Of TKey))
  fullName: System.Linq.Enumerable.ToLookup<TSource, TKey, TElement>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TKey>, System.Func<TSource, TElement>, System.Collections.Generic.IEqualityComparer<TKey>)
  fullName.vb: System.Linq.Enumerable.ToLookup(Of TSource, TKey, TElement)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TKey), System.Func(Of TSource, TElement), System.Collections.Generic.IEqualityComparer(Of TKey))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1088
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static ILookup<TKey, TElement> ToLookup<TSource, TKey, TElement>(IEnumerable<TSource> source, Func<TSource, TKey> keySelector, Func<TSource, TElement> elementSelector, IEqualityComparer<TKey> comparer)
    content.vb: Public Shared Function ToLookup(Of TSource, TKey, TElement)(source As IEnumerable(Of TSource), keySelector As Func(Of TSource, TKey), elementSelector As Func(Of TSource, TElement), comparer As IEqualityComparer(Of TKey)) As ILookup(Of TKey, TElement)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: keySelector
      type: System.Func{{TSource},{TKey}}
    - id: elementSelector
      type: System.Func{{TSource},{TElement}}
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{TKey}}
    typeParameters:
    - id: TSource
    - id: TKey
    - id: TElement
    return:
      type: System.Linq.ILookup{{TKey},{TElement}}
- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
  id: DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>)
  name.vb: DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource))
  fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1093
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TSource> DefaultIfEmpty<TSource>(IEnumerable<TSource> source)
    content.vb: Public Shared Function DefaultIfEmpty(Of TSource)(source As IEnumerable(Of TSource)) As IEnumerable(Of TSource)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    typeParameters:
    - id: TSource
    return:
      type: System.Collections.Generic.IEnumerable{{TSource}}
- uid: System.Linq.Enumerable.DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
  id: DefaultIfEmpty``1(System.Collections.Generic.IEnumerable{``0},``0)
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: DefaultIfEmpty<TSource>(IEnumerable<TSource>, TSource)
  name.vb: DefaultIfEmpty(Of TSource)(IEnumerable(Of TSource), TSource)
  fullName: System.Linq.Enumerable.DefaultIfEmpty<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)
  fullName.vb: System.Linq.Enumerable.DefaultIfEmpty(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1098
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TSource> DefaultIfEmpty<TSource>(IEnumerable<TSource> source, TSource defaultValue)
    content.vb: Public Shared Function DefaultIfEmpty(Of TSource)(source As IEnumerable(Of TSource), defaultValue As TSource) As IEnumerable(Of TSource)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: defaultValue
      type: '{TSource}'
    typeParameters:
    - id: TSource
    return:
      type: System.Collections.Generic.IEnumerable{{TSource}}
- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  id: OfType``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: OfType<TResult>(IEnumerable)
  name.vb: OfType(Of TResult)(IEnumerable)
  fullName: System.Linq.Enumerable.OfType<TResult>(System.Collections.IEnumerable)
  fullName.vb: System.Linq.Enumerable.OfType(Of TResult)(System.Collections.IEnumerable)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1122
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TResult> OfType<TResult>(IEnumerable source)
    content.vb: Public Shared Function OfType(Of TResult)(source As IEnumerable) As IEnumerable(Of TResult)
    parameters:
    - id: source
      type: System.Collections.IEnumerable
    typeParameters:
    - id: TResult
    return:
      type: System.Collections.Generic.IEnumerable{{TResult}}
- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  id: Cast``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Cast<TResult>(IEnumerable)
  name.vb: Cast(Of TResult)(IEnumerable)
  fullName: System.Linq.Enumerable.Cast<TResult>(System.Collections.IEnumerable)
  fullName.vb: System.Linq.Enumerable.Cast(Of TResult)(System.Collections.IEnumerable)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1136
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TResult> Cast<TResult>(IEnumerable source)
    content.vb: Public Shared Function Cast(Of TResult)(source As IEnumerable) As IEnumerable(Of TResult)
    parameters:
    - id: source
      type: System.Collections.IEnumerable
    typeParameters:
    - id: TResult
    return:
      type: System.Collections.Generic.IEnumerable{{TResult}}
- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0})
  id: First``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: First<TSource>(IEnumerable<TSource>)
  name.vb: First(Of TSource)(IEnumerable(Of TSource))
  fullName: System.Linq.Enumerable.First<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: System.Linq.Enumerable.First(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1149
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static TSource First<TSource>(IEnumerable<TSource> source)
    content.vb: Public Shared Function First(Of TSource)(source As IEnumerable(Of TSource)) As TSource
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    typeParameters:
    - id: TSource
    return:
      type: '{TSource}'
- uid: System.Linq.Enumerable.First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  id: First``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: First<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  name.vb: First(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  fullName: System.Linq.Enumerable.First<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullName.vb: System.Linq.Enumerable.First(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1167
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static TSource First<TSource>(IEnumerable<TSource> source, Func<TSource, bool> predicate)
    content.vb: Public Shared Function First(Of TSource)(source As IEnumerable(Of TSource), predicate As Func(Of TSource, Boolean)) As TSource
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: predicate
      type: System.Func{{TSource},System.Boolean}
    typeParameters:
    - id: TSource
    return:
      type: '{TSource}'
- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  id: FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: FirstOrDefault<TSource>(IEnumerable<TSource>)
  name.vb: FirstOrDefault(Of TSource)(IEnumerable(Of TSource))
  fullName: System.Linq.Enumerable.FirstOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: System.Linq.Enumerable.FirstOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1178
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static TSource FirstOrDefault<TSource>(IEnumerable<TSource> source)
    content.vb: Public Shared Function FirstOrDefault(Of TSource)(source As IEnumerable(Of TSource)) As TSource
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    typeParameters:
    - id: TSource
    return:
      type: '{TSource}'
- uid: System.Linq.Enumerable.FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  id: FirstOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: FirstOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  name.vb: FirstOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  fullName: System.Linq.Enumerable.FirstOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullName.vb: System.Linq.Enumerable.FirstOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1196
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static TSource FirstOrDefault<TSource>(IEnumerable<TSource> source, Func<TSource, bool> predicate)
    content.vb: Public Shared Function FirstOrDefault(Of TSource)(source As IEnumerable(Of TSource), predicate As Func(Of TSource, Boolean)) As TSource
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: predicate
      type: System.Func{{TSource},System.Boolean}
    typeParameters:
    - id: TSource
    return:
      type: '{TSource}'
- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0})
  id: Last``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Last<TSource>(IEnumerable<TSource>)
  name.vb: Last(Of TSource)(IEnumerable(Of TSource))
  fullName: System.Linq.Enumerable.Last<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: System.Linq.Enumerable.Last(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1207
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static TSource Last<TSource>(IEnumerable<TSource> source)
    content.vb: Public Shared Function Last(Of TSource)(source As IEnumerable(Of TSource)) As TSource
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    typeParameters:
    - id: TSource
    return:
      type: '{TSource}'
- uid: System.Linq.Enumerable.Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  id: Last``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Last<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  name.vb: Last(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  fullName: System.Linq.Enumerable.Last<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullName.vb: System.Linq.Enumerable.Last(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1234
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static TSource Last<TSource>(IEnumerable<TSource> source, Func<TSource, bool> predicate)
    content.vb: Public Shared Function Last(Of TSource)(source As IEnumerable(Of TSource), predicate As Func(Of TSource, Boolean)) As TSource
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: predicate
      type: System.Func{{TSource},System.Boolean}
    typeParameters:
    - id: TSource
    return:
      type: '{TSource}'
- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  id: LastOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: LastOrDefault<TSource>(IEnumerable<TSource>)
  name.vb: LastOrDefault(Of TSource)(IEnumerable(Of TSource))
  fullName: System.Linq.Enumerable.LastOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: System.Linq.Enumerable.LastOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1252
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static TSource LastOrDefault<TSource>(IEnumerable<TSource> source)
    content.vb: Public Shared Function LastOrDefault(Of TSource)(source As IEnumerable(Of TSource)) As TSource
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    typeParameters:
    - id: TSource
    return:
      type: '{TSource}'
- uid: System.Linq.Enumerable.LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  id: LastOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: LastOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  name.vb: LastOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  fullName: System.Linq.Enumerable.LastOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullName.vb: System.Linq.Enumerable.LastOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1279
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static TSource LastOrDefault<TSource>(IEnumerable<TSource> source, Func<TSource, bool> predicate)
    content.vb: Public Shared Function LastOrDefault(Of TSource)(source As IEnumerable(Of TSource), predicate As Func(Of TSource, Boolean)) As TSource
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: predicate
      type: System.Func{{TSource},System.Boolean}
    typeParameters:
    - id: TSource
    return:
      type: '{TSource}'
- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0})
  id: Single``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Single<TSource>(IEnumerable<TSource>)
  name.vb: Single(Of TSource)(IEnumerable(Of TSource))
  fullName: System.Linq.Enumerable.Single<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: System.Linq.Enumerable.Single(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1294
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static TSource Single<TSource>(IEnumerable<TSource> source)
    content.vb: Public Shared Function Single(Of TSource)(source As IEnumerable(Of TSource)) As TSource
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    typeParameters:
    - id: TSource
    return:
      type: '{TSource}'
- uid: System.Linq.Enumerable.Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  id: Single``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Single<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  name.vb: Single(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  fullName: System.Linq.Enumerable.Single<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullName.vb: System.Linq.Enumerable.Single(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1318
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static TSource Single<TSource>(IEnumerable<TSource> source, Func<TSource, bool> predicate)
    content.vb: Public Shared Function Single(Of TSource)(source As IEnumerable(Of TSource), predicate As Func(Of TSource, Boolean)) As TSource
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: predicate
      type: System.Func{{TSource},System.Boolean}
    typeParameters:
    - id: TSource
    return:
      type: '{TSource}'
- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  id: SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: SingleOrDefault<TSource>(IEnumerable<TSource>)
  name.vb: SingleOrDefault(Of TSource)(IEnumerable(Of TSource))
  fullName: System.Linq.Enumerable.SingleOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: System.Linq.Enumerable.SingleOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1340
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static TSource SingleOrDefault<TSource>(IEnumerable<TSource> source)
    content.vb: Public Shared Function SingleOrDefault(Of TSource)(source As IEnumerable(Of TSource)) As TSource
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    typeParameters:
    - id: TSource
    return:
      type: '{TSource}'
- uid: System.Linq.Enumerable.SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  id: SingleOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: SingleOrDefault<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  name.vb: SingleOrDefault(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  fullName: System.Linq.Enumerable.SingleOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullName.vb: System.Linq.Enumerable.SingleOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1364
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static TSource SingleOrDefault<TSource>(IEnumerable<TSource> source, Func<TSource, bool> predicate)
    content.vb: Public Shared Function SingleOrDefault(Of TSource)(source As IEnumerable(Of TSource), predicate As Func(Of TSource, Boolean)) As TSource
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: predicate
      type: System.Func{{TSource},System.Boolean}
    typeParameters:
    - id: TSource
    return:
      type: '{TSource}'
- uid: System.Linq.Enumerable.ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  id: ElementAt``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: ElementAt<TSource>(IEnumerable<TSource>, Int32)
  name.vb: ElementAt(Of TSource)(IEnumerable(Of TSource), Int32)
  fullName: System.Linq.Enumerable.ElementAt<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)
  fullName.vb: System.Linq.Enumerable.ElementAt(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1386
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static TSource ElementAt<TSource>(IEnumerable<TSource> source, int index)
    content.vb: Public Shared Function ElementAt(Of TSource)(source As IEnumerable(Of TSource), index As Integer) As TSource
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: index
      type: System.Int32
    typeParameters:
    - id: TSource
    return:
      type: '{TSource}'
- uid: System.Linq.Enumerable.ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  id: ElementAtOrDefault``1(System.Collections.Generic.IEnumerable{``0},System.Int32)
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: ElementAtOrDefault<TSource>(IEnumerable<TSource>, Int32)
  name.vb: ElementAtOrDefault(Of TSource)(IEnumerable(Of TSource), Int32)
  fullName: System.Linq.Enumerable.ElementAtOrDefault<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Int32)
  fullName.vb: System.Linq.Enumerable.ElementAtOrDefault(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1403
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static TSource ElementAtOrDefault<TSource>(IEnumerable<TSource> source, int index)
    content.vb: Public Shared Function ElementAtOrDefault(Of TSource)(source As IEnumerable(Of TSource), index As Integer) As TSource
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: index
      type: System.Int32
    typeParameters:
    - id: TSource
    return:
      type: '{TSource}'
- uid: System.Linq.Enumerable.Range(System.Int32,System.Int32)
  id: Range(System.Int32,System.Int32)
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Range(Int32, Int32)
  fullName: System.Linq.Enumerable.Range(System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1429
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<int> Range(int start, int count)
    content.vb: Public Shared Function Range(start As Integer, count As Integer) As IEnumerable(Of Integer)
    parameters:
    - id: start
      type: System.Int32
    - id: count
      type: System.Int32
    return:
      type: System.Collections.Generic.IEnumerable{System.Int32}
- uid: System.Linq.Enumerable.Repeat``1(``0,System.Int32)
  id: Repeat``1(``0,System.Int32)
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Repeat<TResult>(TResult, Int32)
  name.vb: Repeat(Of TResult)(TResult, Int32)
  fullName: System.Linq.Enumerable.Repeat<TResult>(TResult, System.Int32)
  fullName.vb: System.Linq.Enumerable.Repeat(Of TResult)(TResult, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1441
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TResult> Repeat<TResult>(TResult element, int count)
    content.vb: Public Shared Function Repeat(Of TResult)(element As TResult, count As Integer) As IEnumerable(Of TResult)
    parameters:
    - id: element
      type: '{TResult}'
    - id: count
      type: System.Int32
    typeParameters:
    - id: TResult
    return:
      type: System.Collections.Generic.IEnumerable{{TResult}}
- uid: System.Linq.Enumerable.Empty``1
  id: Empty``1
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Empty<TResult>()
  name.vb: Empty(Of TResult)()
  fullName: System.Linq.Enumerable.Empty<TResult>()
  fullName.vb: System.Linq.Enumerable.Empty(Of TResult)()
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1452
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static IEnumerable<TResult> Empty<TResult>()
    content.vb: Public Shared Function Empty(Of TResult) As IEnumerable(Of TResult)
    typeParameters:
    - id: TResult
    return:
      type: System.Collections.Generic.IEnumerable{{TResult}}
- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0})
  id: Any``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Any<TSource>(IEnumerable<TSource>)
  name.vb: Any(Of TSource)(IEnumerable(Of TSource))
  fullName: System.Linq.Enumerable.Any<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: System.Linq.Enumerable.Any(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1457
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static bool Any<TSource>(IEnumerable<TSource> source)
    content.vb: Public Shared Function Any(Of TSource)(source As IEnumerable(Of TSource)) As Boolean
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    typeParameters:
    - id: TSource
    return:
      type: System.Boolean
- uid: System.Linq.Enumerable.Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  id: Any``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Any<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  name.vb: Any(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  fullName: System.Linq.Enumerable.Any<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullName.vb: System.Linq.Enumerable.Any(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1466
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static bool Any<TSource>(IEnumerable<TSource> source, Func<TSource, bool> predicate)
    content.vb: Public Shared Function Any(Of TSource)(source As IEnumerable(Of TSource), predicate As Func(Of TSource, Boolean)) As Boolean
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: predicate
      type: System.Func{{TSource},System.Boolean}
    typeParameters:
    - id: TSource
    return:
      type: System.Boolean
- uid: System.Linq.Enumerable.All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  id: All``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: All<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  name.vb: All(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  fullName: System.Linq.Enumerable.All<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullName.vb: System.Linq.Enumerable.All(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1477
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static bool All<TSource>(IEnumerable<TSource> source, Func<TSource, bool> predicate)
    content.vb: Public Shared Function All(Of TSource)(source As IEnumerable(Of TSource), predicate As Func(Of TSource, Boolean)) As Boolean
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: predicate
      type: System.Func{{TSource},System.Boolean}
    typeParameters:
    - id: TSource
    return:
      type: System.Boolean
- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0})
  id: Count``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Count<TSource>(IEnumerable<TSource>)
  name.vb: Count(Of TSource)(IEnumerable(Of TSource))
  fullName: System.Linq.Enumerable.Count<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: System.Linq.Enumerable.Count(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1488
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static int Count<TSource>(IEnumerable<TSource> source)
    content.vb: Public Shared Function Count(Of TSource)(source As IEnumerable(Of TSource)) As Integer
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    typeParameters:
    - id: TSource
    return:
      type: System.Int32
- uid: System.Linq.Enumerable.Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  id: Count``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Count<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  name.vb: Count(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  fullName: System.Linq.Enumerable.Count<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullName.vb: System.Linq.Enumerable.Count(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1506
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static int Count<TSource>(IEnumerable<TSource> source, Func<TSource, bool> predicate)
    content.vb: Public Shared Function Count(Of TSource)(source As IEnumerable(Of TSource), predicate As Func(Of TSource, Boolean)) As Integer
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: predicate
      type: System.Func{{TSource},System.Boolean}
    typeParameters:
    - id: TSource
    return:
      type: System.Int32
- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0})
  id: LongCount``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: LongCount<TSource>(IEnumerable<TSource>)
  name.vb: LongCount(Of TSource)(IEnumerable(Of TSource))
  fullName: System.Linq.Enumerable.LongCount<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: System.Linq.Enumerable.LongCount(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1521
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static long LongCount<TSource>(IEnumerable<TSource> source)
    content.vb: Public Shared Function LongCount(Of TSource)(source As IEnumerable(Of TSource)) As Long
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    typeParameters:
    - id: TSource
    return:
      type: System.Int64
- uid: System.Linq.Enumerable.LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  id: LongCount``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: LongCount<TSource>(IEnumerable<TSource>, Func<TSource, Boolean>)
  name.vb: LongCount(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Boolean))
  fullName: System.Linq.Enumerable.LongCount<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Boolean>)
  fullName.vb: System.Linq.Enumerable.LongCount(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Boolean))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1535
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static long LongCount<TSource>(IEnumerable<TSource> source, Func<TSource, bool> predicate)
    content.vb: Public Shared Function LongCount(Of TSource)(source As IEnumerable(Of TSource), predicate As Func(Of TSource, Boolean)) As Long
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: predicate
      type: System.Func{{TSource},System.Boolean}
    typeParameters:
    - id: TSource
    return:
      type: System.Int64
- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
  id: Contains``1(System.Collections.Generic.IEnumerable{``0},``0)
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Contains<TSource>(IEnumerable<TSource>, TSource)
  name.vb: Contains(Of TSource)(IEnumerable(Of TSource), TSource)
  fullName: System.Linq.Enumerable.Contains<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)
  fullName.vb: System.Linq.Enumerable.Contains(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource)
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1550
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static bool Contains<TSource>(IEnumerable<TSource> source, TSource value)
    content.vb: Public Shared Function Contains(Of TSource)(source As IEnumerable(Of TSource), value As TSource) As Boolean
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: value
      type: '{TSource}'
    typeParameters:
    - id: TSource
    return:
      type: System.Boolean
- uid: System.Linq.Enumerable.Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  id: Contains``1(System.Collections.Generic.IEnumerable{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Contains<TSource>(IEnumerable<TSource>, TSource, IEqualityComparer<TSource>)
  name.vb: Contains(Of TSource)(IEnumerable(Of TSource), TSource, IEqualityComparer(Of TSource))
  fullName: System.Linq.Enumerable.Contains<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource, System.Collections.Generic.IEqualityComparer<TSource>)
  fullName.vb: System.Linq.Enumerable.Contains(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), TSource, System.Collections.Generic.IEqualityComparer(Of TSource))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1557
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static bool Contains<TSource>(IEnumerable<TSource> source, TSource value, IEqualityComparer<TSource> comparer)
    content.vb: Public Shared Function Contains(Of TSource)(source As IEnumerable(Of TSource), value As TSource, comparer As IEqualityComparer(Of TSource)) As Boolean
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: value
      type: '{TSource}'
    - id: comparer
      type: System.Collections.Generic.IEqualityComparer{{TSource}}
    typeParameters:
    - id: TSource
    return:
      type: System.Boolean
- uid: System.Linq.Enumerable.Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
  id: Aggregate``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,``0})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Aggregate<TSource>(IEnumerable<TSource>, Func<TSource, TSource, TSource>)
  name.vb: Aggregate(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, TSource, TSource))
  fullName: System.Linq.Enumerable.Aggregate<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TSource>)
  fullName.vb: System.Linq.Enumerable.Aggregate(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TSource, TSource))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1566
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static TSource Aggregate<TSource>(IEnumerable<TSource> source, Func<TSource, TSource, TSource> func)
    content.vb: Public Shared Function Aggregate(Of TSource)(source As IEnumerable(Of TSource), func As Func(Of TSource, TSource, TSource)) As TSource
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: func
      type: System.Func{{TSource},{TSource},{TSource}}
    typeParameters:
    - id: TSource
    return:
      type: '{TSource}'
- uid: System.Linq.Enumerable.Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
  id: Aggregate``2(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Aggregate<TSource, TAccumulate>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>)
  name.vb: Aggregate(Of TSource, TAccumulate)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate))
  fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate>(System.Collections.Generic.IEnumerable<TSource>, TAccumulate, System.Func<TAccumulate, TSource, TAccumulate>)
  fullName.vb: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate)(System.Collections.Generic.IEnumerable(Of TSource), TAccumulate, System.Func(Of TAccumulate, TSource, TAccumulate))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1579
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static TAccumulate Aggregate<TSource, TAccumulate>(IEnumerable<TSource> source, TAccumulate seed, Func<TAccumulate, TSource, TAccumulate> func)
    content.vb: Public Shared Function Aggregate(Of TSource, TAccumulate)(source As IEnumerable(Of TSource), seed As TAccumulate, func As Func(Of TAccumulate, TSource, TAccumulate)) As TAccumulate
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: seed
      type: '{TAccumulate}'
    - id: func
      type: System.Func{{TAccumulate},{TSource},{TAccumulate}}
    typeParameters:
    - id: TSource
    - id: TAccumulate
    return:
      type: '{TAccumulate}'
- uid: System.Linq.Enumerable.Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
  id: Aggregate``3(System.Collections.Generic.IEnumerable{``0},``1,System.Func{``1,``0,``1},System.Func{``1,``2})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource>, TAccumulate, Func<TAccumulate, TSource, TAccumulate>, Func<TAccumulate, TResult>)
  name.vb: Aggregate(Of TSource, TAccumulate, TResult)(IEnumerable(Of TSource), TAccumulate, Func(Of TAccumulate, TSource, TAccumulate), Func(Of TAccumulate, TResult))
  fullName: System.Linq.Enumerable.Aggregate<TSource, TAccumulate, TResult>(System.Collections.Generic.IEnumerable<TSource>, TAccumulate, System.Func<TAccumulate, TSource, TAccumulate>, System.Func<TAccumulate, TResult>)
  fullName.vb: System.Linq.Enumerable.Aggregate(Of TSource, TAccumulate, TResult)(System.Collections.Generic.IEnumerable(Of TSource), TAccumulate, System.Func(Of TAccumulate, TSource, TAccumulate), System.Func(Of TAccumulate, TResult))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1588
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static TResult Aggregate<TSource, TAccumulate, TResult>(IEnumerable<TSource> source, TAccumulate seed, Func<TAccumulate, TSource, TAccumulate> func, Func<TAccumulate, TResult> resultSelector)
    content.vb: Public Shared Function Aggregate(Of TSource, TAccumulate, TResult)(source As IEnumerable(Of TSource), seed As TAccumulate, func As Func(Of TAccumulate, TSource, TAccumulate), resultSelector As Func(Of TAccumulate, TResult)) As TResult
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: seed
      type: '{TAccumulate}'
    - id: func
      type: System.Func{{TAccumulate},{TSource},{TAccumulate}}
    - id: resultSelector
      type: System.Func{{TAccumulate},{TResult}}
    typeParameters:
    - id: TSource
    - id: TAccumulate
    - id: TResult
    return:
      type: '{TResult}'
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int32})
  id: Sum(System.Collections.Generic.IEnumerable{System.Int32})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Sum(IEnumerable<Int32>)
  name.vb: Sum(IEnumerable(Of Int32))
  fullName: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable<System.Int32>)
  fullName.vb: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable(Of System.Int32))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1598
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static int Sum(IEnumerable<int> source)
    content.vb: Public Shared Function Sum(source As IEnumerable(Of Integer)) As Integer
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Int32}
    return:
      type: System.Int32
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  id: Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Sum(IEnumerable<Nullable<Int32>>)
  name.vb: Sum(IEnumerable(Of Nullable(Of Int32)))
  fullName: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable<System.Nullable<System.Int32>>)
  fullName.vb: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable(Of System.Nullable(Of System.Int32)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1609
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static int ? Sum(IEnumerable<int ? > source)
    content.vb: Public Shared Function Sum(source As IEnumerable(Of Integer?)) As Integer?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}
    return:
      type: System.Nullable{System.Int32}
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Int64})
  id: Sum(System.Collections.Generic.IEnumerable{System.Int64})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Sum(IEnumerable<Int64>)
  name.vb: Sum(IEnumerable(Of Int64))
  fullName: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable<System.Int64>)
  fullName.vb: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable(Of System.Int64))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1623
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static long Sum(IEnumerable<long> source)
    content.vb: Public Shared Function Sum(source As IEnumerable(Of Long)) As Long
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Int64}
    return:
      type: System.Int64
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  id: Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Sum(IEnumerable<Nullable<Int64>>)
  name.vb: Sum(IEnumerable(Of Nullable(Of Int64)))
  fullName: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable<System.Nullable<System.Int64>>)
  fullName.vb: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable(Of System.Nullable(Of System.Int64)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1634
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static long ? Sum(IEnumerable<long ? > source)
    content.vb: Public Shared Function Sum(source As IEnumerable(Of Long?)) As Long?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}
    return:
      type: System.Nullable{System.Int64}
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Single})
  id: Sum(System.Collections.Generic.IEnumerable{System.Single})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Sum(IEnumerable<Single>)
  name.vb: Sum(IEnumerable(Of Single))
  fullName: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable<System.Single>)
  fullName.vb: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable(Of System.Single))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1648
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static float Sum(IEnumerable<float> source)
    content.vb: Public Shared Function Sum(source As IEnumerable(Of Single)) As Single
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Single}
    return:
      type: System.Single
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  id: Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Sum(IEnumerable<Nullable<Single>>)
  name.vb: Sum(IEnumerable(Of Nullable(Of Single)))
  fullName: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable<System.Nullable<System.Single>>)
  fullName.vb: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable(Of System.Nullable(Of System.Single)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1656
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static float ? Sum(IEnumerable<float ? > source)
    content.vb: Public Shared Function Sum(source As IEnumerable(Of Single?)) As Single?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Single}}
    return:
      type: System.Nullable{System.Single}
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Double})
  id: Sum(System.Collections.Generic.IEnumerable{System.Double})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Sum(IEnumerable<Double>)
  name.vb: Sum(IEnumerable(Of Double))
  fullName: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable<System.Double>)
  fullName.vb: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable(Of System.Double))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1667
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static double Sum(IEnumerable<double> source)
    content.vb: Public Shared Function Sum(source As IEnumerable(Of Double)) As Double
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Double}
    return:
      type: System.Double
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  id: Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Sum(IEnumerable<Nullable<Double>>)
  name.vb: Sum(IEnumerable(Of Nullable(Of Double)))
  fullName: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable<System.Nullable<System.Double>>)
  fullName.vb: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable(Of System.Nullable(Of System.Double)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1675
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static double ? Sum(IEnumerable<double ? > source)
    content.vb: Public Shared Function Sum(source As IEnumerable(Of Double?)) As Double?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}
    return:
      type: System.Nullable{System.Double}
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Decimal})
  id: Sum(System.Collections.Generic.IEnumerable{System.Decimal})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Sum(IEnumerable<Decimal>)
  name.vb: Sum(IEnumerable(Of Decimal))
  fullName: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable<System.Decimal>)
  fullName.vb: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable(Of System.Decimal))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1686
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static decimal Sum(IEnumerable<decimal> source)
    content.vb: Public Shared Function Sum(source As IEnumerable(Of Decimal)) As Decimal
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Decimal}
    return:
      type: System.Decimal
- uid: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  id: Sum(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Sum(IEnumerable<Nullable<Decimal>>)
  name.vb: Sum(IEnumerable(Of Nullable(Of Decimal)))
  fullName: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable<System.Nullable<System.Decimal>>)
  fullName.vb: System.Linq.Enumerable.Sum(System.Collections.Generic.IEnumerable(Of System.Nullable(Of System.Decimal)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1694
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static decimal ? Sum(IEnumerable<decimal ? > source)
    content.vb: Public Shared Function Sum(source As IEnumerable(Of Decimal?)) As Decimal?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}}
    return:
      type: System.Nullable{System.Decimal}
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  id: Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)
  fullName.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1705
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static int Sum<TSource>(IEnumerable<TSource> source, Func<TSource, int> selector)
    content.vb: Public Shared Function Sum(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Integer)) As Integer
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Int32}
    typeParameters:
    - id: TSource
    return:
      type: System.Int32
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  id: Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)
  fullName.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1710
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static int ? Sum<TSource>(IEnumerable<TSource> source, Func<TSource, int ? > selector)
    content.vb: Public Shared Function Sum(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Integer?)) As Integer?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Nullable{System.Int32}}
    typeParameters:
    - id: TSource
    return:
      type: System.Nullable{System.Int32}
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  id: Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)
  fullName.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1715
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static long Sum<TSource>(IEnumerable<TSource> source, Func<TSource, long> selector)
    content.vb: Public Shared Function Sum(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Long)) As Long
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Int64}
    typeParameters:
    - id: TSource
    return:
      type: System.Int64
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  id: Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)
  fullName.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1720
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static long ? Sum<TSource>(IEnumerable<TSource> source, Func<TSource, long ? > selector)
    content.vb: Public Shared Function Sum(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Long?)) As Long?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Nullable{System.Int64}}
    typeParameters:
    - id: TSource
    return:
      type: System.Nullable{System.Int64}
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  id: Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Single>)
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)
  fullName.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1725
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static float Sum<TSource>(IEnumerable<TSource> source, Func<TSource, float> selector)
    content.vb: Public Shared Function Sum(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Single)) As Single
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Single}
    typeParameters:
    - id: TSource
    return:
      type: System.Single
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  id: Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)
  fullName.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1730
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static float ? Sum<TSource>(IEnumerable<TSource> source, Func<TSource, float ? > selector)
    content.vb: Public Shared Function Sum(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Single?)) As Single?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Nullable{System.Single}}
    typeParameters:
    - id: TSource
    return:
      type: System.Nullable{System.Single}
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  id: Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Double>)
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)
  fullName.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1735
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static double Sum<TSource>(IEnumerable<TSource> source, Func<TSource, double> selector)
    content.vb: Public Shared Function Sum(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Double)) As Double
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Double}
    typeParameters:
    - id: TSource
    return:
      type: System.Double
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  id: Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)
  fullName.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1740
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static double ? Sum<TSource>(IEnumerable<TSource> source, Func<TSource, double ? > selector)
    content.vb: Public Shared Function Sum(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Double?)) As Double?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Nullable{System.Double}}
    typeParameters:
    - id: TSource
    return:
      type: System.Nullable{System.Double}
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  id: Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)
  fullName.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1745
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static decimal Sum<TSource>(IEnumerable<TSource> source, Func<TSource, decimal> selector)
    content.vb: Public Shared Function Sum(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Decimal)) As Decimal
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Decimal}
    typeParameters:
    - id: TSource
    return:
      type: System.Decimal
- uid: System.Linq.Enumerable.Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  id: Sum``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Sum<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)
  name.vb: Sum(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  fullName: System.Linq.Enumerable.Sum<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)
  fullName.vb: System.Linq.Enumerable.Sum(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1750
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static decimal ? Sum<TSource>(IEnumerable<TSource> source, Func<TSource, decimal ? > selector)
    content.vb: Public Shared Function Sum(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Decimal?)) As Decimal?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Nullable{System.Decimal}}
    typeParameters:
    - id: TSource
    return:
      type: System.Nullable{System.Decimal}
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int32})
  id: Min(System.Collections.Generic.IEnumerable{System.Int32})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Min(IEnumerable<Int32>)
  name.vb: Min(IEnumerable(Of Int32))
  fullName: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable<System.Int32>)
  fullName.vb: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable(Of System.Int32))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1755
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static int Min(IEnumerable<int> source)
    content.vb: Public Shared Function Min(source As IEnumerable(Of Integer)) As Integer
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Int32}
    return:
      type: System.Int32
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  id: Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Min(IEnumerable<Nullable<Int32>>)
  name.vb: Min(IEnumerable(Of Nullable(Of Int32)))
  fullName: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable<System.Nullable<System.Int32>>)
  fullName.vb: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable(Of System.Nullable(Of System.Int32)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1776
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static int ? Min(IEnumerable<int ? > source)
    content.vb: Public Shared Function Min(source As IEnumerable(Of Integer?)) As Integer?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}
    return:
      type: System.Nullable{System.Int32}
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Int64})
  id: Min(System.Collections.Generic.IEnumerable{System.Int64})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Min(IEnumerable<Int64>)
  name.vb: Min(IEnumerable(Of Int64))
  fullName: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable<System.Int64>)
  fullName.vb: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable(Of System.Int64))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1788
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static long Min(IEnumerable<long> source)
    content.vb: Public Shared Function Min(source As IEnumerable(Of Long)) As Long
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Int64}
    return:
      type: System.Int64
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  id: Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Min(IEnumerable<Nullable<Int64>>)
  name.vb: Min(IEnumerable(Of Nullable(Of Int64)))
  fullName: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable<System.Nullable<System.Int64>>)
  fullName.vb: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable(Of System.Nullable(Of System.Int64)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1809
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static long ? Min(IEnumerable<long ? > source)
    content.vb: Public Shared Function Min(source As IEnumerable(Of Long?)) As Long?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}
    return:
      type: System.Nullable{System.Int64}
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Single})
  id: Min(System.Collections.Generic.IEnumerable{System.Single})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Min(IEnumerable<Single>)
  name.vb: Min(IEnumerable(Of Single))
  fullName: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable<System.Single>)
  fullName.vb: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable(Of System.Single))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1820
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static float Min(IEnumerable<float> source)
    content.vb: Public Shared Function Min(source As IEnumerable(Of Single)) As Single
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Single}
    return:
      type: System.Single
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  id: Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Min(IEnumerable<Nullable<Single>>)
  name.vb: Min(IEnumerable(Of Nullable(Of Single)))
  fullName: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable<System.Nullable<System.Single>>)
  fullName.vb: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable(Of System.Nullable(Of System.Single)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1847
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static float ? Min(IEnumerable<float ? > source)
    content.vb: Public Shared Function Min(source As IEnumerable(Of Single?)) As Single?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Single}}
    return:
      type: System.Nullable{System.Single}
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Double})
  id: Min(System.Collections.Generic.IEnumerable{System.Double})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Min(IEnumerable<Double>)
  name.vb: Min(IEnumerable(Of Double))
  fullName: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable<System.Double>)
  fullName.vb: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable(Of System.Double))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1859
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static double Min(IEnumerable<double> source)
    content.vb: Public Shared Function Min(source As IEnumerable(Of Double)) As Double
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Double}
    return:
      type: System.Double
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  id: Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Min(IEnumerable<Nullable<Double>>)
  name.vb: Min(IEnumerable(Of Nullable(Of Double)))
  fullName: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable<System.Nullable<System.Double>>)
  fullName.vb: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable(Of System.Nullable(Of System.Double)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1880
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static double ? Min(IEnumerable<double ? > source)
    content.vb: Public Shared Function Min(source As IEnumerable(Of Double?)) As Double?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}
    return:
      type: System.Nullable{System.Double}
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Decimal})
  id: Min(System.Collections.Generic.IEnumerable{System.Decimal})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Min(IEnumerable<Decimal>)
  name.vb: Min(IEnumerable(Of Decimal))
  fullName: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable<System.Decimal>)
  fullName.vb: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable(Of System.Decimal))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1892
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static decimal Min(IEnumerable<decimal> source)
    content.vb: Public Shared Function Min(source As IEnumerable(Of Decimal)) As Decimal
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Decimal}
    return:
      type: System.Decimal
- uid: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  id: Min(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Min(IEnumerable<Nullable<Decimal>>)
  name.vb: Min(IEnumerable(Of Nullable(Of Decimal)))
  fullName: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable<System.Nullable<System.Decimal>>)
  fullName.vb: System.Linq.Enumerable.Min(System.Collections.Generic.IEnumerable(Of System.Nullable(Of System.Decimal)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1913
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static decimal ? Min(IEnumerable<decimal ? > source)
    content.vb: Public Shared Function Min(source As IEnumerable(Of Decimal?)) As Decimal?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}}
    return:
      type: System.Nullable{System.Decimal}
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0})
  id: Min``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Min<TSource>(IEnumerable<TSource>)
  name.vb: Min(Of TSource)(IEnumerable(Of TSource))
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1924
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static TSource Min<TSource>(IEnumerable<TSource> source)
    content.vb: Public Shared Function Min(Of TSource)(source As IEnumerable(Of TSource)) As TSource
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    typeParameters:
    - id: TSource
    return:
      type: '{TSource}'
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  id: Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)
  fullName.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1959
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static int Min<TSource>(IEnumerable<TSource> source, Func<TSource, int> selector)
    content.vb: Public Shared Function Min(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Integer)) As Integer
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Int32}
    typeParameters:
    - id: TSource
    return:
      type: System.Int32
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  id: Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)
  fullName.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1964
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static int ? Min<TSource>(IEnumerable<TSource> source, Func<TSource, int ? > selector)
    content.vb: Public Shared Function Min(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Integer?)) As Integer?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Nullable{System.Int32}}
    typeParameters:
    - id: TSource
    return:
      type: System.Nullable{System.Int32}
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  id: Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)
  fullName.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1969
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static long Min<TSource>(IEnumerable<TSource> source, Func<TSource, long> selector)
    content.vb: Public Shared Function Min(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Long)) As Long
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Int64}
    typeParameters:
    - id: TSource
    return:
      type: System.Int64
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  id: Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)
  fullName.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1974
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static long ? Min<TSource>(IEnumerable<TSource> source, Func<TSource, long ? > selector)
    content.vb: Public Shared Function Min(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Long?)) As Long?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Nullable{System.Int64}}
    typeParameters:
    - id: TSource
    return:
      type: System.Nullable{System.Int64}
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  id: Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Single>)
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)
  fullName.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1979
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static float Min<TSource>(IEnumerable<TSource> source, Func<TSource, float> selector)
    content.vb: Public Shared Function Min(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Single)) As Single
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Single}
    typeParameters:
    - id: TSource
    return:
      type: System.Single
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  id: Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)
  fullName.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1984
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static float ? Min<TSource>(IEnumerable<TSource> source, Func<TSource, float ? > selector)
    content.vb: Public Shared Function Min(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Single?)) As Single?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Nullable{System.Single}}
    typeParameters:
    - id: TSource
    return:
      type: System.Nullable{System.Single}
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  id: Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Double>)
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)
  fullName.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1989
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static double Min<TSource>(IEnumerable<TSource> source, Func<TSource, double> selector)
    content.vb: Public Shared Function Min(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Double)) As Double
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Double}
    typeParameters:
    - id: TSource
    return:
      type: System.Double
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  id: Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)
  fullName.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1994
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static double ? Min<TSource>(IEnumerable<TSource> source, Func<TSource, double ? > selector)
    content.vb: Public Shared Function Min(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Double?)) As Double?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Nullable{System.Double}}
    typeParameters:
    - id: TSource
    return:
      type: System.Nullable{System.Double}
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  id: Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)
  fullName.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 1999
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static decimal Min<TSource>(IEnumerable<TSource> source, Func<TSource, decimal> selector)
    content.vb: Public Shared Function Min(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Decimal)) As Decimal
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Decimal}
    typeParameters:
    - id: TSource
    return:
      type: System.Decimal
- uid: System.Linq.Enumerable.Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  id: Min``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Min<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)
  name.vb: Min(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  fullName: System.Linq.Enumerable.Min<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)
  fullName.vb: System.Linq.Enumerable.Min(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2004
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static decimal ? Min<TSource>(IEnumerable<TSource> source, Func<TSource, decimal ? > selector)
    content.vb: Public Shared Function Min(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Decimal?)) As Decimal?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Nullable{System.Decimal}}
    typeParameters:
    - id: TSource
    return:
      type: System.Nullable{System.Decimal}
- uid: System.Linq.Enumerable.Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  id: Min``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Min<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)
  name.vb: Min(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))
  fullName: System.Linq.Enumerable.Min<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)
  fullName.vb: System.Linq.Enumerable.Min(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2009
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static TResult Min<TSource, TResult>(IEnumerable<TSource> source, Func<TSource, TResult> selector)
    content.vb: Public Shared Function Min(Of TSource, TResult)(source As IEnumerable(Of TSource), selector As Func(Of TSource, TResult)) As TResult
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},{TResult}}
    typeParameters:
    - id: TSource
    - id: TResult
    return:
      type: '{TResult}'
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int32})
  id: Max(System.Collections.Generic.IEnumerable{System.Int32})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Max(IEnumerable<Int32>)
  name.vb: Max(IEnumerable(Of Int32))
  fullName: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable<System.Int32>)
  fullName.vb: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable(Of System.Int32))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2014
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static int Max(IEnumerable<int> source)
    content.vb: Public Shared Function Max(source As IEnumerable(Of Integer)) As Integer
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Int32}
    return:
      type: System.Int32
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  id: Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Max(IEnumerable<Nullable<Int32>>)
  name.vb: Max(IEnumerable(Of Nullable(Of Int32)))
  fullName: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable<System.Nullable<System.Int32>>)
  fullName.vb: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable(Of System.Nullable(Of System.Int32)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2035
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static int ? Max(IEnumerable<int ? > source)
    content.vb: Public Shared Function Max(source As IEnumerable(Of Integer?)) As Integer?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}
    return:
      type: System.Nullable{System.Int32}
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Int64})
  id: Max(System.Collections.Generic.IEnumerable{System.Int64})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Max(IEnumerable<Int64>)
  name.vb: Max(IEnumerable(Of Int64))
  fullName: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable<System.Int64>)
  fullName.vb: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable(Of System.Int64))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2046
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static long Max(IEnumerable<long> source)
    content.vb: Public Shared Function Max(source As IEnumerable(Of Long)) As Long
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Int64}
    return:
      type: System.Int64
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  id: Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Max(IEnumerable<Nullable<Int64>>)
  name.vb: Max(IEnumerable(Of Nullable(Of Int64)))
  fullName: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable<System.Nullable<System.Int64>>)
  fullName.vb: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable(Of System.Nullable(Of System.Int64)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2067
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static long ? Max(IEnumerable<long ? > source)
    content.vb: Public Shared Function Max(source As IEnumerable(Of Long?)) As Long?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}
    return:
      type: System.Nullable{System.Int64}
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Double})
  id: Max(System.Collections.Generic.IEnumerable{System.Double})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Max(IEnumerable<Double>)
  name.vb: Max(IEnumerable(Of Double))
  fullName: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable<System.Double>)
  fullName.vb: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable(Of System.Double))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2078
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static double Max(IEnumerable<double> source)
    content.vb: Public Shared Function Max(source As IEnumerable(Of Double)) As Double
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Double}
    return:
      type: System.Double
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  id: Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Max(IEnumerable<Nullable<Double>>)
  name.vb: Max(IEnumerable(Of Nullable(Of Double)))
  fullName: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable<System.Nullable<System.Double>>)
  fullName.vb: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable(Of System.Nullable(Of System.Double)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2099
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static double ? Max(IEnumerable<double ? > source)
    content.vb: Public Shared Function Max(source As IEnumerable(Of Double?)) As Double?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}
    return:
      type: System.Nullable{System.Double}
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Single})
  id: Max(System.Collections.Generic.IEnumerable{System.Single})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Max(IEnumerable<Single>)
  name.vb: Max(IEnumerable(Of Single))
  fullName: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable<System.Single>)
  fullName.vb: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable(Of System.Single))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2111
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static float Max(IEnumerable<float> source)
    content.vb: Public Shared Function Max(source As IEnumerable(Of Single)) As Single
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Single}
    return:
      type: System.Single
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  id: Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Max(IEnumerable<Nullable<Single>>)
  name.vb: Max(IEnumerable(Of Nullable(Of Single)))
  fullName: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable<System.Nullable<System.Single>>)
  fullName.vb: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable(Of System.Nullable(Of System.Single)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2132
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static float ? Max(IEnumerable<float ? > source)
    content.vb: Public Shared Function Max(source As IEnumerable(Of Single?)) As Single?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Single}}
    return:
      type: System.Nullable{System.Single}
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Decimal})
  id: Max(System.Collections.Generic.IEnumerable{System.Decimal})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Max(IEnumerable<Decimal>)
  name.vb: Max(IEnumerable(Of Decimal))
  fullName: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable<System.Decimal>)
  fullName.vb: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable(Of System.Decimal))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2144
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static decimal Max(IEnumerable<decimal> source)
    content.vb: Public Shared Function Max(source As IEnumerable(Of Decimal)) As Decimal
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Decimal}
    return:
      type: System.Decimal
- uid: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  id: Max(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Max(IEnumerable<Nullable<Decimal>>)
  name.vb: Max(IEnumerable(Of Nullable(Of Decimal)))
  fullName: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable<System.Nullable<System.Decimal>>)
  fullName.vb: System.Linq.Enumerable.Max(System.Collections.Generic.IEnumerable(Of System.Nullable(Of System.Decimal)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2165
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static decimal ? Max(IEnumerable<decimal ? > source)
    content.vb: Public Shared Function Max(source As IEnumerable(Of Decimal?)) As Decimal?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}}
    return:
      type: System.Nullable{System.Decimal}
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0})
  id: Max``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Max<TSource>(IEnumerable<TSource>)
  name.vb: Max(Of TSource)(IEnumerable(Of TSource))
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2176
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static TSource Max<TSource>(IEnumerable<TSource> source)
    content.vb: Public Shared Function Max(Of TSource)(source As IEnumerable(Of TSource)) As TSource
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    typeParameters:
    - id: TSource
    return:
      type: '{TSource}'
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  id: Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)
  fullName.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2211
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static int Max<TSource>(IEnumerable<TSource> source, Func<TSource, int> selector)
    content.vb: Public Shared Function Max(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Integer)) As Integer
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Int32}
    typeParameters:
    - id: TSource
    return:
      type: System.Int32
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  id: Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)
  fullName.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2216
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static int ? Max<TSource>(IEnumerable<TSource> source, Func<TSource, int ? > selector)
    content.vb: Public Shared Function Max(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Integer?)) As Integer?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Nullable{System.Int32}}
    typeParameters:
    - id: TSource
    return:
      type: System.Nullable{System.Int32}
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  id: Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)
  fullName.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2221
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static long Max<TSource>(IEnumerable<TSource> source, Func<TSource, long> selector)
    content.vb: Public Shared Function Max(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Long)) As Long
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Int64}
    typeParameters:
    - id: TSource
    return:
      type: System.Int64
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  id: Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)
  fullName.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2226
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static long ? Max<TSource>(IEnumerable<TSource> source, Func<TSource, long ? > selector)
    content.vb: Public Shared Function Max(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Long?)) As Long?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Nullable{System.Int64}}
    typeParameters:
    - id: TSource
    return:
      type: System.Nullable{System.Int64}
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  id: Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Single>)
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)
  fullName.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2231
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static float Max<TSource>(IEnumerable<TSource> source, Func<TSource, float> selector)
    content.vb: Public Shared Function Max(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Single)) As Single
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Single}
    typeParameters:
    - id: TSource
    return:
      type: System.Single
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  id: Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)
  fullName.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2236
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static float ? Max<TSource>(IEnumerable<TSource> source, Func<TSource, float ? > selector)
    content.vb: Public Shared Function Max(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Single?)) As Single?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Nullable{System.Single}}
    typeParameters:
    - id: TSource
    return:
      type: System.Nullable{System.Single}
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  id: Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Double>)
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)
  fullName.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2241
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static double Max<TSource>(IEnumerable<TSource> source, Func<TSource, double> selector)
    content.vb: Public Shared Function Max(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Double)) As Double
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Double}
    typeParameters:
    - id: TSource
    return:
      type: System.Double
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  id: Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)
  fullName.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2246
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static double ? Max<TSource>(IEnumerable<TSource> source, Func<TSource, double ? > selector)
    content.vb: Public Shared Function Max(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Double?)) As Double?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Nullable{System.Double}}
    typeParameters:
    - id: TSource
    return:
      type: System.Nullable{System.Double}
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  id: Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)
  fullName.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2251
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static decimal Max<TSource>(IEnumerable<TSource> source, Func<TSource, decimal> selector)
    content.vb: Public Shared Function Max(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Decimal)) As Decimal
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Decimal}
    typeParameters:
    - id: TSource
    return:
      type: System.Decimal
- uid: System.Linq.Enumerable.Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  id: Max``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Max<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)
  name.vb: Max(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  fullName: System.Linq.Enumerable.Max<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)
  fullName.vb: System.Linq.Enumerable.Max(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2256
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static decimal ? Max<TSource>(IEnumerable<TSource> source, Func<TSource, decimal ? > selector)
    content.vb: Public Shared Function Max(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Decimal?)) As Decimal?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Nullable{System.Decimal}}
    typeParameters:
    - id: TSource
    return:
      type: System.Nullable{System.Decimal}
- uid: System.Linq.Enumerable.Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  id: Max``2(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``1})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Max<TSource, TResult>(IEnumerable<TSource>, Func<TSource, TResult>)
  name.vb: Max(Of TSource, TResult)(IEnumerable(Of TSource), Func(Of TSource, TResult))
  fullName: System.Linq.Enumerable.Max<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TResult>)
  fullName.vb: System.Linq.Enumerable.Max(Of TSource, TResult)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, TResult))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2261
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static TResult Max<TSource, TResult>(IEnumerable<TSource> source, Func<TSource, TResult> selector)
    content.vb: Public Shared Function Max(Of TSource, TResult)(source As IEnumerable(Of TSource), selector As Func(Of TSource, TResult)) As TResult
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},{TResult}}
    typeParameters:
    - id: TSource
    - id: TResult
    return:
      type: '{TResult}'
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int32})
  id: Average(System.Collections.Generic.IEnumerable{System.Int32})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Average(IEnumerable<Int32>)
  name.vb: Average(IEnumerable(Of Int32))
  fullName: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable<System.Int32>)
  fullName.vb: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable(Of System.Int32))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2266
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static double Average(IEnumerable<int> source)
    content.vb: Public Shared Function Average(source As IEnumerable(Of Integer)) As Double
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Int32}
    return:
      type: System.Double
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  id: Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Average(IEnumerable<Nullable<Int32>>)
  name.vb: Average(IEnumerable(Of Nullable(Of Int32)))
  fullName: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable<System.Nullable<System.Int32>>)
  fullName.vb: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable(Of System.Nullable(Of System.Int32)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2283
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static double ? Average(IEnumerable<int ? > source)
    content.vb: Public Shared Function Average(source As IEnumerable(Of Integer?)) As Double?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}
    return:
      type: System.Nullable{System.Double}
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Int64})
  id: Average(System.Collections.Generic.IEnumerable{System.Int64})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Average(IEnumerable<Int64>)
  name.vb: Average(IEnumerable(Of Int64))
  fullName: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable<System.Int64>)
  fullName.vb: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable(Of System.Int64))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2303
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static double Average(IEnumerable<long> source)
    content.vb: Public Shared Function Average(source As IEnumerable(Of Long)) As Double
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Int64}
    return:
      type: System.Double
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  id: Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Average(IEnumerable<Nullable<Int64>>)
  name.vb: Average(IEnumerable(Of Nullable(Of Int64)))
  fullName: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable<System.Nullable<System.Int64>>)
  fullName.vb: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable(Of System.Nullable(Of System.Int64)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2320
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static double ? Average(IEnumerable<long ? > source)
    content.vb: Public Shared Function Average(source As IEnumerable(Of Long?)) As Double?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}
    return:
      type: System.Nullable{System.Double}
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Single})
  id: Average(System.Collections.Generic.IEnumerable{System.Single})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Average(IEnumerable<Single>)
  name.vb: Average(IEnumerable(Of Single))
  fullName: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable<System.Single>)
  fullName.vb: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable(Of System.Single))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2340
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static float Average(IEnumerable<float> source)
    content.vb: Public Shared Function Average(source As IEnumerable(Of Single)) As Single
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Single}
    return:
      type: System.Single
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  id: Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Average(IEnumerable<Nullable<Single>>)
  name.vb: Average(IEnumerable(Of Nullable(Of Single)))
  fullName: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable<System.Nullable<System.Single>>)
  fullName.vb: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable(Of System.Nullable(Of System.Single)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2357
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static float ? Average(IEnumerable<float ? > source)
    content.vb: Public Shared Function Average(source As IEnumerable(Of Single?)) As Single?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Single}}
    return:
      type: System.Nullable{System.Single}
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Double})
  id: Average(System.Collections.Generic.IEnumerable{System.Double})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Average(IEnumerable<Double>)
  name.vb: Average(IEnumerable(Of Double))
  fullName: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable<System.Double>)
  fullName.vb: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable(Of System.Double))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2377
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static double Average(IEnumerable<double> source)
    content.vb: Public Shared Function Average(source As IEnumerable(Of Double)) As Double
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Double}
    return:
      type: System.Double
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  id: Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Average(IEnumerable<Nullable<Double>>)
  name.vb: Average(IEnumerable(Of Nullable(Of Double)))
  fullName: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable<System.Nullable<System.Double>>)
  fullName.vb: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable(Of System.Nullable(Of System.Double)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2394
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static double ? Average(IEnumerable<double ? > source)
    content.vb: Public Shared Function Average(source As IEnumerable(Of Double?)) As Double?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}
    return:
      type: System.Nullable{System.Double}
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Decimal})
  id: Average(System.Collections.Generic.IEnumerable{System.Decimal})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Average(IEnumerable<Decimal>)
  name.vb: Average(IEnumerable(Of Decimal))
  fullName: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable<System.Decimal>)
  fullName.vb: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable(Of System.Decimal))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2414
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static decimal Average(IEnumerable<decimal> source)
    content.vb: Public Shared Function Average(source As IEnumerable(Of Decimal)) As Decimal
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Decimal}
    return:
      type: System.Decimal
- uid: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  id: Average(System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Average(IEnumerable<Nullable<Decimal>>)
  name.vb: Average(IEnumerable(Of Nullable(Of Decimal)))
  fullName: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable<System.Nullable<System.Decimal>>)
  fullName.vb: System.Linq.Enumerable.Average(System.Collections.Generic.IEnumerable(Of System.Nullable(Of System.Decimal)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2431
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static decimal ? Average(IEnumerable<decimal ? > source)
    content.vb: Public Shared Function Average(source As IEnumerable(Of Decimal?)) As Decimal?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}}
    return:
      type: System.Nullable{System.Decimal}
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  id: Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int32})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Int32>)
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int32))
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int32>)
  fullName.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int32))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2451
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static double Average<TSource>(IEnumerable<TSource> source, Func<TSource, int> selector)
    content.vb: Public Shared Function Average(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Integer)) As Double
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Int32}
    typeParameters:
    - id: TSource
    return:
      type: System.Double
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  id: Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int32}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int32>>)
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int32)))
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int32>>)
  fullName.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int32)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2456
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static double ? Average<TSource>(IEnumerable<TSource> source, Func<TSource, int ? > selector)
    content.vb: Public Shared Function Average(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Integer?)) As Double?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Nullable{System.Int32}}
    typeParameters:
    - id: TSource
    return:
      type: System.Nullable{System.Double}
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  id: Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Int64})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Int64>)
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Int64))
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Int64>)
  fullName.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Int64))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2461
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static double Average<TSource>(IEnumerable<TSource> source, Func<TSource, long> selector)
    content.vb: Public Shared Function Average(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Long)) As Double
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Int64}
    typeParameters:
    - id: TSource
    return:
      type: System.Double
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  id: Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Int64}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Int64>>)
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Int64)))
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Int64>>)
  fullName.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Int64)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2466
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static double ? Average<TSource>(IEnumerable<TSource> source, Func<TSource, long ? > selector)
    content.vb: Public Shared Function Average(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Long?)) As Double?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Nullable{System.Int64}}
    typeParameters:
    - id: TSource
    return:
      type: System.Nullable{System.Double}
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  id: Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Single})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Single>)
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Single))
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Single>)
  fullName.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Single))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2471
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static float Average<TSource>(IEnumerable<TSource> source, Func<TSource, float> selector)
    content.vb: Public Shared Function Average(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Single)) As Single
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Single}
    typeParameters:
    - id: TSource
    return:
      type: System.Single
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  id: Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Single}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Single>>)
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Single)))
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Single>>)
  fullName.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Single)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2476
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static float ? Average<TSource>(IEnumerable<TSource> source, Func<TSource, float ? > selector)
    content.vb: Public Shared Function Average(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Single?)) As Single?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Nullable{System.Single}}
    typeParameters:
    - id: TSource
    return:
      type: System.Nullable{System.Single}
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  id: Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Double})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Double>)
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Double))
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Double>)
  fullName.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Double))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2481
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static double Average<TSource>(IEnumerable<TSource> source, Func<TSource, double> selector)
    content.vb: Public Shared Function Average(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Double)) As Double
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Double}
    typeParameters:
    - id: TSource
    return:
      type: System.Double
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  id: Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Double}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Double>>)
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Double)))
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Double>>)
  fullName.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Double)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2486
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static double ? Average<TSource>(IEnumerable<TSource> source, Func<TSource, double ? > selector)
    content.vb: Public Shared Function Average(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Double?)) As Double?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Nullable{System.Double}}
    typeParameters:
    - id: TSource
    return:
      type: System.Nullable{System.Double}
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  id: Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Decimal})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Decimal>)
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Decimal))
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Decimal>)
  fullName.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Decimal))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2491
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static decimal Average<TSource>(IEnumerable<TSource> source, Func<TSource, decimal> selector)
    content.vb: Public Shared Function Average(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Decimal)) As Decimal
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Decimal}
    typeParameters:
    - id: TSource
    return:
      type: System.Decimal
- uid: System.Linq.Enumerable.Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  id: Average``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Nullable{System.Decimal}})
  parent: System.Linq.Enumerable
  href: System.Linq.Enumerable.yml
  name: Average<TSource>(IEnumerable<TSource>, Func<TSource, Nullable<Decimal>>)
  name.vb: Average(Of TSource)(IEnumerable(Of TSource), Func(Of TSource, Nullable(Of Decimal)))
  fullName: System.Linq.Enumerable.Average<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, System.Nullable<System.Decimal>>)
  fullName.vb: System.Linq.Enumerable.Average(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Func(Of TSource, System.Nullable(Of System.Decimal)))
  type: Method
  source:
    remote: *o0
    path: src/System.Linq/src/System/Linq/Enumerable.cs
    startLine: 2496
  assemblies:
  - System.Linq
  namespace: System.Linq
  syntax:
    content: public static decimal ? Average<TSource>(IEnumerable<TSource> source, Func<TSource, decimal ? > selector)
    content.vb: Public Shared Function Average(Of TSource)(source As IEnumerable(Of TSource), selector As Func(Of TSource, Decimal?)) As Decimal?
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
    - id: selector
      type: System.Func{{TSource},System.Nullable{System.Decimal}}
    typeParameters:
    - id: TSource
    return:
      type: System.Nullable{System.Decimal}
references:
- uid: System.Linq
  isExternal: false
  name: System.Linq
  fullName: System.Linq
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Collections.Generic.IEnumerable{{TSource}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TSource>
  name.vb: IEnumerable(Of TSource)
  fullName: System.Collections.Generic.IEnumerable<TSource>
  fullName.vb: System.Collections.Generic.IEnumerable(Of TSource)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
- uid: System.Func{{TSource},System.Boolean}
  parent: System
  definition: System.Func`2
  name: Func<TSource, Boolean>
  name.vb: Func(Of TSource, Boolean)
  fullName: System.Func<TSource, System.Boolean>
  fullName.vb: System.Func(Of TSource, System.Boolean)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  name.vb: IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Func`2
  parent: System
  isExternal: true
  name: Func<T, TResult>
  name.vb: Func(Of T, TResult)
  fullName: System.Func<T, TResult>
  fullName.vb: System.Func(Of T, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Func{{TSource},System.Int32,System.Boolean}
  parent: System
  definition: System.Func`3
  name: Func<TSource, Int32, Boolean>
  name.vb: Func(Of TSource, Int32, Boolean)
  fullName: System.Func<TSource, System.Int32, System.Boolean>
  fullName.vb: System.Func(Of TSource, System.Int32, System.Boolean)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    fullName: )
- uid: System.Func`3
  parent: System
  isExternal: true
  name: Func<T1, T2, TResult>
  name.vb: Func(Of T1, T2, TResult)
  fullName: System.Func<T1, T2, TResult>
  fullName.vb: System.Func(Of T1, T2, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T1
    fullName: T1
  - name: ', '
    fullName: ', '
  - name: T2
    fullName: T2
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Func{{TSource},{TResult}}
  parent: System
  definition: System.Func`2
  name: Func<TSource, TResult>
  name.vb: Func(Of TSource, TResult)
  fullName: System.Func<TSource, TResult>
  fullName.vb: System.Func(Of TSource, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{TResult}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TResult>
  name.vb: IEnumerable(Of TResult)
  fullName: System.Collections.Generic.IEnumerable<TResult>
  fullName.vb: System.Collections.Generic.IEnumerable(Of TResult)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Func{{TSource},System.Int32,{TResult}}
  parent: System
  definition: System.Func`3
  name: Func<TSource, Int32, TResult>
  name.vb: Func(Of TSource, Int32, TResult)
  fullName: System.Func<TSource, System.Int32, TResult>
  fullName.vb: System.Func(Of TSource, System.Int32, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Func{{TSource},System.Collections.Generic.IEnumerable{{TResult}}}
  parent: System
  definition: System.Func`2
  name: Func<TSource, IEnumerable<TResult>>
  name.vb: Func(Of TSource, IEnumerable(Of TResult))
  fullName: System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>
  fullName.vb: System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TResult))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Func{{TSource},System.Int32,System.Collections.Generic.IEnumerable{{TResult}}}
  parent: System
  definition: System.Func`3
  name: Func<TSource, Int32, IEnumerable<TResult>>
  name.vb: Func(Of TSource, Int32, IEnumerable(Of TResult))
  fullName: System.Func<TSource, System.Int32, System.Collections.Generic.IEnumerable<TResult>>
  fullName.vb: System.Func(Of TSource, System.Int32, System.Collections.Generic.IEnumerable(Of TResult))
  spec.csharp:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Func{{TSource},System.Int32,System.Collections.Generic.IEnumerable{{TCollection}}}
  parent: System
  definition: System.Func`3
  name: Func<TSource, Int32, IEnumerable<TCollection>>
  name.vb: Func(Of TSource, Int32, IEnumerable(Of TCollection))
  fullName: System.Func<TSource, System.Int32, System.Collections.Generic.IEnumerable<TCollection>>
  fullName.vb: System.Func(Of TSource, System.Int32, System.Collections.Generic.IEnumerable(Of TCollection))
  spec.csharp:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TCollection
    fullName: TCollection
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TCollection
    fullName: TCollection
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Func{{TSource},{TCollection},{TResult}}
  parent: System
  definition: System.Func`3
  name: Func<TSource, TCollection, TResult>
  name.vb: Func(Of TSource, TCollection, TResult)
  fullName: System.Func<TSource, TCollection, TResult>
  fullName.vb: System.Func(Of TSource, TCollection, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TCollection
    fullName: TCollection
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TCollection
    fullName: TCollection
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Func{{TSource},System.Collections.Generic.IEnumerable{{TCollection}}}
  parent: System
  definition: System.Func`2
  name: Func<TSource, IEnumerable<TCollection>>
  name.vb: Func(Of TSource, IEnumerable(Of TCollection))
  fullName: System.Func<TSource, System.Collections.Generic.IEnumerable<TCollection>>
  fullName.vb: System.Func(Of TSource, System.Collections.Generic.IEnumerable(Of TCollection))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TCollection
    fullName: TCollection
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TCollection
    fullName: TCollection
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IEnumerable{{TOuter}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TOuter>
  name.vb: IEnumerable(Of TOuter)
  fullName: System.Collections.Generic.IEnumerable<TOuter>
  fullName.vb: System.Collections.Generic.IEnumerable(Of TOuter)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TOuter
    fullName: TOuter
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TOuter
    fullName: TOuter
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{TInner}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TInner>
  name.vb: IEnumerable(Of TInner)
  fullName: System.Collections.Generic.IEnumerable<TInner>
  fullName.vb: System.Collections.Generic.IEnumerable(Of TInner)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: )
    fullName: )
- uid: System.Func{{TOuter},{TKey}}
  parent: System
  definition: System.Func`2
  name: Func<TOuter, TKey>
  name.vb: Func(Of TOuter, TKey)
  fullName: System.Func<TOuter, TKey>
  fullName.vb: System.Func(Of TOuter, TKey)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
- uid: System.Func{{TInner},{TKey}}
  parent: System
  definition: System.Func`2
  name: Func<TInner, TKey>
  name.vb: Func(Of TInner, TKey)
  fullName: System.Func<TInner, TKey>
  fullName.vb: System.Func(Of TInner, TKey)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
- uid: System.Func{{TOuter},{TInner},{TResult}}
  parent: System
  definition: System.Func`3
  name: Func<TOuter, TInner, TResult>
  name.vb: Func(Of TOuter, TInner, TResult)
  fullName: System.Func<TOuter, TInner, TResult>
  fullName.vb: System.Func(Of TOuter, TInner, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - name: TInner
    fullName: TInner
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEqualityComparer{{TKey}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<TKey>
  name.vb: IEqualityComparer(Of TKey)
  fullName: System.Collections.Generic.IEqualityComparer<TKey>
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEqualityComparer`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEqualityComparer<T>
  name.vb: IEqualityComparer(Of T)
  fullName: System.Collections.Generic.IEqualityComparer<T>
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Func{{TOuter},System.Collections.Generic.IEnumerable{{TInner}},{TResult}}
  parent: System
  definition: System.Func`3
  name: Func<TOuter, IEnumerable<TInner>, TResult>
  name.vb: Func(Of TOuter, IEnumerable(Of TInner), TResult)
  fullName: System.Func<TOuter, System.Collections.Generic.IEnumerable<TInner>, TResult>
  fullName.vb: System.Func(Of TOuter, System.Collections.Generic.IEnumerable(Of TInner), TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TInner
    fullName: TInner
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TOuter
    fullName: TOuter
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TInner
    fullName: TInner
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Func{{TSource},{TKey}}
  parent: System
  definition: System.Func`2
  name: Func<TSource, TKey>
  name.vb: Func(Of TSource, TKey)
  fullName: System.Func<TSource, TKey>
  fullName.vb: System.Func(Of TSource, TKey)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
- uid: System.Linq.IOrderedEnumerable{{TSource}}
  parent: System.Linq
  definition: System.Linq.IOrderedEnumerable`1
  href: System.Linq.IOrderedEnumerable`1.yml
  name: IOrderedEnumerable<TSource>
  name.vb: IOrderedEnumerable(Of TSource)
  fullName: System.Linq.IOrderedEnumerable<TSource>
  fullName.vb: System.Linq.IOrderedEnumerable(Of TSource)
  spec.csharp:
  - uid: System.Linq.IOrderedEnumerable`1
    name: IOrderedEnumerable
    fullName: System.Linq.IOrderedEnumerable
    href: System.Linq.IOrderedEnumerable`1.yml
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IOrderedEnumerable`1
    name: IOrderedEnumerable
    fullName: System.Linq.IOrderedEnumerable
    href: System.Linq.IOrderedEnumerable`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
- uid: System.Linq.IOrderedEnumerable`1
  parent: System.Linq
  isExternal: false
  href: System.Linq.IOrderedEnumerable`1.yml
  name: IOrderedEnumerable<TElement>
  name.vb: IOrderedEnumerable(Of TElement)
  fullName: System.Linq.IOrderedEnumerable<TElement>
  fullName.vb: System.Linq.IOrderedEnumerable(Of TElement)
  type: Interface
  spec.csharp:
  - uid: System.Linq.IOrderedEnumerable`1
    name: IOrderedEnumerable
    fullName: System.Linq.IOrderedEnumerable
    href: System.Linq.IOrderedEnumerable`1.yml
  - name: <
    fullName: <
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.IOrderedEnumerable`1
    name: IOrderedEnumerable
    fullName: System.Linq.IOrderedEnumerable
    href: System.Linq.IOrderedEnumerable`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
- uid: System.Collections.Generic.IComparer{{TKey}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  name: IComparer<TKey>
  name.vb: IComparer(Of TKey)
  fullName: System.Collections.Generic.IComparer<TKey>
  fullName.vb: System.Collections.Generic.IComparer(Of TKey)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: )
    fullName: )
- uid: System.Collections.Generic.IComparer`1
  parent: System.Collections.Generic
  isExternal: true
  name: IComparer<T>
  name.vb: IComparer(Of T)
  fullName: System.Collections.Generic.IComparer<T>
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TSource}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: System.Linq.IGrouping`2.yml
  name: IEnumerable<IGrouping<TKey, TSource>>
  name.vb: IEnumerable(Of IGrouping(Of TKey, TSource))
  fullName: System.Collections.Generic.IEnumerable<System.Linq.IGrouping<TKey, TSource>>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Linq.IGrouping(Of TKey, TSource))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: IGrouping
    fullName: System.Linq.IGrouping
    href: System.Linq.IGrouping`2.yml
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: IGrouping
    fullName: System.Linq.IGrouping
    href: System.Linq.IGrouping`2.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Func{{TSource},{TElement}}
  parent: System
  definition: System.Func`2
  name: Func<TSource, TElement>
  name.vb: Func(Of TSource, TElement)
  fullName: System.Func<TSource, TElement>
  fullName.vb: System.Func(Of TSource, TElement)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Linq.IGrouping{{TKey},{TElement}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: System.Linq.IGrouping`2.yml
  name: IEnumerable<IGrouping<TKey, TElement>>
  name.vb: IEnumerable(Of IGrouping(Of TKey, TElement))
  fullName: System.Collections.Generic.IEnumerable<System.Linq.IGrouping<TKey, TElement>>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Linq.IGrouping(Of TKey, TElement))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Linq.IGrouping`2
    name: IGrouping
    fullName: System.Linq.IGrouping
    href: System.Linq.IGrouping`2.yml
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Linq.IGrouping`2
    name: IGrouping
    fullName: System.Linq.IGrouping
    href: System.Linq.IGrouping`2.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Func{{TKey},System.Collections.Generic.IEnumerable{{TSource}},{TResult}}
  parent: System
  definition: System.Func`3
  name: Func<TKey, IEnumerable<TSource>, TResult>
  name.vb: Func(Of TKey, IEnumerable(Of TSource), TResult)
  fullName: System.Func<TKey, System.Collections.Generic.IEnumerable<TSource>, TResult>
  fullName.vb: System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TSource), TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Func{{TKey},System.Collections.Generic.IEnumerable{{TElement}},{TResult}}
  parent: System
  definition: System.Func`3
  name: Func<TKey, IEnumerable<TElement>, TResult>
  name.vb: Func(Of TKey, IEnumerable(Of TElement), TResult)
  fullName: System.Func<TKey, System.Collections.Generic.IEnumerable<TElement>, TResult>
  fullName.vb: System.Func(Of TKey, System.Collections.Generic.IEnumerable(Of TElement), TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{TFirst}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TFirst>
  name.vb: IEnumerable(Of TFirst)
  fullName: System.Collections.Generic.IEnumerable<TFirst>
  fullName.vb: System.Collections.Generic.IEnumerable(Of TFirst)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TFirst
    fullName: TFirst
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TFirst
    fullName: TFirst
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{TSecond}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TSecond>
  name.vb: IEnumerable(Of TSecond)
  fullName: System.Collections.Generic.IEnumerable<TSecond>
  fullName.vb: System.Collections.Generic.IEnumerable(Of TSecond)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSecond
    fullName: TSecond
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSecond
    fullName: TSecond
  - name: )
    fullName: )
- uid: System.Func{{TFirst},{TSecond},{TResult}}
  parent: System
  definition: System.Func`3
  name: Func<TFirst, TSecond, TResult>
  name.vb: Func(Of TFirst, TSecond, TResult)
  fullName: System.Func<TFirst, TSecond, TResult>
  fullName.vb: System.Func(Of TFirst, TSecond, TResult)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TFirst
    fullName: TFirst
  - name: ', '
    fullName: ', '
  - name: TSecond
    fullName: TSecond
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TFirst
    fullName: TFirst
  - name: ', '
    fullName: ', '
  - name: TSecond
    fullName: TSecond
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEqualityComparer{{TSource}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<TSource>
  name.vb: IEqualityComparer(Of TSource)
  fullName: System.Collections.Generic.IEqualityComparer<TSource>
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of TSource)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: '{TSource}[]'
  isExternal: false
  name: TSource[]
  name.vb: TSource()
  fullName: TSource[]
  fullName.vb: TSource()
  spec.csharp:
  - name: TSource
    fullName: TSource
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - name: TSource
    fullName: TSource
  - name: ()
    fullName: ()
- uid: System.Collections.Generic.List{{TSource}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<TSource>
  name.vb: List(Of TSource)
  fullName: System.Collections.Generic.List<TSource>
  fullName.vb: System.Collections.Generic.List(Of TSource)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
- uid: System.Collections.Generic.List`1
  parent: System.Collections.Generic
  isExternal: true
  name: List<T>
  name.vb: List(Of T)
  fullName: System.Collections.Generic.List<T>
  fullName.vb: System.Collections.Generic.List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{{TKey},{TSource}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<TKey, TSource>
  name.vb: Dictionary(Of TKey, TSource)
  fullName: System.Collections.Generic.Dictionary<TKey, TSource>
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TSource)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  parent: System.Collections.Generic
  isExternal: true
  name: Dictionary<TKey, TValue>
  name.vb: Dictionary(Of TKey, TValue)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TValue
    fullName: TValue
  - name: )
    fullName: )
- uid: System.Collections.Generic.Dictionary{{TKey},{TElement}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<TKey, TElement>
  name.vb: Dictionary(Of TKey, TElement)
  fullName: System.Collections.Generic.Dictionary<TKey, TElement>
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TElement)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
- uid: System.Linq.ILookup{{TKey},{TSource}}
  parent: System.Linq
  definition: System.Linq.ILookup`2
  href: System.Linq.ILookup`2.yml
  name: ILookup<TKey, TSource>
  name.vb: ILookup(Of TKey, TSource)
  fullName: System.Linq.ILookup<TKey, TSource>
  fullName.vb: System.Linq.ILookup(Of TKey, TSource)
  spec.csharp:
  - uid: System.Linq.ILookup`2
    name: ILookup
    fullName: System.Linq.ILookup
    href: System.Linq.ILookup`2.yml
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.ILookup`2
    name: ILookup
    fullName: System.Linq.ILookup
    href: System.Linq.ILookup`2.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
- uid: System.Linq.ILookup`2
  parent: System.Linq
  isExternal: false
  href: System.Linq.ILookup`2.yml
  name: ILookup<TKey, TElement>
  name.vb: ILookup(Of TKey, TElement)
  fullName: System.Linq.ILookup<TKey, TElement>
  fullName.vb: System.Linq.ILookup(Of TKey, TElement)
  type: Interface
  spec.csharp:
  - uid: System.Linq.ILookup`2
    name: ILookup
    fullName: System.Linq.ILookup
    href: System.Linq.ILookup`2.yml
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.ILookup`2
    name: ILookup
    fullName: System.Linq.ILookup
    href: System.Linq.ILookup`2.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
- uid: System.Linq.ILookup{{TKey},{TElement}}
  parent: System.Linq
  definition: System.Linq.ILookup`2
  href: System.Linq.ILookup`2.yml
  name: ILookup<TKey, TElement>
  name.vb: ILookup(Of TKey, TElement)
  fullName: System.Linq.ILookup<TKey, TElement>
  fullName.vb: System.Linq.ILookup(Of TKey, TElement)
  spec.csharp:
  - uid: System.Linq.ILookup`2
    name: ILookup
    fullName: System.Linq.ILookup
    href: System.Linq.ILookup`2.yml
  - name: <
    fullName: <
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.ILookup`2
    name: ILookup
    fullName: System.Linq.ILookup
    href: System.Linq.ILookup`2.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TKey
    fullName: TKey
  - name: ', '
    fullName: ', '
  - name: TElement
    fullName: TElement
  - name: )
    fullName: )
- uid: '{TSource}'
  isExternal: false
  name: TSource
  fullName: TSource
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Collections.Generic.IEnumerable{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Int32>
  name.vb: IEnumerable(Of Int32)
  fullName: System.Collections.Generic.IEnumerable<System.Int32>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: '{TResult}'
  isExternal: false
  name: TResult
  fullName: TResult
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  fullName: System.Int64
- uid: System.Func{{TSource},{TSource},{TSource}}
  parent: System
  definition: System.Func`3
  name: Func<TSource, TSource, TSource>
  name.vb: Func(Of TSource, TSource, TSource)
  fullName: System.Func<TSource, TSource, TSource>
  fullName.vb: System.Func(Of TSource, TSource, TSource)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
- uid: '{TAccumulate}'
  isExternal: false
  name: TAccumulate
  fullName: TAccumulate
- uid: System.Func{{TAccumulate},{TSource},{TAccumulate}}
  parent: System
  definition: System.Func`3
  name: Func<TAccumulate, TSource, TAccumulate>
  name.vb: Func(Of TAccumulate, TSource, TAccumulate)
  fullName: System.Func<TAccumulate, TSource, TAccumulate>
  fullName.vb: System.Func(Of TAccumulate, TSource, TAccumulate)
  spec.csharp:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TAccumulate
    fullName: TAccumulate
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`3
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - name: TAccumulate
    fullName: TAccumulate
  - name: )
    fullName: )
- uid: System.Func{{TAccumulate},{TResult}}
  parent: System
  definition: System.Func`2
  name: Func<TAccumulate, TResult>
  name.vb: Func(Of TAccumulate, TResult)
  fullName: System.Func<TAccumulate, TResult>
  fullName.vb: System.Func(Of TAccumulate, TResult)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TAccumulate
    fullName: TAccumulate
  - name: ', '
    fullName: ', '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Nullable{System.Int32}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Nullable<Int32>>
  name.vb: IEnumerable(Of Nullable(Of Int32))
  fullName: System.Collections.Generic.IEnumerable<System.Nullable<System.Int32>>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Nullable(Of System.Int32))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  name.vb: Nullable(Of Int32)
  fullName: System.Nullable<System.Int32>
  fullName.vb: System.Nullable(Of System.Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Nullable`1
  parent: System
  isExternal: true
  name: Nullable<T>
  name.vb: Nullable(Of T)
  fullName: System.Nullable<T>
  fullName.vb: System.Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Int64}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Int64>
  name.vb: IEnumerable(Of Int64)
  fullName: System.Collections.Generic.IEnumerable<System.Int64>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Int64)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Nullable{System.Int64}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Nullable<Int64>>
  name.vb: IEnumerable(Of Nullable(Of Int64))
  fullName: System.Collections.Generic.IEnumerable<System.Nullable<System.Int64>>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Nullable(Of System.Int64))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Nullable{System.Int64}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int64>
  name.vb: Nullable(Of Int64)
  fullName: System.Nullable<System.Int64>
  fullName.vb: System.Nullable(Of System.Int64)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Single}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Single>
  name.vb: IEnumerable(Of Single)
  fullName: System.Collections.Generic.IEnumerable<System.Single>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Single)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  fullName: System.Single
- uid: System.Collections.Generic.IEnumerable{System.Nullable{System.Single}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Nullable<Single>>
  name.vb: IEnumerable(Of Nullable(Of Single))
  fullName: System.Collections.Generic.IEnumerable<System.Nullable<System.Single>>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Nullable(Of System.Single))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Nullable{System.Single}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Single>
  name.vb: Nullable(Of Single)
  fullName: System.Nullable<System.Single>
  fullName.vb: System.Nullable(Of System.Single)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Double}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Double>
  name.vb: IEnumerable(Of Double)
  fullName: System.Collections.Generic.IEnumerable<System.Double>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Double)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  fullName: System.Double
- uid: System.Collections.Generic.IEnumerable{System.Nullable{System.Double}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Nullable<Double>>
  name.vb: IEnumerable(Of Nullable(Of Double))
  fullName: System.Collections.Generic.IEnumerable<System.Nullable<System.Double>>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Nullable(Of System.Double))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  name.vb: Nullable(Of Double)
  fullName: System.Nullable<System.Double>
  fullName.vb: System.Nullable(Of System.Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Decimal}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Decimal>
  name.vb: IEnumerable(Of Decimal)
  fullName: System.Collections.Generic.IEnumerable<System.Decimal>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Decimal)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  fullName: System.Decimal
- uid: System.Collections.Generic.IEnumerable{System.Nullable{System.Decimal}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Nullable<Decimal>>
  name.vb: IEnumerable(Of Nullable(Of Decimal))
  fullName: System.Collections.Generic.IEnumerable<System.Nullable<System.Decimal>>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Nullable(Of System.Decimal))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Nullable{System.Decimal}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Decimal>
  name.vb: Nullable(Of Decimal)
  fullName: System.Nullable<System.Decimal>
  fullName.vb: System.Nullable(Of System.Decimal)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
- uid: System.Func{{TSource},System.Int32}
  parent: System
  definition: System.Func`2
  name: Func<TSource, Int32>
  name.vb: Func(Of TSource, Int32)
  fullName: System.Func<TSource, System.Int32>
  fullName.vb: System.Func(Of TSource, System.Int32)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Func{{TSource},System.Nullable{System.Int32}}
  parent: System
  definition: System.Func`2
  name: Func<TSource, Nullable<Int32>>
  name.vb: Func(Of TSource, Nullable(Of Int32))
  fullName: System.Func<TSource, System.Nullable<System.Int32>>
  fullName.vb: System.Func(Of TSource, System.Nullable(Of System.Int32))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Func{{TSource},System.Int64}
  parent: System
  definition: System.Func`2
  name: Func<TSource, Int64>
  name.vb: Func(Of TSource, Int64)
  fullName: System.Func<TSource, System.Int64>
  fullName.vb: System.Func(Of TSource, System.Int64)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
- uid: System.Func{{TSource},System.Nullable{System.Int64}}
  parent: System
  definition: System.Func`2
  name: Func<TSource, Nullable<Int64>>
  name.vb: Func(Of TSource, Nullable(Of Int64))
  fullName: System.Func<TSource, System.Nullable<System.Int64>>
  fullName.vb: System.Func(Of TSource, System.Nullable(Of System.Int64))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Func{{TSource},System.Single}
  parent: System
  definition: System.Func`2
  name: Func<TSource, Single>
  name.vb: Func(Of TSource, Single)
  fullName: System.Func<TSource, System.Single>
  fullName.vb: System.Func(Of TSource, System.Single)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
- uid: System.Func{{TSource},System.Nullable{System.Single}}
  parent: System
  definition: System.Func`2
  name: Func<TSource, Nullable<Single>>
  name.vb: Func(Of TSource, Nullable(Of Single))
  fullName: System.Func<TSource, System.Nullable<System.Single>>
  fullName.vb: System.Func(Of TSource, System.Nullable(Of System.Single))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Func{{TSource},System.Double}
  parent: System
  definition: System.Func`2
  name: Func<TSource, Double>
  name.vb: Func(Of TSource, Double)
  fullName: System.Func<TSource, System.Double>
  fullName.vb: System.Func(Of TSource, System.Double)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
- uid: System.Func{{TSource},System.Nullable{System.Double}}
  parent: System
  definition: System.Func`2
  name: Func<TSource, Nullable<Double>>
  name.vb: Func(Of TSource, Nullable(Of Double))
  fullName: System.Func<TSource, System.Nullable<System.Double>>
  fullName.vb: System.Func(Of TSource, System.Nullable(Of System.Double))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
- uid: System.Func{{TSource},System.Decimal}
  parent: System
  definition: System.Func`2
  name: Func<TSource, Decimal>
  name.vb: Func(Of TSource, Decimal)
  fullName: System.Func<TSource, System.Decimal>
  fullName.vb: System.Func(Of TSource, System.Decimal)
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
- uid: System.Func{{TSource},System.Nullable{System.Decimal}}
  parent: System
  definition: System.Func`2
  name: Func<TSource, Nullable<Decimal>>
  name.vb: Func(Of TSource, Nullable(Of Decimal))
  fullName: System.Func<TSource, System.Nullable<System.Decimal>>
  fullName.vb: System.Func(Of TSource, System.Nullable(Of System.Decimal))
  spec.csharp:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`2
    name: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Decimal
    name: Decimal
    fullName: System.Decimal
    isExternal: true
  - name: )
    fullName: )
  - name: )
    fullName: )
