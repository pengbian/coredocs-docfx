items:
- uid: System.Dynamic.DynamicMetaObjectBinder
  id: DynamicMetaObjectBinder
  parent: System.Dynamic
  children:
  - System.Dynamic.DynamicMetaObjectBinder.#ctor
  - System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])
  - System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{ParameterExpression},LabelTarget)
  - System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])
  - System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])
  - System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)
  - System.Dynamic.DynamicMetaObjectBinder.ReturnType
  href: System.Dynamic.DynamicMetaObjectBinder.yml
  name: DynamicMetaObjectBinder
  fullName: System.Dynamic.DynamicMetaObjectBinder
  type: Class
  source:
    remote: &o0
      path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs
    startLine: 20
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Dynamic
  summary: The dynamic call site binder that participates in the [System.Dynamic.DynamicMetaObject](System.Dynamic.DynamicMetaObject.yml) binding protocol.
  remarks: >-
    The <see cref="T:System.Runtime.CompilerServices.CallSiteBinder" /> performs the binding of the dynamic operation using the runtime values

    as input. On the other hand, the <see cref="T:System.Dynamic.DynamicMetaObjectBinder" /> participates in the <see cref="T:System.Dynamic.DynamicMetaObject" />

    binding protocol.
  syntax:
    content: 'public abstract class DynamicMetaObjectBinder : CallSiteBinder'
    content.vb: Public MustInherit Class DynamicMetaObjectBinder Inherits CallSiteBinder
  inheritance:
  - System.Object
  - System.Runtime.CompilerServices.CallSiteBinder
  inheritedMembers:
  - System.Runtime.CompilerServices.CallSiteBinder.UpdateLabel
  - System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{{T}},System.Object[])
  - System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1({T})
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Dynamic.DynamicMetaObjectBinder.#ctor
  id: '#ctor'
  parent: System.Dynamic.DynamicMetaObjectBinder
  href: System.Dynamic.DynamicMetaObjectBinder.yml
  name: DynamicMetaObjectBinder()
  fullName: System.Dynamic.DynamicMetaObjectBinder.DynamicMetaObjectBinder()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs
    startLine: 27
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Dynamic
  summary: Initializes a new instance of the [System.Dynamic.DynamicMetaObjectBinder](System.Dynamic.DynamicMetaObjectBinder.yml) class.
  syntax:
    content: protected DynamicMetaObjectBinder()
    content.vb: Protected Sub New
- uid: System.Dynamic.DynamicMetaObjectBinder.ReturnType
  id: ReturnType
  parent: System.Dynamic.DynamicMetaObjectBinder
  href: System.Dynamic.DynamicMetaObjectBinder.yml
  name: ReturnType
  fullName: System.Dynamic.DynamicMetaObjectBinder.ReturnType
  type: Property
  source:
    remote: *o0
    path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs
    startLine: 34
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Dynamic
  summary: The result type of the operation.
  syntax:
    content: public virtual Type ReturnType { get; }
    content.vb: Public Overridable ReadOnly Property ReturnType As Type
    parameters: []
    return:
      type: System.Type
- uid: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{ParameterExpression},LabelTarget)
  id: Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{ParameterExpression},LabelTarget)
  parent: System.Dynamic.DynamicMetaObjectBinder
  href: System.Dynamic.DynamicMetaObjectBinder.yml
  name: Bind(Object[], ReadOnlyCollection<ParameterExpression>, LabelTarget)
  name.vb: Bind(Object(), ReadOnlyCollection(Of ParameterExpression), LabelTarget)
  fullName: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object[], System.Collections.ObjectModel.ReadOnlyCollection<ParameterExpression>, LabelTarget)
  fullName.vb: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Object(), System.Collections.ObjectModel.ReadOnlyCollection(Of ParameterExpression), LabelTarget)
  type: Method
  source:
    remote: *o0
    path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs
    startLine: 51
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Dynamic
  summary: Performs the runtime binding of the dynamic operation on a set of arguments.
  syntax:
    content: public override sealed Expression Bind(object[] args, ReadOnlyCollection<ParameterExpression> parameters, LabelTarget returnLabel)
    content.vb: Public NotOverridable Overrides Function Bind(args As Object(), parameters As ReadOnlyCollection(Of ParameterExpression), returnLabel As LabelTarget) As Expression
    parameters:
    - id: args
      type: System.Object[]
      description: An array of arguments to the dynamic operation.
    - id: parameters
      type: System.Collections.ObjectModel.ReadOnlyCollection{ParameterExpression}
      description: The array of <see cref="!:ParameterExpression" /> instances that represent the parameters of the call site in the binding process.
    - id: returnLabel
      type: LabelTarget
      description: A LabelTarget used to return the result of the dynamic binding.
    return:
      type: Expression
      description: >-
        An Expression that performs tests on the dynamic operation arguments, and

        performs the dynamic operation if the tests are valid. If the tests fail on

        subsequent occurrences of the dynamic operation, Bind will be called again

        to produce a new <see cref="!:Expression" /> for the new argument types.
  overridden: System.Runtime.CompilerServices.CallSiteBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{ParameterExpression},LabelTarget)
- uid: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])
  id: Bind(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])
  parent: System.Dynamic.DynamicMetaObjectBinder
  href: System.Dynamic.DynamicMetaObjectBinder.yml
  name: Bind(DynamicMetaObject, DynamicMetaObject[])
  name.vb: Bind(DynamicMetaObject, DynamicMetaObject())
  fullName: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject[])
  fullName.vb: System.Dynamic.DynamicMetaObjectBinder.Bind(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject())
  type: Method
  source:
    remote: *o0
    path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs
    startLine: 171
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Dynamic
  summary: When overridden in the derived class, performs the binding of the dynamic operation.
  syntax:
    content: public abstract DynamicMetaObject Bind(DynamicMetaObject target, DynamicMetaObject[] args)
    content.vb: Public MustOverride Function Bind(target As DynamicMetaObject, args As DynamicMetaObject()) As DynamicMetaObject
    parameters:
    - id: target
      type: System.Dynamic.DynamicMetaObject
      description: The target of the dynamic operation.
    - id: args
      type: System.Dynamic.DynamicMetaObject[]
      description: An array of arguments of the dynamic operation.
    return:
      type: System.Dynamic.DynamicMetaObject
      description: The [System.Dynamic.DynamicMetaObject](System.Dynamic.DynamicMetaObject.yml) representing the result of the binding.
- uid: System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)
  id: GetUpdateExpression(System.Type)
  parent: System.Dynamic.DynamicMetaObjectBinder
  href: System.Dynamic.DynamicMetaObjectBinder.yml
  name: GetUpdateExpression(Type)
  fullName: System.Dynamic.DynamicMetaObjectBinder.GetUpdateExpression(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs
    startLine: 181
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Dynamic
  summary: >-
    Gets an expression that will cause the binding to be updated. It

    indicates that the expression's binding is no longer valid.

    This is typically used when the "version" of a dynamic object has

    changed.
  syntax:
    content: public Expression GetUpdateExpression(Type type)
    content.vb: Public Function GetUpdateExpression(type As Type) As Expression
    parameters:
    - id: type
      type: System.Type
      description: The <see cref="!:Expression.Type">Type</see> property of the resulting expression; any type is allowed.
    return:
      type: Expression
      description: The update expression.
- uid: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])
  id: Defer(System.Dynamic.DynamicMetaObject,System.Dynamic.DynamicMetaObject[])
  parent: System.Dynamic.DynamicMetaObjectBinder
  href: System.Dynamic.DynamicMetaObjectBinder.yml
  name: Defer(DynamicMetaObject, DynamicMetaObject[])
  name.vb: Defer(DynamicMetaObject, DynamicMetaObject())
  fullName: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject[])
  fullName.vb: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject, System.Dynamic.DynamicMetaObject())
  type: Method
  source:
    remote: *o0
    path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs
    startLine: 193
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Dynamic
  summary: Defers the binding of the operation until later time when the runtime values of all dynamic operation arguments have been computed.
  syntax:
    content: public DynamicMetaObject Defer(DynamicMetaObject target, params DynamicMetaObject[] args)
    content.vb: Public Function Defer(target As DynamicMetaObject, ParamArray args As DynamicMetaObject()) As DynamicMetaObject
    parameters:
    - id: target
      type: System.Dynamic.DynamicMetaObject
      description: The target of the dynamic operation.
    - id: args
      type: System.Dynamic.DynamicMetaObject[]
      description: An array of arguments of the dynamic operation.
    return:
      type: System.Dynamic.DynamicMetaObject
      description: The [System.Dynamic.DynamicMetaObject](System.Dynamic.DynamicMetaObject.yml) representing the result of the binding.
- uid: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])
  id: Defer(System.Dynamic.DynamicMetaObject[])
  parent: System.Dynamic.DynamicMetaObjectBinder
  href: System.Dynamic.DynamicMetaObjectBinder.yml
  name: Defer(DynamicMetaObject[])
  name.vb: Defer(DynamicMetaObject())
  fullName: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject[])
  fullName.vb: System.Dynamic.DynamicMetaObjectBinder.Defer(System.Dynamic.DynamicMetaObject())
  type: Method
  source:
    remote: *o0
    path: src/System.Dynamic.Runtime/src/System/Dynamic/DynamicMetaObjectBinder.cs
    startLine: 215
  assemblies:
  - System.Dynamic.Runtime
  namespace: System.Dynamic
  summary: Defers the binding of the operation until later time when the runtime values of all dynamic operation arguments have been computed.
  syntax:
    content: public DynamicMetaObject Defer(params DynamicMetaObject[] args)
    content.vb: Public Function Defer(ParamArray args As DynamicMetaObject()) As DynamicMetaObject
    parameters:
    - id: args
      type: System.Dynamic.DynamicMetaObject[]
      description: An array of arguments of the dynamic operation.
    return:
      type: System.Dynamic.DynamicMetaObject
      description: The [System.Dynamic.DynamicMetaObject](System.Dynamic.DynamicMetaObject.yml) representing the result of the binding.
references:
- uid: System.Dynamic.DynamicMetaObject
  parent: System.Dynamic
  isExternal: false
  href: System.Dynamic.DynamicMetaObject.yml
  name: DynamicMetaObject
  fullName: System.Dynamic.DynamicMetaObject
  type: Class
  summary: Represents the dynamic binding and a binding logic of an object participating in the dynamic binding.
- uid: System.Runtime.CompilerServices.CallSiteBinder
  parent: System.Runtime.CompilerServices
  isExternal: false
  href: System.Runtime.CompilerServices.CallSiteBinder.yml
  name: CallSiteBinder
  fullName: System.Runtime.CompilerServices.CallSiteBinder
  type: Class
  summary: Class responsible for runtime binding of the dynamic operations on the dynamic call site.
- uid: System.Dynamic.DynamicMetaObjectBinder
  parent: System.Dynamic
  isExternal: false
  href: System.Dynamic.DynamicMetaObjectBinder.yml
  name: DynamicMetaObjectBinder
  fullName: System.Dynamic.DynamicMetaObjectBinder
  type: Class
  summary: The dynamic call site binder that participates in the @'System.Dynamic.DynamicMetaObject' binding protocol.
- uid: System.Dynamic
  isExternal: false
  name: System.Dynamic
  fullName: System.Dynamic
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Runtime.CompilerServices.CallSiteBinder.UpdateLabel
  parent: System.Runtime.CompilerServices.CallSiteBinder
  isExternal: false
  href: System.Runtime.CompilerServices.CallSiteBinder.yml
  name: UpdateLabel
  fullName: System.Runtime.CompilerServices.CallSiteBinder.UpdateLabel
- uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{{T}},System.Object[])
  parent: System.Runtime.CompilerServices.CallSiteBinder
  isExternal: true
  href: System.Runtime.CompilerServices.CallSiteBinder.yml
  name: BindDelegate<T>(CallSite<T>, Object[])
  name.vb: BindDelegate(Of T)(CallSite(Of T), Object())
  fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate<T>(System.Runtime.CompilerServices.CallSite<T>, System.Object[])
  fullName.vb: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate(Of T)(System.Runtime.CompilerServices.CallSite(Of T), System.Object())
  spec.csharp:
  - uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])
    name: BindDelegate<T>
    fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate<T>
    href: System.Runtime.CompilerServices.CallSiteBinder.yml
  - name: (
    fullName: (
  - uid: System.Runtime.CompilerServices.CallSite`1
    name: CallSite
    fullName: System.Runtime.CompilerServices.CallSite
    href: System.Runtime.CompilerServices.CallSite`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate``1(System.Runtime.CompilerServices.CallSite{``0},System.Object[])
    name: BindDelegate(Of T)
    fullName: System.Runtime.CompilerServices.CallSiteBinder.BindDelegate(Of T)
    href: System.Runtime.CompilerServices.CallSiteBinder.yml
  - name: (
    fullName: (
  - uid: System.Runtime.CompilerServices.CallSite`1
    name: CallSite
    fullName: System.Runtime.CompilerServices.CallSite
    href: System.Runtime.CompilerServices.CallSite`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
  - name: )
    fullName: )
- uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1({T})
  parent: System.Runtime.CompilerServices.CallSiteBinder
  isExternal: false
  href: System.Runtime.CompilerServices.CallSiteBinder.yml
  name: CacheTarget<T>(T)
  name.vb: CacheTarget(Of T)(T)
  fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget<T>(T)
  fullName.vb: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget(Of T)(T)
  spec.csharp:
  - uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)
    name: CacheTarget<T>
    fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget<T>
    href: System.Runtime.CompilerServices.CallSiteBinder.yml
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget``1(``0)
    name: CacheTarget(Of T)
    fullName: System.Runtime.CompilerServices.CallSiteBinder.CacheTarget(Of T)
    href: System.Runtime.CompilerServices.CallSiteBinder.yml
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Runtime.CompilerServices
  isExternal: false
  name: System.Runtime.CompilerServices
  fullName: System.Runtime.CompilerServices
  type: Namespace
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  fullName: System.Type
- uid: System.Runtime.CompilerServices.CallSiteBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{ParameterExpression},LabelTarget)
  parent: System.Runtime.CompilerServices.CallSiteBinder
  isExternal: true
  href: System.Runtime.CompilerServices.CallSiteBinder.yml
  name: Bind(Object[], ReadOnlyCollection<ParameterExpression>, LabelTarget)
  name.vb: Bind(Object(), ReadOnlyCollection(Of ParameterExpression), LabelTarget)
  fullName: System.Runtime.CompilerServices.CallSiteBinder.Bind(System.Object[], System.Collections.ObjectModel.ReadOnlyCollection<ParameterExpression>, LabelTarget)
  fullName.vb: System.Runtime.CompilerServices.CallSiteBinder.Bind(System.Object(), System.Collections.ObjectModel.ReadOnlyCollection(Of ParameterExpression), LabelTarget)
  spec.csharp:
  - uid: System.Runtime.CompilerServices.CallSiteBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{ParameterExpression},LabelTarget)
    name: Bind
    fullName: System.Runtime.CompilerServices.CallSiteBinder.Bind
    href: System.Runtime.CompilerServices.CallSiteBinder.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    fullName: <
  - uid: ParameterExpression
    name: ParameterExpression
    fullName: ParameterExpression
    isExternal: true
  - name: '>'
    fullName: '>'
  - name: ', '
    fullName: ', '
  - uid: LabelTarget
    name: LabelTarget
    fullName: LabelTarget
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Runtime.CompilerServices.CallSiteBinder.Bind(System.Object[],System.Collections.ObjectModel.ReadOnlyCollection{ParameterExpression},LabelTarget)
    name: Bind
    fullName: System.Runtime.CompilerServices.CallSiteBinder.Bind
    href: System.Runtime.CompilerServices.CallSiteBinder.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: ParameterExpression
    name: ParameterExpression
    fullName: ParameterExpression
    isExternal: true
  - name: )
    fullName: )
  - name: ', '
    fullName: ', '
  - uid: LabelTarget
    name: LabelTarget
    fullName: LabelTarget
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object[]
  isExternal: true
  name: Object[]
  name.vb: Object()
  fullName: System.Object[]
  fullName.vb: System.Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ()
    fullName: ()
- uid: System.Collections.ObjectModel.ReadOnlyCollection{ParameterExpression}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<ParameterExpression>
  name.vb: ReadOnlyCollection(Of ParameterExpression)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<ParameterExpression>
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of ParameterExpression)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    fullName: <
  - uid: ParameterExpression
    name: ParameterExpression
    fullName: ParameterExpression
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: ParameterExpression
    name: ParameterExpression
    fullName: ParameterExpression
    isExternal: true
  - name: )
    fullName: )
- uid: LabelTarget
  isExternal: true
  name: LabelTarget
  fullName: LabelTarget
- uid: Expression
  isExternal: true
  name: Expression
  fullName: Expression
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<T>
  name.vb: ReadOnlyCollection(Of T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  type: Namespace
- uid: System.Dynamic.DynamicMetaObject[]
  isExternal: false
  href: System.Dynamic.DynamicMetaObject.yml
  name: DynamicMetaObject[]
  name.vb: DynamicMetaObject()
  fullName: System.Dynamic.DynamicMetaObject[]
  fullName.vb: System.Dynamic.DynamicMetaObject()
  spec.csharp:
  - uid: System.Dynamic.DynamicMetaObject
    name: DynamicMetaObject
    fullName: System.Dynamic.DynamicMetaObject
    href: System.Dynamic.DynamicMetaObject.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Dynamic.DynamicMetaObject
    name: DynamicMetaObject
    fullName: System.Dynamic.DynamicMetaObject
    href: System.Dynamic.DynamicMetaObject.yml
  - name: ()
    fullName: ()
