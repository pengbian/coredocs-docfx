items:
- uid: System.Reflection.Metadata.PEReaderExtensions
  id: PEReaderExtensions
  parent: System.Reflection.Metadata
  children:
  - System.Reflection.Metadata.PEReaderExtensions.GetMetadataReader(System.Reflection.PortableExecutable.PEReader)
  - System.Reflection.Metadata.PEReaderExtensions.GetMetadataReader(System.Reflection.PortableExecutable.PEReader,System.Reflection.Metadata.MetadataReaderOptions)
  - System.Reflection.Metadata.PEReaderExtensions.GetMetadataReader(System.Reflection.PortableExecutable.PEReader,System.Reflection.Metadata.MetadataReaderOptions,System.Reflection.Metadata.MetadataStringDecoder)
  - System.Reflection.Metadata.PEReaderExtensions.GetMethodBody(System.Reflection.PortableExecutable.PEReader,System.Int32)
  href: System.Reflection.Metadata.PEReaderExtensions.yml
  name: PEReaderExtensions
  fullName: System.Reflection.Metadata.PEReaderExtensions
  type: Class
  source:
    remote: &o0
      path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/PEReaderExtensions.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/PEReaderExtensions.cs
    startLine: 11
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public class PEReaderExtensions
    content.vb: Public Class PEReaderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Reflection.Metadata.PEReaderExtensions.GetMethodBody(System.Reflection.PortableExecutable.PEReader,System.Int32)
  id: GetMethodBody(System.Reflection.PortableExecutable.PEReader,System.Int32)
  parent: System.Reflection.Metadata.PEReaderExtensions
  href: System.Reflection.Metadata.PEReaderExtensions.yml
  name: GetMethodBody(PEReader, Int32)
  fullName: System.Reflection.Metadata.PEReaderExtensions.GetMethodBody(System.Reflection.PortableExecutable.PEReader, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/PEReaderExtensions.cs
    startLine: 20
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  summary: Returns a body block of a method with specified Relative Virtual Address (RVA);
  syntax:
    content: public static MethodBodyBlock GetMethodBody(PEReader peReader, int relativeVirtualAddress)
    content.vb: Public Shared Function GetMethodBody(peReader As PEReader, relativeVirtualAddress As Integer) As MethodBodyBlock
    parameters:
    - id: peReader
      type: System.Reflection.PortableExecutable.PEReader
    - id: relativeVirtualAddress
      type: System.Int32
    return:
      type: System.Reflection.Metadata.MethodBodyBlock
  exceptions:
  - type: System.ArgumentNullException
    description: is null.
  - type: System.BadImageFormatException
    description: The body is not found in the metadata or is invalid.
  - type: System.InvalidOperationException
    description: Section where the method is stored is not available.
- uid: System.Reflection.Metadata.PEReaderExtensions.GetMetadataReader(System.Reflection.PortableExecutable.PEReader)
  id: GetMetadataReader(System.Reflection.PortableExecutable.PEReader)
  parent: System.Reflection.Metadata.PEReaderExtensions
  href: System.Reflection.Metadata.PEReaderExtensions.yml
  name: GetMetadataReader(PEReader)
  fullName: System.Reflection.Metadata.PEReaderExtensions.GetMetadataReader(System.Reflection.PortableExecutable.PEReader)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/PEReaderExtensions.cs
    startLine: 44
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  summary: Gets a [System.Reflection.Metadata.MetadataReader](System.Reflection.Metadata.MetadataReader.yml) from a [System.Reflection.PortableExecutable.PEReader](System.Reflection.PortableExecutable.PEReader.yml).
  remarks: The caller must keep the <see cref="T:System.Reflection.PortableExecutable.PEReader" /> alive and undisposed throughout the lifetime of the metadata reader.
  syntax:
    content: public static MetadataReader GetMetadataReader(PEReader peReader)
    content.vb: Public Shared Function GetMetadataReader(peReader As PEReader) As MetadataReader
    parameters:
    - id: peReader
      type: System.Reflection.PortableExecutable.PEReader
    return:
      type: System.Reflection.Metadata.MetadataReader
- uid: System.Reflection.Metadata.PEReaderExtensions.GetMetadataReader(System.Reflection.PortableExecutable.PEReader,System.Reflection.Metadata.MetadataReaderOptions)
  id: GetMetadataReader(System.Reflection.PortableExecutable.PEReader,System.Reflection.Metadata.MetadataReaderOptions)
  parent: System.Reflection.Metadata.PEReaderExtensions
  href: System.Reflection.Metadata.PEReaderExtensions.yml
  name: GetMetadataReader(PEReader, MetadataReaderOptions)
  fullName: System.Reflection.Metadata.PEReaderExtensions.GetMetadataReader(System.Reflection.PortableExecutable.PEReader, System.Reflection.Metadata.MetadataReaderOptions)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/PEReaderExtensions.cs
    startLine: 56
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  summary: Gets a [System.Reflection.Metadata.MetadataReader](System.Reflection.Metadata.MetadataReader.yml) from a [System.Reflection.PortableExecutable.PEReader](System.Reflection.PortableExecutable.PEReader.yml).
  remarks: The caller must keep the <see cref="T:System.Reflection.PortableExecutable.PEReader" /> alive and undisposed throughout the lifetime of the metadata reader.
  syntax:
    content: public static MetadataReader GetMetadataReader(PEReader peReader, MetadataReaderOptions options)
    content.vb: Public Shared Function GetMetadataReader(peReader As PEReader, options As MetadataReaderOptions) As MetadataReader
    parameters:
    - id: peReader
      type: System.Reflection.PortableExecutable.PEReader
    - id: options
      type: System.Reflection.Metadata.MetadataReaderOptions
    return:
      type: System.Reflection.Metadata.MetadataReader
- uid: System.Reflection.Metadata.PEReaderExtensions.GetMetadataReader(System.Reflection.PortableExecutable.PEReader,System.Reflection.Metadata.MetadataReaderOptions,System.Reflection.Metadata.MetadataStringDecoder)
  id: GetMetadataReader(System.Reflection.PortableExecutable.PEReader,System.Reflection.Metadata.MetadataReaderOptions,System.Reflection.Metadata.MetadataStringDecoder)
  parent: System.Reflection.Metadata.PEReaderExtensions
  href: System.Reflection.Metadata.PEReaderExtensions.yml
  name: GetMetadataReader(PEReader, MetadataReaderOptions, MetadataStringDecoder)
  fullName: System.Reflection.Metadata.PEReaderExtensions.GetMetadataReader(System.Reflection.PortableExecutable.PEReader, System.Reflection.Metadata.MetadataReaderOptions, System.Reflection.Metadata.MetadataStringDecoder)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/PEReaderExtensions.cs
    startLine: 67
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  summary: Gets a [System.Reflection.Metadata.MetadataReader](System.Reflection.Metadata.MetadataReader.yml) from a [System.Reflection.PortableExecutable.PEReader](System.Reflection.PortableExecutable.PEReader.yml).
  remarks: The caller must keep the <see cref="T:System.Reflection.PortableExecutable.PEReader" /> alive and undisposed throughout the lifetime of the metadata reader.
  syntax:
    content: public static MetadataReader GetMetadataReader(PEReader peReader, MetadataReaderOptions options, MetadataStringDecoder utf8Decoder)
    content.vb: Public Shared Function GetMetadataReader(peReader As PEReader, options As MetadataReaderOptions, utf8Decoder As MetadataStringDecoder) As MetadataReader
    parameters:
    - id: peReader
      type: System.Reflection.PortableExecutable.PEReader
    - id: options
      type: System.Reflection.Metadata.MetadataReaderOptions
    - id: utf8Decoder
      type: System.Reflection.Metadata.MetadataStringDecoder
    return:
      type: System.Reflection.Metadata.MetadataReader
references:
- uid: System.Reflection.Metadata
  isExternal: false
  name: System.Reflection.Metadata
  fullName: System.Reflection.Metadata
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.ArgumentNullException
- uid: System.BadImageFormatException
- uid: System.InvalidOperationException
  parent: System
  isExternal: true
  name: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Reflection.PortableExecutable.PEReader
  parent: System.Reflection.PortableExecutable
  isExternal: false
  href: System.Reflection.PortableExecutable.PEReader.yml
  name: PEReader
  fullName: System.Reflection.PortableExecutable.PEReader
  type: Class
  summary: Portable Executable format reader.
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Reflection.Metadata.MethodBodyBlock
  parent: System.Reflection.Metadata
  isExternal: false
  href: System.Reflection.Metadata.MethodBodyBlock.yml
  name: MethodBodyBlock
  fullName: System.Reflection.Metadata.MethodBodyBlock
  type: Class
- uid: System.Reflection.PortableExecutable
  isExternal: false
  name: System.Reflection.PortableExecutable
  fullName: System.Reflection.PortableExecutable
  type: Namespace
- uid: System.Reflection.Metadata.MetadataReader
  isExternal: false
  href: System.Reflection.Metadata.MetadataReader.yml
  name: MetadataReader
  fullName: System.Reflection.Metadata.MetadataReader
  type: Class
  summary: Reads metadata as defined byte the ECMA 335 CLI specification.
- uid: System.Reflection.Metadata.MetadataReaderOptions
  parent: System.Reflection.Metadata
  isExternal: false
  href: System.Reflection.Metadata.MetadataReaderOptions.yml
  name: MetadataReaderOptions
  fullName: System.Reflection.Metadata.MetadataReaderOptions
  type: Enum
- uid: System.Reflection.Metadata.MetadataStringDecoder
  parent: System.Reflection.Metadata
  isExternal: false
  href: System.Reflection.Metadata.MetadataStringDecoder.yml
  name: MetadataStringDecoder
  fullName: System.Reflection.Metadata.MetadataStringDecoder
  type: Class
  summary: >-
    Provides the @'System.Reflection.Metadata.MetadataReader' with a custom mechanism for decoding

    byte sequences in metadata that represent text.
