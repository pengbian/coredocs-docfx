items:
- uid: System.Collections.Generic.LinkedList`1
  id: LinkedList`1
  parent: System.Collections.Generic
  children:
  - System.Collections.Generic.LinkedList`1.#ctor
  - System.Collections.Generic.LinkedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)
  - System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})
  - System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)
  - System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})
  - System.Collections.Generic.LinkedList`1.AddFirst(`0)
  - System.Collections.Generic.LinkedList`1.AddFirst(System.Collections.Generic.LinkedListNode{`0})
  - System.Collections.Generic.LinkedList`1.AddLast(`0)
  - System.Collections.Generic.LinkedList`1.AddLast(System.Collections.Generic.LinkedListNode{`0})
  - System.Collections.Generic.LinkedList`1.Clear
  - System.Collections.Generic.LinkedList`1.Contains(`0)
  - System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)
  - System.Collections.Generic.LinkedList`1.Count
  - System.Collections.Generic.LinkedList`1.Find(`0)
  - System.Collections.Generic.LinkedList`1.FindLast(`0)
  - System.Collections.Generic.LinkedList`1.First
  - System.Collections.Generic.LinkedList`1.GetEnumerator
  - System.Collections.Generic.LinkedList`1.Last
  - System.Collections.Generic.LinkedList`1.Remove(`0)
  - System.Collections.Generic.LinkedList`1.Remove(System.Collections.Generic.LinkedListNode{`0})
  - System.Collections.Generic.LinkedList`1.RemoveFirst
  - System.Collections.Generic.LinkedList`1.RemoveLast
  - System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection{T}#Add(`0)
  - System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  - System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Generic.LinkedList`1.System#Collections#ICollection#IsSynchronized
  - System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot
  - System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator
  href: System.Collections.Generic.LinkedList`1.yml
  name: LinkedList<T>
  name.vb: LinkedList(Of T)
  fullName: System.Collections.Generic.LinkedList<T>
  fullName.vb: System.Collections.Generic.LinkedList(Of T)
  type: Class
  source:
    remote: &o0
      path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 9
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: 'public class LinkedList<T> : ICollection<T>, ICollection, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable'
    content.vb: Public Class LinkedList(Of T) Implements ICollection(Of T), ICollection, IReadOnlyCollection(Of T), IEnumerable(Of T), IEnumerable
    typeParameters:
    - id: T
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.ICollection{{T}}
  - System.Collections.ICollection
  - System.Collections.Generic.IReadOnlyCollection{{T}}
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Collections.Generic.LinkedList`1.#ctor
  id: '#ctor'
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: LinkedList()
  fullName: System.Collections.Generic.LinkedList<T>.LinkedList()
  fullName.vb: System.Collections.Generic.LinkedList(Of T).LinkedList()
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 19
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public LinkedList()
    content.vb: Public Sub New
- uid: System.Collections.Generic.LinkedList`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  id: '#ctor(System.Collections.Generic.IEnumerable{`0})'
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: LinkedList(IEnumerable<T>)
  name.vb: LinkedList(IEnumerable(Of T))
  fullName: System.Collections.Generic.LinkedList<T>.LinkedList(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: System.Collections.Generic.LinkedList(Of T).LinkedList(System.Collections.Generic.IEnumerable(Of T))
  type: Constructor
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 23
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public LinkedList(IEnumerable<T> collection)
    content.vb: Public Sub New(collection As IEnumerable(Of T))
    parameters:
    - id: collection
      type: System.Collections.Generic.IEnumerable{{T}}
- uid: System.Collections.Generic.LinkedList`1.Count
  id: Count
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: Count
  fullName: System.Collections.Generic.LinkedList<T>.Count
  fullName.vb: System.Collections.Generic.LinkedList(Of T).Count
  type: Property
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 36
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
- uid: System.Collections.Generic.LinkedList`1.First
  id: First
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: First
  fullName: System.Collections.Generic.LinkedList<T>.First
  fullName.vb: System.Collections.Generic.LinkedList(Of T).First
  type: Property
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 41
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public LinkedListNode<T> First { get; }
    content.vb: Public ReadOnly Property First As LinkedListNode(Of T)
    parameters: []
    return:
      type: System.Collections.Generic.LinkedListNode{{T}}
- uid: System.Collections.Generic.LinkedList`1.Last
  id: Last
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: Last
  fullName: System.Collections.Generic.LinkedList<T>.Last
  fullName.vb: System.Collections.Generic.LinkedList(Of T).Last
  type: Property
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 46
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public LinkedListNode<T> Last { get; }
    content.vb: Public ReadOnly Property Last As LinkedListNode(Of T)
    parameters: []
    return:
      type: System.Collections.Generic.LinkedListNode{{T}}
- uid: System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  id: System#Collections#Generic#ICollection{T}#IsReadOnly
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.LinkedList<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.Generic.LinkedList(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  type: Property
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 51
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: bool ICollection<T>.IsReadOnly { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.ICollection<T>.IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly
    parameters: []
    return:
      type: System.Boolean
- uid: System.Collections.Generic.LinkedList`1.System#Collections#Generic#ICollection{T}#Add(`0)
  id: System#Collections#Generic#ICollection{T}#Add(`0)
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: ICollection<T>.Add(T)
  name.vb: System.Collections.Generic.ICollection<T>.Add(T)
  fullName: System.Collections.Generic.LinkedList<T>.System.Collections.Generic.ICollection<T>.Add(T)
  fullName.vb: System.Collections.Generic.LinkedList(Of T).System.Collections.Generic.ICollection<T>.Add(T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 56
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: void ICollection<T>.Add(T value)
    content.vb: Sub System.Collections.Generic.ICollection<T>.Add(value As T) Implements ICollection(Of T).Add
    parameters:
    - id: value
      type: '{T}'
- uid: System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)
  id: AddAfter(System.Collections.Generic.LinkedListNode{`0},`0)
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: AddAfter(LinkedListNode<T>, T)
  name.vb: AddAfter(LinkedListNode(Of T), T)
  fullName: System.Collections.Generic.LinkedList<T>.AddAfter(System.Collections.Generic.LinkedListNode<T>, T)
  fullName.vb: System.Collections.Generic.LinkedList(Of T).AddAfter(System.Collections.Generic.LinkedListNode(Of T), T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 61
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public LinkedListNode<T> AddAfter(LinkedListNode<T> node, T value)
    content.vb: Public Function AddAfter(node As LinkedListNode(Of T), value As T) As LinkedListNode(Of T)
    parameters:
    - id: node
      type: System.Collections.Generic.LinkedListNode{{T}}
    - id: value
      type: '{T}'
    return:
      type: System.Collections.Generic.LinkedListNode{{T}}
- uid: System.Collections.Generic.LinkedList`1.AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})
  id: AddAfter(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: AddAfter(LinkedListNode<T>, LinkedListNode<T>)
  name.vb: AddAfter(LinkedListNode(Of T), LinkedListNode(Of T))
  fullName: System.Collections.Generic.LinkedList<T>.AddAfter(System.Collections.Generic.LinkedListNode<T>, System.Collections.Generic.LinkedListNode<T>)
  fullName.vb: System.Collections.Generic.LinkedList(Of T).AddAfter(System.Collections.Generic.LinkedListNode(Of T), System.Collections.Generic.LinkedListNode(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 69
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public void AddAfter(LinkedListNode<T> node, LinkedListNode<T> newNode)
    content.vb: Public Sub AddAfter(node As LinkedListNode(Of T), newNode As LinkedListNode(Of T))
    parameters:
    - id: node
      type: System.Collections.Generic.LinkedListNode{{T}}
    - id: newNode
      type: System.Collections.Generic.LinkedListNode{{T}}
- uid: System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)
  id: AddBefore(System.Collections.Generic.LinkedListNode{`0},`0)
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: AddBefore(LinkedListNode<T>, T)
  name.vb: AddBefore(LinkedListNode(Of T), T)
  fullName: System.Collections.Generic.LinkedList<T>.AddBefore(System.Collections.Generic.LinkedListNode<T>, T)
  fullName.vb: System.Collections.Generic.LinkedList(Of T).AddBefore(System.Collections.Generic.LinkedListNode(Of T), T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 77
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public LinkedListNode<T> AddBefore(LinkedListNode<T> node, T value)
    content.vb: Public Function AddBefore(node As LinkedListNode(Of T), value As T) As LinkedListNode(Of T)
    parameters:
    - id: node
      type: System.Collections.Generic.LinkedListNode{{T}}
    - id: value
      type: '{T}'
    return:
      type: System.Collections.Generic.LinkedListNode{{T}}
- uid: System.Collections.Generic.LinkedList`1.AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})
  id: AddBefore(System.Collections.Generic.LinkedListNode{`0},System.Collections.Generic.LinkedListNode{`0})
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: AddBefore(LinkedListNode<T>, LinkedListNode<T>)
  name.vb: AddBefore(LinkedListNode(Of T), LinkedListNode(Of T))
  fullName: System.Collections.Generic.LinkedList<T>.AddBefore(System.Collections.Generic.LinkedListNode<T>, System.Collections.Generic.LinkedListNode<T>)
  fullName.vb: System.Collections.Generic.LinkedList(Of T).AddBefore(System.Collections.Generic.LinkedListNode(Of T), System.Collections.Generic.LinkedListNode(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 89
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public void AddBefore(LinkedListNode<T> node, LinkedListNode<T> newNode)
    content.vb: Public Sub AddBefore(node As LinkedListNode(Of T), newNode As LinkedListNode(Of T))
    parameters:
    - id: node
      type: System.Collections.Generic.LinkedListNode{{T}}
    - id: newNode
      type: System.Collections.Generic.LinkedListNode{{T}}
- uid: System.Collections.Generic.LinkedList`1.AddFirst(`0)
  id: AddFirst(`0)
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: AddFirst(T)
  fullName: System.Collections.Generic.LinkedList<T>.AddFirst(T)
  fullName.vb: System.Collections.Generic.LinkedList(Of T).AddFirst(T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 101
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public LinkedListNode<T> AddFirst(T value)
    content.vb: Public Function AddFirst(value As T) As LinkedListNode(Of T)
    parameters:
    - id: value
      type: '{T}'
    return:
      type: System.Collections.Generic.LinkedListNode{{T}}
- uid: System.Collections.Generic.LinkedList`1.AddFirst(System.Collections.Generic.LinkedListNode{`0})
  id: AddFirst(System.Collections.Generic.LinkedListNode{`0})
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: AddFirst(LinkedListNode<T>)
  name.vb: AddFirst(LinkedListNode(Of T))
  fullName: System.Collections.Generic.LinkedList<T>.AddFirst(System.Collections.Generic.LinkedListNode<T>)
  fullName.vb: System.Collections.Generic.LinkedList(Of T).AddFirst(System.Collections.Generic.LinkedListNode(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 116
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public void AddFirst(LinkedListNode<T> node)
    content.vb: Public Sub AddFirst(node As LinkedListNode(Of T))
    parameters:
    - id: node
      type: System.Collections.Generic.LinkedListNode{{T}}
- uid: System.Collections.Generic.LinkedList`1.AddLast(`0)
  id: AddLast(`0)
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: AddLast(T)
  fullName: System.Collections.Generic.LinkedList<T>.AddLast(T)
  fullName.vb: System.Collections.Generic.LinkedList(Of T).AddLast(T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 132
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public LinkedListNode<T> AddLast(T value)
    content.vb: Public Function AddLast(value As T) As LinkedListNode(Of T)
    parameters:
    - id: value
      type: '{T}'
    return:
      type: System.Collections.Generic.LinkedListNode{{T}}
- uid: System.Collections.Generic.LinkedList`1.AddLast(System.Collections.Generic.LinkedListNode{`0})
  id: AddLast(System.Collections.Generic.LinkedListNode{`0})
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: AddLast(LinkedListNode<T>)
  name.vb: AddLast(LinkedListNode(Of T))
  fullName: System.Collections.Generic.LinkedList<T>.AddLast(System.Collections.Generic.LinkedListNode<T>)
  fullName.vb: System.Collections.Generic.LinkedList(Of T).AddLast(System.Collections.Generic.LinkedListNode(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 146
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public void AddLast(LinkedListNode<T> node)
    content.vb: Public Sub AddLast(node As LinkedListNode(Of T))
    parameters:
    - id: node
      type: System.Collections.Generic.LinkedListNode{{T}}
- uid: System.Collections.Generic.LinkedList`1.Clear
  id: Clear
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: Clear()
  fullName: System.Collections.Generic.LinkedList<T>.Clear()
  fullName.vb: System.Collections.Generic.LinkedList(Of T).Clear()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 161
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
- uid: System.Collections.Generic.LinkedList`1.Contains(`0)
  id: Contains(`0)
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: Contains(T)
  fullName: System.Collections.Generic.LinkedList<T>.Contains(T)
  fullName.vb: System.Collections.Generic.LinkedList(Of T).Contains(T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 176
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public bool Contains(T value)
    content.vb: Public Function Contains(value As T) As Boolean
    parameters:
    - id: value
      type: '{T}'
    return:
      type: System.Boolean
- uid: System.Collections.Generic.LinkedList`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: CopyTo(T[], Int32)
  name.vb: CopyTo(T(), Int32)
  fullName: System.Collections.Generic.LinkedList<T>.CopyTo(T[], System.Int32)
  fullName.vb: System.Collections.Generic.LinkedList(Of T).CopyTo(T(), System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 181
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public void CopyTo(T[] array, int index)
    content.vb: Public Sub CopyTo(array As T(), index As Integer)
    parameters:
    - id: array
      type: '{T}[]'
    - id: index
      type: System.Int32
- uid: System.Collections.Generic.LinkedList`1.Find(`0)
  id: Find(`0)
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: Find(T)
  fullName: System.Collections.Generic.LinkedList<T>.Find(T)
  fullName.vb: System.Collections.Generic.LinkedList(Of T).Find(T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 209
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public LinkedListNode<T> Find(T value)
    content.vb: Public Function Find(value As T) As LinkedListNode(Of T)
    parameters:
    - id: value
      type: '{T}'
    return:
      type: System.Collections.Generic.LinkedListNode{{T}}
- uid: System.Collections.Generic.LinkedList`1.FindLast(`0)
  id: FindLast(`0)
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: FindLast(T)
  fullName: System.Collections.Generic.LinkedList<T>.FindLast(T)
  fullName.vb: System.Collections.Generic.LinkedList(Of T).FindLast(T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 241
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public LinkedListNode<T> FindLast(T value)
    content.vb: Public Function FindLast(value As T) As LinkedListNode(Of T)
    parameters:
    - id: value
      type: '{T}'
    return:
      type: System.Collections.Generic.LinkedListNode{{T}}
- uid: System.Collections.Generic.LinkedList`1.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: GetEnumerator()
  fullName: System.Collections.Generic.LinkedList<T>.GetEnumerator()
  fullName.vb: System.Collections.Generic.LinkedList(Of T).GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 277
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public LinkedList<T>.Enumerator GetEnumerator()
    content.vb: Public Function GetEnumerator As LinkedList(Of T).Enumerator
    return:
      type: System.Collections.Generic.LinkedList`1.Enumerator
- uid: System.Collections.Generic.LinkedList`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{T}#GetEnumerator
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: IEnumerable<T>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.LinkedList<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName.vb: System.Collections.Generic.LinkedList(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 282
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: IEnumerator<T> IEnumerable<T>.GetEnumerator()
    content.vb: Function System.Collections.Generic.IEnumerable<T>.GetEnumerator As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator
    return:
      type: System.Collections.Generic.IEnumerator{{T}}
- uid: System.Collections.Generic.LinkedList`1.Remove(`0)
  id: Remove(`0)
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: Remove(T)
  fullName: System.Collections.Generic.LinkedList<T>.Remove(T)
  fullName.vb: System.Collections.Generic.LinkedList(Of T).Remove(T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 287
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public bool Remove(T value)
    content.vb: Public Function Remove(value As T) As Boolean
    parameters:
    - id: value
      type: '{T}'
    return:
      type: System.Boolean
- uid: System.Collections.Generic.LinkedList`1.Remove(System.Collections.Generic.LinkedListNode{`0})
  id: Remove(System.Collections.Generic.LinkedListNode{`0})
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: Remove(LinkedListNode<T>)
  name.vb: Remove(LinkedListNode(Of T))
  fullName: System.Collections.Generic.LinkedList<T>.Remove(System.Collections.Generic.LinkedListNode<T>)
  fullName.vb: System.Collections.Generic.LinkedList(Of T).Remove(System.Collections.Generic.LinkedListNode(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 298
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public void Remove(LinkedListNode<T> node)
    content.vb: Public Sub Remove(node As LinkedListNode(Of T))
    parameters:
    - id: node
      type: System.Collections.Generic.LinkedListNode{{T}}
- uid: System.Collections.Generic.LinkedList`1.RemoveFirst
  id: RemoveFirst
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: RemoveFirst()
  fullName: System.Collections.Generic.LinkedList<T>.RemoveFirst()
  fullName.vb: System.Collections.Generic.LinkedList(Of T).RemoveFirst()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 304
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public void RemoveFirst()
    content.vb: Public Sub RemoveFirst
- uid: System.Collections.Generic.LinkedList`1.RemoveLast
  id: RemoveLast
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: RemoveLast()
  fullName: System.Collections.Generic.LinkedList<T>.RemoveLast()
  fullName.vb: System.Collections.Generic.LinkedList(Of T).RemoveLast()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 310
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: public void RemoveLast()
    content.vb: Public Sub RemoveLast
- uid: System.Collections.Generic.LinkedList`1.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.Generic.LinkedList<T>.System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.Generic.LinkedList(Of T).System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 386
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: bool ICollection.IsSynchronized { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized
    parameters: []
    return:
      type: System.Boolean
- uid: System.Collections.Generic.LinkedList`1.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
  fullName: System.Collections.Generic.LinkedList<T>.System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.Generic.LinkedList(Of T).System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 391
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: object ICollection.SyncRoot { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot
    parameters: []
    return:
      type: System.Object
- uid: System.Collections.Generic.LinkedList`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: ICollection.CopyTo(Array, Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.Generic.LinkedList<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  fullName.vb: System.Collections.Generic.LinkedList(Of T).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 403
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: void ICollection.CopyTo(Array array, int index)
    content.vb: Sub System.Collections.ICollection.CopyTo(array As Array, index As Integer) Implements ICollection.CopyTo
    parameters:
    - id: array
      type: System.Array
    - id: index
      type: System.Int32
- uid: System.Collections.Generic.LinkedList`1.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.Generic.LinkedList`1
  href: System.Collections.Generic.LinkedList`1.yml
  name: IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.LinkedList<T>.System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.Generic.LinkedList(Of T).System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections/src/System/Collections/Generic/LinkedList.cs
    startLine: 463
  assemblies:
  - System.Collections
  namespace: System.Collections.Generic
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
references:
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Collections.Generic.IEnumerable{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  name.vb: IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  name.vb: IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.LinkedListNode{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.LinkedListNode`1
  href: System.Collections.Generic.LinkedListNode`1.yml
  name: LinkedListNode<T>
  name.vb: LinkedListNode(Of T)
  fullName: System.Collections.Generic.LinkedListNode<T>
  fullName.vb: System.Collections.Generic.LinkedListNode(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.LinkedListNode`1
    name: LinkedListNode
    fullName: System.Collections.Generic.LinkedListNode
    href: System.Collections.Generic.LinkedListNode`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.LinkedListNode`1
    name: LinkedListNode
    fullName: System.Collections.Generic.LinkedListNode
    href: System.Collections.Generic.LinkedListNode`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.LinkedListNode`1
  parent: System.Collections.Generic
  isExternal: false
  href: System.Collections.Generic.LinkedListNode`1.yml
  name: LinkedListNode<T>
  name.vb: LinkedListNode(Of T)
  fullName: System.Collections.Generic.LinkedListNode<T>
  fullName.vb: System.Collections.Generic.LinkedListNode(Of T)
  type: Class
  spec.csharp:
  - uid: System.Collections.Generic.LinkedListNode`1
    name: LinkedListNode
    fullName: System.Collections.Generic.LinkedListNode
    href: System.Collections.Generic.LinkedListNode`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.LinkedListNode`1
    name: LinkedListNode
    fullName: System.Collections.Generic.LinkedListNode
    href: System.Collections.Generic.LinkedListNode`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: '{T}[]'
  isExternal: false
  name: T[]
  name.vb: T()
  fullName: T[]
  fullName.vb: T()
  spec.csharp:
  - name: T
    fullName: T
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - name: T
    fullName: T
  - name: ()
    fullName: ()
- uid: System.Collections.Generic.LinkedList`1.Enumerator
  parent: System.Collections.Generic
  isExternal: false
  href: System.Collections.Generic.LinkedList`1.Enumerator.yml
  name: LinkedList.Enumerator<>
  name.vb: LinkedList.Enumerator(Of )
  fullName: System.Collections.Generic.LinkedList.Enumerator<>
  fullName.vb: System.Collections.Generic.LinkedList.Enumerator(Of )
  type: Struct
  spec.csharp:
  - uid: System.Collections.Generic.LinkedList`1.Enumerator
    name: LinkedList.Enumerator
    fullName: System.Collections.Generic.LinkedList.Enumerator
    href: System.Collections.Generic.LinkedList`1.Enumerator.yml
  - name: <
    fullName: <
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.LinkedList`1.Enumerator
    name: LinkedList.Enumerator
    fullName: System.Collections.Generic.LinkedList.Enumerator
    href: System.Collections.Generic.LinkedList`1.Enumerator.yml
  - name: '(Of '
    fullName: '(Of '
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  name: IEnumerator<T>
  name.vb: IEnumerator(Of T)
  fullName: System.Collections.Generic.IEnumerator<T>
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<T>
  name.vb: IEnumerator(Of T)
  fullName: System.Collections.Generic.IEnumerator<T>
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  fullName: System.Array
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
