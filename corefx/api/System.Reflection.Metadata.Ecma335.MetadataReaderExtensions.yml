items:
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  id: MetadataReaderExtensions
  parent: System.Reflection.Metadata.Ecma335
  children:
  - System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetEditAndContinueLogEntries(System.Reflection.Metadata.MetadataReader)
  - System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetEditAndContinueMapEntries(System.Reflection.Metadata.MetadataReader)
  - System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetHeapMetadataOffset(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.HeapIndex)
  - System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetHeapSize(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.HeapIndex)
  - System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.BlobHandle)
  - System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.StringHandle)
  - System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.UserStringHandle)
  - System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableMetadataOffset(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.TableIndex)
  - System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableRowCount(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.TableIndex)
  - System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableRowSize(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.TableIndex)
  - System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTypesWithEvents(System.Reflection.Metadata.MetadataReader)
  - System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTypesWithProperties(System.Reflection.Metadata.MetadataReader)
  href: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.yml
  name: MetadataReaderExtensions
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  type: Class
  source:
    remote: &o0
      path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Ecma335/MetadataReaderExtensions.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Ecma335/MetadataReaderExtensions.cs
    startLine: 12
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  summary: Provides extension methods for working with certain raw elements of the Ecma 335 metadata tables and heaps.
  syntax:
    content: public class MetadataReaderExtensions
    content.vb: Public Class MetadataReaderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableRowCount(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.TableIndex)
  id: GetTableRowCount(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.TableIndex)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  href: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.yml
  name: GetTableRowCount(MetadataReader, TableIndex)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableRowCount(System.Reflection.Metadata.MetadataReader, System.Reflection.Metadata.Ecma335.TableIndex)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Ecma335/MetadataReaderExtensions.cs
    startLine: 19
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  summary: Returns the number of rows in the specified table.
  syntax:
    content: public static int GetTableRowCount(MetadataReader reader, TableIndex tableIndex)
    content.vb: Public Shared Function GetTableRowCount(reader As MetadataReader, tableIndex As TableIndex) As Integer
    parameters:
    - id: reader
      type: System.Reflection.Metadata.MetadataReader
    - id: tableIndex
      type: System.Reflection.Metadata.Ecma335.TableIndex
    return:
      type: System.Int32
  exceptions:
  - type: System.ArgumentNullException
    description: is null.
  - type: System.ArgumentOutOfRangeException
    description: is not a valid table index.
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableRowSize(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.TableIndex)
  id: GetTableRowSize(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.TableIndex)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  href: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.yml
  name: GetTableRowSize(MetadataReader, TableIndex)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableRowSize(System.Reflection.Metadata.MetadataReader, System.Reflection.Metadata.Ecma335.TableIndex)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Ecma335/MetadataReaderExtensions.cs
    startLine: 39
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  summary: Returns the size of a row in the specified table.
  syntax:
    content: public static int GetTableRowSize(MetadataReader reader, TableIndex tableIndex)
    content.vb: Public Shared Function GetTableRowSize(reader As MetadataReader, tableIndex As TableIndex) As Integer
    parameters:
    - id: reader
      type: System.Reflection.Metadata.MetadataReader
    - id: tableIndex
      type: System.Reflection.Metadata.Ecma335.TableIndex
    return:
      type: System.Int32
  exceptions:
  - type: System.ArgumentNullException
    description: is null.
  - type: System.ArgumentOutOfRangeException
    description: is not a valid table index.
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableMetadataOffset(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.TableIndex)
  id: GetTableMetadataOffset(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.TableIndex)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  href: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.yml
  name: GetTableMetadataOffset(MetadataReader, TableIndex)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTableMetadataOffset(System.Reflection.Metadata.MetadataReader, System.Reflection.Metadata.Ecma335.TableIndex)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Ecma335/MetadataReaderExtensions.cs
    startLine: 104
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  summary: Returns the offset from the start of metadata to the specified table.
  syntax:
    content: public static int GetTableMetadataOffset(MetadataReader reader, TableIndex tableIndex)
    content.vb: Public Shared Function GetTableMetadataOffset(reader As MetadataReader, tableIndex As TableIndex) As Integer
    parameters:
    - id: reader
      type: System.Reflection.Metadata.MetadataReader
    - id: tableIndex
      type: System.Reflection.Metadata.Ecma335.TableIndex
    return:
      type: System.Int32
  exceptions:
  - type: System.ArgumentNullException
    description: is null.
  - type: System.ArgumentOutOfRangeException
    description: is not a valid table index.
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetHeapSize(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.HeapIndex)
  id: GetHeapSize(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.HeapIndex)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  href: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.yml
  name: GetHeapSize(MetadataReader, HeapIndex)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetHeapSize(System.Reflection.Metadata.MetadataReader, System.Reflection.Metadata.Ecma335.HeapIndex)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Ecma335/MetadataReaderExtensions.cs
    startLine: 176
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  summary: Returns the size of the specified heap.
  syntax:
    content: public static int GetHeapSize(MetadataReader reader, HeapIndex heapIndex)
    content.vb: Public Shared Function GetHeapSize(reader As MetadataReader, heapIndex As HeapIndex) As Integer
    parameters:
    - id: reader
      type: System.Reflection.Metadata.MetadataReader
    - id: heapIndex
      type: System.Reflection.Metadata.Ecma335.HeapIndex
    return:
      type: System.Int32
  exceptions:
  - type: System.ArgumentNullException
    description: is null.
  - type: System.ArgumentOutOfRangeException
    description: is not a valid heap index.
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetHeapMetadataOffset(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.HeapIndex)
  id: GetHeapMetadataOffset(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.Ecma335.HeapIndex)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  href: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.yml
  name: GetHeapMetadataOffset(MetadataReader, HeapIndex)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetHeapMetadataOffset(System.Reflection.Metadata.MetadataReader, System.Reflection.Metadata.Ecma335.HeapIndex)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Ecma335/MetadataReaderExtensions.cs
    startLine: 191
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  summary: Returns the offset from the start of metadata to the specified heap.
  syntax:
    content: public static int GetHeapMetadataOffset(MetadataReader reader, HeapIndex heapIndex)
    content.vb: Public Shared Function GetHeapMetadataOffset(reader As MetadataReader, heapIndex As HeapIndex) As Integer
    parameters:
    - id: reader
      type: System.Reflection.Metadata.MetadataReader
    - id: heapIndex
      type: System.Reflection.Metadata.Ecma335.HeapIndex
    return:
      type: System.Int32
  exceptions:
  - type: System.ArgumentNullException
    description: is null.
  - type: System.ArgumentOutOfRangeException
    description: is not a valid heap index.
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.UserStringHandle)
  id: GetNextHandle(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.UserStringHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  href: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.yml
  name: GetNextHandle(MetadataReader, UserStringHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle(System.Reflection.Metadata.MetadataReader, System.Reflection.Metadata.UserStringHandle)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Ecma335/MetadataReaderExtensions.cs
    startLine: 233
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  summary: Returns the a handle to the UserString that follows the given one in the UserString heap or a nil handle if it is the last one.
  syntax:
    content: public static UserStringHandle GetNextHandle(MetadataReader reader, UserStringHandle handle)
    content.vb: Public Shared Function GetNextHandle(reader As MetadataReader, handle As UserStringHandle) As UserStringHandle
    parameters:
    - id: reader
      type: System.Reflection.Metadata.MetadataReader
    - id: handle
      type: System.Reflection.Metadata.UserStringHandle
    return:
      type: System.Reflection.Metadata.UserStringHandle
  exceptions:
  - type: System.ArgumentNullException
    description: is null.
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.BlobHandle)
  id: GetNextHandle(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.BlobHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  href: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.yml
  name: GetNextHandle(MetadataReader, BlobHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle(System.Reflection.Metadata.MetadataReader, System.Reflection.Metadata.BlobHandle)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Ecma335/MetadataReaderExtensions.cs
    startLine: 247
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  summary: Returns the a handle to the Blob that follows the given one in the Blob heap or a nil handle if it is the last one.
  syntax:
    content: public static BlobHandle GetNextHandle(MetadataReader reader, BlobHandle handle)
    content.vb: Public Shared Function GetNextHandle(reader As MetadataReader, handle As BlobHandle) As BlobHandle
    parameters:
    - id: reader
      type: System.Reflection.Metadata.MetadataReader
    - id: handle
      type: System.Reflection.Metadata.BlobHandle
    return:
      type: System.Reflection.Metadata.BlobHandle
  exceptions:
  - type: System.ArgumentNullException
    description: is null.
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.StringHandle)
  id: GetNextHandle(System.Reflection.Metadata.MetadataReader,System.Reflection.Metadata.StringHandle)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  href: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.yml
  name: GetNextHandle(MetadataReader, StringHandle)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetNextHandle(System.Reflection.Metadata.MetadataReader, System.Reflection.Metadata.StringHandle)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Ecma335/MetadataReaderExtensions.cs
    startLine: 261
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  summary: Returns the a handle to the String that follows the given one in the String heap or a nil handle if it is the last one.
  syntax:
    content: public static StringHandle GetNextHandle(MetadataReader reader, StringHandle handle)
    content.vb: Public Shared Function GetNextHandle(reader As MetadataReader, handle As StringHandle) As StringHandle
    parameters:
    - id: reader
      type: System.Reflection.Metadata.MetadataReader
    - id: handle
      type: System.Reflection.Metadata.StringHandle
    return:
      type: System.Reflection.Metadata.StringHandle
  exceptions:
  - type: System.ArgumentNullException
    description: is null.
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetEditAndContinueLogEntries(System.Reflection.Metadata.MetadataReader)
  id: GetEditAndContinueLogEntries(System.Reflection.Metadata.MetadataReader)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  href: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.yml
  name: GetEditAndContinueLogEntries(MetadataReader)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetEditAndContinueLogEntries(System.Reflection.Metadata.MetadataReader)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Ecma335/MetadataReaderExtensions.cs
    startLine: 275
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  summary: Enumerates entries of EnC log.
  syntax:
    content: public static IEnumerable<EditAndContinueLogEntry> GetEditAndContinueLogEntries(MetadataReader reader)
    content.vb: Public Shared Function GetEditAndContinueLogEntries(reader As MetadataReader) As IEnumerable(Of EditAndContinueLogEntry)
    parameters:
    - id: reader
      type: System.Reflection.Metadata.MetadataReader
    return:
      type: System.Collections.Generic.IEnumerable{System.Reflection.Metadata.Ecma335.EditAndContinueLogEntry}
  exceptions:
  - type: System.ArgumentNullException
    description: is null.
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetEditAndContinueMapEntries(System.Reflection.Metadata.MetadataReader)
  id: GetEditAndContinueMapEntries(System.Reflection.Metadata.MetadataReader)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  href: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.yml
  name: GetEditAndContinueMapEntries(MetadataReader)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetEditAndContinueMapEntries(System.Reflection.Metadata.MetadataReader)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Ecma335/MetadataReaderExtensions.cs
    startLine: 294
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  summary: Enumerates entries of EnC map.
  syntax:
    content: public static IEnumerable<EntityHandle> GetEditAndContinueMapEntries(MetadataReader reader)
    content.vb: Public Shared Function GetEditAndContinueMapEntries(reader As MetadataReader) As IEnumerable(Of EntityHandle)
    parameters:
    - id: reader
      type: System.Reflection.Metadata.MetadataReader
    return:
      type: System.Collections.Generic.IEnumerable{System.Reflection.Metadata.EntityHandle}
  exceptions:
  - type: System.ArgumentNullException
    description: is null.
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTypesWithProperties(System.Reflection.Metadata.MetadataReader)
  id: GetTypesWithProperties(System.Reflection.Metadata.MetadataReader)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  href: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.yml
  name: GetTypesWithProperties(MetadataReader)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTypesWithProperties(System.Reflection.Metadata.MetadataReader)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Ecma335/MetadataReaderExtensions.cs
    startLine: 314
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  summary: Enumerate types that define one or more properties.
  syntax:
    content: public static IEnumerable<TypeDefinitionHandle> GetTypesWithProperties(MetadataReader reader)
    content.vb: Public Shared Function GetTypesWithProperties(reader As MetadataReader) As IEnumerable(Of TypeDefinitionHandle)
    parameters:
    - id: reader
      type: System.Reflection.Metadata.MetadataReader
    return:
      type: System.Collections.Generic.IEnumerable{System.Reflection.Metadata.TypeDefinitionHandle}
      description: >-
        The resulting sequence corresponds exactly to entries in PropertyMap table,

        i.e. n-th returned [System.Reflection.Metadata.TypeDefinitionHandle](System.Reflection.Metadata.TypeDefinitionHandle.yml) is stored in n-th row of PropertyMap.
- uid: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTypesWithEvents(System.Reflection.Metadata.MetadataReader)
  id: GetTypesWithEvents(System.Reflection.Metadata.MetadataReader)
  parent: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions
  href: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.yml
  name: GetTypesWithEvents(MetadataReader)
  fullName: System.Reflection.Metadata.Ecma335.MetadataReaderExtensions.GetTypesWithEvents(System.Reflection.Metadata.MetadataReader)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Ecma335/MetadataReaderExtensions.cs
    startLine: 334
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata.Ecma335
  summary: Enumerate types that define one or more events.
  syntax:
    content: public static IEnumerable<TypeDefinitionHandle> GetTypesWithEvents(MetadataReader reader)
    content.vb: Public Shared Function GetTypesWithEvents(reader As MetadataReader) As IEnumerable(Of TypeDefinitionHandle)
    parameters:
    - id: reader
      type: System.Reflection.Metadata.MetadataReader
    return:
      type: System.Collections.Generic.IEnumerable{System.Reflection.Metadata.TypeDefinitionHandle}
      description: >-
        The resulting sequence corresponds exactly to entries in EventMap table,

        i.e. n-th returned [System.Reflection.Metadata.TypeDefinitionHandle](System.Reflection.Metadata.TypeDefinitionHandle.yml) is stored in n-th row of EventMap.
references:
- uid: System.Reflection.Metadata.Ecma335
  isExternal: false
  name: System.Reflection.Metadata.Ecma335
  fullName: System.Reflection.Metadata.Ecma335
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
- uid: System.Reflection.Metadata.MetadataReader
  isExternal: false
  href: System.Reflection.Metadata.MetadataReader.yml
  name: MetadataReader
  fullName: System.Reflection.Metadata.MetadataReader
  type: Class
  summary: Reads metadata as defined byte the ECMA 335 CLI specification.
- uid: System.Reflection.Metadata.Ecma335.TableIndex
  parent: System.Reflection.Metadata.Ecma335
  isExternal: false
  href: System.Reflection.Metadata.Ecma335.TableIndex.yml
  name: TableIndex
  fullName: System.Reflection.Metadata.Ecma335.TableIndex
  type: Enum
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Reflection.Metadata.Ecma335.HeapIndex
  parent: System.Reflection.Metadata.Ecma335
  isExternal: false
  href: System.Reflection.Metadata.Ecma335.HeapIndex.yml
  name: HeapIndex
  fullName: System.Reflection.Metadata.Ecma335.HeapIndex
  type: Enum
- uid: System.Reflection.Metadata.UserStringHandle
  parent: System.Reflection.Metadata
  isExternal: false
  href: System.Reflection.Metadata.UserStringHandle.yml
  name: UserStringHandle
  fullName: System.Reflection.Metadata.UserStringHandle
  type: Struct
- uid: System.Reflection.Metadata
  isExternal: false
  name: System.Reflection.Metadata
  fullName: System.Reflection.Metadata
  type: Namespace
- uid: System.Reflection.Metadata.BlobHandle
  parent: System.Reflection.Metadata
  isExternal: false
  href: System.Reflection.Metadata.BlobHandle.yml
  name: BlobHandle
  fullName: System.Reflection.Metadata.BlobHandle
  type: Struct
- uid: System.Reflection.Metadata.StringHandle
  parent: System.Reflection.Metadata
  isExternal: false
  href: System.Reflection.Metadata.StringHandle.yml
  name: StringHandle
  fullName: System.Reflection.Metadata.StringHandle
  type: Struct
- uid: System.Collections.Generic.IEnumerable{System.Reflection.Metadata.Ecma335.EditAndContinueLogEntry}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: System.Reflection.Metadata.Ecma335.EditAndContinueLogEntry.yml
  name: IEnumerable<EditAndContinueLogEntry>
  name.vb: IEnumerable(Of EditAndContinueLogEntry)
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.Metadata.Ecma335.EditAndContinueLogEntry>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Reflection.Metadata.Ecma335.EditAndContinueLogEntry)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Reflection.Metadata.Ecma335.EditAndContinueLogEntry
    name: EditAndContinueLogEntry
    fullName: System.Reflection.Metadata.Ecma335.EditAndContinueLogEntry
    href: System.Reflection.Metadata.Ecma335.EditAndContinueLogEntry.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.Metadata.Ecma335.EditAndContinueLogEntry
    name: EditAndContinueLogEntry
    fullName: System.Reflection.Metadata.Ecma335.EditAndContinueLogEntry
    href: System.Reflection.Metadata.Ecma335.EditAndContinueLogEntry.yml
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  name.vb: IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.IEnumerable{System.Reflection.Metadata.EntityHandle}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: System.Reflection.Metadata.EntityHandle.yml
  name: IEnumerable<EntityHandle>
  name.vb: IEnumerable(Of EntityHandle)
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.Metadata.EntityHandle>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Reflection.Metadata.EntityHandle)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Reflection.Metadata.EntityHandle
    name: EntityHandle
    fullName: System.Reflection.Metadata.EntityHandle
    href: System.Reflection.Metadata.EntityHandle.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.Metadata.EntityHandle
    name: EntityHandle
    fullName: System.Reflection.Metadata.EntityHandle
    href: System.Reflection.Metadata.EntityHandle.yml
  - name: )
    fullName: )
- uid: System.Reflection.Metadata.TypeDefinitionHandle
  parent: System.Reflection.Metadata
  isExternal: false
  href: System.Reflection.Metadata.TypeDefinitionHandle.yml
  name: TypeDefinitionHandle
  fullName: System.Reflection.Metadata.TypeDefinitionHandle
  type: Struct
- uid: System.Collections.Generic.IEnumerable{System.Reflection.Metadata.TypeDefinitionHandle}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: System.Reflection.Metadata.TypeDefinitionHandle.yml
  name: IEnumerable<TypeDefinitionHandle>
  name.vb: IEnumerable(Of TypeDefinitionHandle)
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.Metadata.TypeDefinitionHandle>
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Reflection.Metadata.TypeDefinitionHandle)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - uid: System.Reflection.Metadata.TypeDefinitionHandle
    name: TypeDefinitionHandle
    fullName: System.Reflection.Metadata.TypeDefinitionHandle
    href: System.Reflection.Metadata.TypeDefinitionHandle.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Reflection.Metadata.TypeDefinitionHandle
    name: TypeDefinitionHandle
    fullName: System.Reflection.Metadata.TypeDefinitionHandle
    href: System.Reflection.Metadata.TypeDefinitionHandle.yml
  - name: )
    fullName: )
