items:
- uid: System.Collections.Immutable.ImmutableList
  id: ImmutableList
  parent: System.Collections.Immutable
  children:
  - System.Collections.Immutable.ImmutableList.Create``1
  - System.Collections.Immutable.ImmutableList.Create``1(``0)
  - System.Collections.Immutable.ImmutableList.Create``1(``0[])
  - System.Collections.Immutable.ImmutableList.CreateBuilder``1
  - System.Collections.Immutable.ImmutableList.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  - System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)
  - System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  - System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)
  - System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)
  - System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)
  - System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  - System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)
  - System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)
  - System.Collections.Immutable.ImmutableList.Remove``1(System.Collections.Immutable.IImmutableList{``0},``0)
  - System.Collections.Immutable.ImmutableList.RemoveRange``1(System.Collections.Immutable.IImmutableList{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Collections.Immutable.ImmutableList.Replace``1(System.Collections.Immutable.IImmutableList{``0},``0,``0)
  - System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})
  href: System.Collections.Immutable.ImmutableList.yml
  name: ImmutableList
  fullName: System.Collections.Immutable.ImmutableList
  type: Class
  source:
    remote: &o0
      path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 12
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: A set of initialization methods for instances of [System.Collections.Immutable.ImmutableList`1](System.Collections.Immutable.ImmutableList`1.yml).
  syntax:
    content: public class ImmutableList
    content.vb: Public Class ImmutableList
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Collections.Immutable.ImmutableList.Create``1
  id: Create``1
  parent: System.Collections.Immutable.ImmutableList
  href: System.Collections.Immutable.ImmutableList.yml
  name: Create<T>()
  name.vb: Create(Of T)()
  fullName: System.Collections.Immutable.ImmutableList.Create<T>()
  fullName.vb: System.Collections.Immutable.ImmutableList.Create(Of T)()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 19
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Returns an empty collection.
  syntax:
    content: public static ImmutableList<T> Create<T>()
    content.vb: Public Shared Function Create(Of T) As ImmutableList(Of T)
    typeParameters:
    - id: T
      description: The type of items stored by the collection.
    return:
      type: System.Collections.Immutable.ImmutableList{{T}}
      description: The immutable collection.
- uid: System.Collections.Immutable.ImmutableList.Create``1(``0)
  id: Create``1(``0)
  parent: System.Collections.Immutable.ImmutableList
  href: System.Collections.Immutable.ImmutableList.yml
  name: Create<T>(T)
  name.vb: Create(Of T)(T)
  fullName: System.Collections.Immutable.ImmutableList.Create<T>(T)
  fullName.vb: System.Collections.Immutable.ImmutableList.Create(Of T)(T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 31
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable collection prefilled with the specified item.
  syntax:
    content: public static ImmutableList<T> Create<T>(T item)
    content.vb: Public Shared Function Create(Of T)(item As T) As ImmutableList(Of T)
    parameters:
    - id: item
      type: '{T}'
      description: The item to prepopulate.
    typeParameters:
    - id: T
      description: The type of items stored by the collection.
    return:
      type: System.Collections.Immutable.ImmutableList{{T}}
      description: The new immutable collection.
- uid: System.Collections.Immutable.ImmutableList.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  id: CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableList
  href: System.Collections.Immutable.ImmutableList.yml
  name: CreateRange<T>(IEnumerable<T>)
  name.vb: CreateRange(Of T)(IEnumerable(Of T))
  fullName: System.Collections.Immutable.ImmutableList.CreateRange<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: System.Collections.Immutable.ImmutableList.CreateRange(Of T)(System.Collections.Generic.IEnumerable(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 43
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable collection prefilled with the specified items.
  syntax:
    content: public static ImmutableList<T> CreateRange<T>(IEnumerable<T> items)
    content.vb: Public Shared Function CreateRange(Of T)(items As IEnumerable(Of T)) As ImmutableList(Of T)
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The items to prepopulate.
    typeParameters:
    - id: T
      description: The type of items stored by the collection.
    return:
      type: System.Collections.Immutable.ImmutableList{{T}}
      description: The new immutable collection.
- uid: System.Collections.Immutable.ImmutableList.Create``1(``0[])
  id: Create``1(``0[])
  parent: System.Collections.Immutable.ImmutableList
  href: System.Collections.Immutable.ImmutableList.yml
  name: Create<T>(T[])
  name.vb: Create(Of T)(T())
  fullName: System.Collections.Immutable.ImmutableList.Create<T>(T[])
  fullName.vb: System.Collections.Immutable.ImmutableList.Create(Of T)(T())
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 55
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable collection prefilled with the specified items.
  syntax:
    content: public static ImmutableList<T> Create<T>(params T[] items)
    content.vb: Public Shared Function Create(Of T)(ParamArray items As T()) As ImmutableList(Of T)
    parameters:
    - id: items
      type: '{T}[]'
      description: The items to prepopulate.
    typeParameters:
    - id: T
      description: The type of items stored by the collection.
    return:
      type: System.Collections.Immutable.ImmutableList{{T}}
      description: The new immutable collection.
- uid: System.Collections.Immutable.ImmutableList.CreateBuilder``1
  id: CreateBuilder``1
  parent: System.Collections.Immutable.ImmutableList
  href: System.Collections.Immutable.ImmutableList.yml
  name: CreateBuilder<T>()
  name.vb: CreateBuilder(Of T)()
  fullName: System.Collections.Immutable.ImmutableList.CreateBuilder<T>()
  fullName.vb: System.Collections.Immutable.ImmutableList.CreateBuilder(Of T)()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 66
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable list builder.
  syntax:
    content: public static ImmutableList<T>.Builder CreateBuilder<T>()
    content.vb: Public Shared Function CreateBuilder(Of T) As ImmutableList(Of T).Builder
    typeParameters:
    - id: T
      description: The type of items stored by the collection.
    return:
      type: System.Collections.Immutable.ImmutableList{{T}}.Builder
      description: The immutable collection builder.
- uid: System.Collections.Immutable.ImmutableList.ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})
  id: ToImmutableList``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableList
  href: System.Collections.Immutable.ImmutableList.yml
  name: ToImmutableList<TSource>(IEnumerable<TSource>)
  name.vb: ToImmutableList(Of TSource)(IEnumerable(Of TSource))
  fullName: System.Collections.Immutable.ImmutableList.ToImmutableList<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: System.Collections.Immutable.ImmutableList.ToImmutableList(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 78
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Enumerates a sequence exactly once and produces an immutable list of its contents.
  syntax:
    content: public static ImmutableList<TSource> ToImmutableList<TSource>(IEnumerable<TSource> source)
    content.vb: Public Shared Function ToImmutableList(Of TSource)(source As IEnumerable(Of TSource)) As ImmutableList(Of TSource)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
      description: The sequence to enumerate.
    typeParameters:
    - id: TSource
      description: The type of element in the sequence.
    return:
      type: System.Collections.Immutable.ImmutableList{{TSource}}
      description: An immutable list.
- uid: System.Collections.Immutable.ImmutableList.Replace``1(System.Collections.Immutable.IImmutableList{``0},``0,``0)
  id: Replace``1(System.Collections.Immutable.IImmutableList{``0},``0,``0)
  parent: System.Collections.Immutable.ImmutableList
  href: System.Collections.Immutable.ImmutableList.yml
  name: Replace<T>(IImmutableList<T>, T, T)
  name.vb: Replace(Of T)(IImmutableList(Of T), T, T)
  fullName: System.Collections.Immutable.ImmutableList.Replace<T>(System.Collections.Immutable.IImmutableList<T>, T, T)
  fullName.vb: System.Collections.Immutable.ImmutableList.Replace(Of T)(System.Collections.Immutable.IImmutableList(Of T), T, T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 98
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Replaces the first equal element in the list with the specified element.
  syntax:
    content: public static IImmutableList<T> Replace<T>(IImmutableList<T> list, T oldValue, T newValue)
    content.vb: Public Shared Function Replace(Of T)(list As IImmutableList(Of T), oldValue As T, newValue As T) As IImmutableList(Of T)
    parameters:
    - id: list
      type: System.Collections.Immutable.IImmutableList{{T}}
      description: The list to search.
    - id: oldValue
      type: '{T}'
      description: The element to replace.
    - id: newValue
      type: '{T}'
      description: The element to replace the old element with.
    typeParameters:
    - id: T
    return:
      type: System.Collections.Immutable.IImmutableList{{T}}
      description: The new list -- even if the value being replaced is equal to the new value for that position.
  exceptions:
  - type: System.ArgumentException
    description: Thrown when the old value does not exist in the list.
- uid: System.Collections.Immutable.ImmutableList.Remove``1(System.Collections.Immutable.IImmutableList{``0},``0)
  id: Remove``1(System.Collections.Immutable.IImmutableList{``0},``0)
  parent: System.Collections.Immutable.ImmutableList
  href: System.Collections.Immutable.ImmutableList.yml
  name: Remove<T>(IImmutableList<T>, T)
  name.vb: Remove(Of T)(IImmutableList(Of T), T)
  fullName: System.Collections.Immutable.ImmutableList.Remove<T>(System.Collections.Immutable.IImmutableList<T>, T)
  fullName.vb: System.Collections.Immutable.ImmutableList.Remove(Of T)(System.Collections.Immutable.IImmutableList(Of T), T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 111
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Removes the specified value from this list.
  syntax:
    content: public static IImmutableList<T> Remove<T>(IImmutableList<T> list, T value)
    content.vb: Public Shared Function Remove(Of T)(list As IImmutableList(Of T), value As T) As IImmutableList(Of T)
    parameters:
    - id: list
      type: System.Collections.Immutable.IImmutableList{{T}}
      description: The list to search.
    - id: value
      type: '{T}'
      description: The value to remove.
    typeParameters:
    - id: T
    return:
      type: System.Collections.Immutable.IImmutableList{{T}}
      description: A new list with the element removed, or this list if the element is not in this list.
- uid: System.Collections.Immutable.ImmutableList.RemoveRange``1(System.Collections.Immutable.IImmutableList{``0},System.Collections.Generic.IEnumerable{``0})
  id: RemoveRange``1(System.Collections.Immutable.IImmutableList{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableList
  href: System.Collections.Immutable.ImmutableList.yml
  name: RemoveRange<T>(IImmutableList<T>, IEnumerable<T>)
  name.vb: RemoveRange(Of T)(IImmutableList(Of T), IEnumerable(Of T))
  fullName: System.Collections.Immutable.ImmutableList.RemoveRange<T>(System.Collections.Immutable.IImmutableList<T>, System.Collections.Generic.IEnumerable<T>)
  fullName.vb: System.Collections.Immutable.ImmutableList.RemoveRange(Of T)(System.Collections.Immutable.IImmutableList(Of T), System.Collections.Generic.IEnumerable(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 126
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Removes the specified values from this list.
  syntax:
    content: public static IImmutableList<T> RemoveRange<T>(IImmutableList<T> list, IEnumerable<T> items)
    content.vb: Public Shared Function RemoveRange(Of T)(list As IImmutableList(Of T), items As IEnumerable(Of T)) As IImmutableList(Of T)
    parameters:
    - id: list
      type: System.Collections.Immutable.IImmutableList{{T}}
      description: The list to search.
    - id: items
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The items to remove if matches are found in this list.
    typeParameters:
    - id: T
    return:
      type: System.Collections.Immutable.IImmutableList{{T}}
      description: A new list with the elements removed.
- uid: System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)
  id: IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)
  parent: System.Collections.Immutable.ImmutableList
  href: System.Collections.Immutable.ImmutableList.yml
  name: IndexOf<T>(IImmutableList<T>, T)
  name.vb: IndexOf(Of T)(IImmutableList(Of T), T)
  fullName: System.Collections.Immutable.ImmutableList.IndexOf<T>(System.Collections.Immutable.IImmutableList<T>, T)
  fullName.vb: System.Collections.Immutable.ImmutableList.IndexOf(Of T)(System.Collections.Immutable.IImmutableList(Of T), T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 147
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: >-
    Searches for the specified object and returns the zero-based index of the

    first occurrence within the [System.Collections.Immutable.IImmutableList`1](System.Collections.Immutable.IImmutableList`1.yml).
  syntax:
    content: public static int IndexOf<T>(IImmutableList<T> list, T item)
    content.vb: Public Shared Function IndexOf(Of T)(list As IImmutableList(Of T), item As T) As Integer
    parameters:
    - id: list
      type: System.Collections.Immutable.IImmutableList{{T}}
      description: The list to search.
    - id: item
      type: '{T}'
      description: >-
        The object to locate in the <see cref="T:System.Collections.Immutable.IImmutableList`1" />. The value

        can be null for reference types.
    typeParameters:
    - id: T
    return:
      type: System.Int32
      description: >-
        The zero-based index of the first occurrence of item within the range of

        elements in the <see cref="T:System.Collections.Immutable.IImmutableList`1" /> that extends from index

        to the last element, if found; otherwise, -1.
- uid: System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  id: IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Collections.Immutable.ImmutableList
  href: System.Collections.Immutable.ImmutableList.yml
  name: IndexOf<T>(IImmutableList<T>, T, IEqualityComparer<T>)
  name.vb: IndexOf(Of T)(IImmutableList(Of T), T, IEqualityComparer(Of T))
  fullName: System.Collections.Immutable.ImmutableList.IndexOf<T>(System.Collections.Immutable.IImmutableList<T>, T, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: System.Collections.Immutable.ImmutableList.IndexOf(Of T)(System.Collections.Immutable.IImmutableList(Of T), T, System.Collections.Generic.IEqualityComparer(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 169
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: >-
    Searches for the specified object and returns the zero-based index of the

    first occurrence within the [System.Collections.Immutable.IImmutableList`1](System.Collections.Immutable.IImmutableList`1.yml).
  syntax:
    content: public static int IndexOf<T>(IImmutableList<T> list, T item, IEqualityComparer<T> equalityComparer)
    content.vb: Public Shared Function IndexOf(Of T)(list As IImmutableList(Of T), item As T, equalityComparer As IEqualityComparer(Of T)) As Integer
    parameters:
    - id: list
      type: System.Collections.Immutable.IImmutableList{{T}}
      description: The list to search.
    - id: item
      type: '{T}'
      description: >-
        The object to locate in the <see cref="T:System.Collections.Immutable.IImmutableList`1" />. The value

        can be null for reference types.
    - id: equalityComparer
      type: System.Collections.Generic.IEqualityComparer{{T}}
      description: The equality comparer to use in the search.
    typeParameters:
    - id: T
    return:
      type: System.Int32
      description: >-
        The zero-based index of the first occurrence of item within the range of

        elements in the <see cref="T:System.Collections.Immutable.IImmutableList`1" /> that extends from index

        to the last element, if found; otherwise, -1.
- uid: System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)
  id: IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)
  parent: System.Collections.Immutable.ImmutableList
  href: System.Collections.Immutable.ImmutableList.yml
  name: IndexOf<T>(IImmutableList<T>, T, Int32)
  name.vb: IndexOf(Of T)(IImmutableList(Of T), T, Int32)
  fullName: System.Collections.Immutable.ImmutableList.IndexOf<T>(System.Collections.Immutable.IImmutableList<T>, T, System.Int32)
  fullName.vb: System.Collections.Immutable.ImmutableList.IndexOf(Of T)(System.Collections.Immutable.IImmutableList(Of T), T, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 195
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: >-
    Searches for the specified object and returns the zero-based index of the

    first occurrence within the range of elements in the [System.Collections.Immutable.IImmutableList`1](System.Collections.Immutable.IImmutableList`1.yml)

    that extends from the specified index to the last element.
  syntax:
    content: public static int IndexOf<T>(IImmutableList<T> list, T item, int startIndex)
    content.vb: Public Shared Function IndexOf(Of T)(list As IImmutableList(Of T), item As T, startIndex As Integer) As Integer
    parameters:
    - id: list
      type: System.Collections.Immutable.IImmutableList{{T}}
      description: The list to search.
    - id: item
      type: '{T}'
      description: >-
        The object to locate in the <see cref="T:System.Collections.Immutable.IImmutableList`1" />. The value

        can be null for reference types.
    - id: startIndex
      type: System.Int32
      description: >-
        The zero-based starting index of the search. 0 (zero) is valid in an empty

        list.
    typeParameters:
    - id: T
    return:
      type: System.Int32
      description: >-
        The zero-based index of the first occurrence of item within the range of

        elements in the <see cref="T:System.Collections.Immutable.IImmutableList`1" /> that extends from index

        to the last element, if found; otherwise, -1.
- uid: System.Collections.Immutable.ImmutableList.IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)
  id: IndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)
  parent: System.Collections.Immutable.ImmutableList
  href: System.Collections.Immutable.ImmutableList.yml
  name: IndexOf<T>(IImmutableList<T>, T, Int32, Int32)
  name.vb: IndexOf(Of T)(IImmutableList(Of T), T, Int32, Int32)
  fullName: System.Collections.Immutable.ImmutableList.IndexOf<T>(System.Collections.Immutable.IImmutableList<T>, T, System.Int32, System.Int32)
  fullName.vb: System.Collections.Immutable.ImmutableList.IndexOf(Of T)(System.Collections.Immutable.IImmutableList(Of T), T, System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 224
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: >-
    Searches for the specified object and returns the zero-based index of the

    first occurrence within the range of elements in the [System.Collections.Immutable.IImmutableList`1](System.Collections.Immutable.IImmutableList`1.yml)

    that extends from the specified index to the last element.
  syntax:
    content: public static int IndexOf<T>(IImmutableList<T> list, T item, int startIndex, int count)
    content.vb: Public Shared Function IndexOf(Of T)(list As IImmutableList(Of T), item As T, startIndex As Integer, count As Integer) As Integer
    parameters:
    - id: list
      type: System.Collections.Immutable.IImmutableList{{T}}
      description: The list to search.
    - id: item
      type: '{T}'
      description: >-
        The object to locate in the <see cref="T:System.Collections.Immutable.IImmutableList`1" />. The value

        can be null for reference types.
    - id: startIndex
      type: System.Int32
      description: >-
        The zero-based starting index of the search. 0 (zero) is valid in an empty

        list.
    - id: count
      type: System.Int32
      description: The number of elements in the section to search.
    typeParameters:
    - id: T
    return:
      type: System.Int32
      description: >-
        The zero-based index of the first occurrence of item within the range of

        elements in the <see cref="T:System.Collections.Immutable.IImmutableList`1" /> that extends from index

        to the last element, if found; otherwise, -1.
- uid: System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)
  id: LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0)
  parent: System.Collections.Immutable.ImmutableList
  href: System.Collections.Immutable.ImmutableList.yml
  name: LastIndexOf<T>(IImmutableList<T>, T)
  name.vb: LastIndexOf(Of T)(IImmutableList(Of T), T)
  fullName: System.Collections.Immutable.ImmutableList.LastIndexOf<T>(System.Collections.Immutable.IImmutableList<T>, T)
  fullName.vb: System.Collections.Immutable.ImmutableList.LastIndexOf(Of T)(System.Collections.Immutable.IImmutableList(Of T), T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 244
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: >-
    Searches for the specified object and returns the zero-based index of the

    last occurrence within the entire [System.Collections.Immutable.IImmutableList`1](System.Collections.Immutable.IImmutableList`1.yml).
  syntax:
    content: public static int LastIndexOf<T>(IImmutableList<T> list, T item)
    content.vb: Public Shared Function LastIndexOf(Of T)(list As IImmutableList(Of T), item As T) As Integer
    parameters:
    - id: list
      type: System.Collections.Immutable.IImmutableList{{T}}
      description: The list to search.
    - id: item
      type: '{T}'
      description: >-
        The object to locate in the <see cref="T:System.Collections.Immutable.IImmutableList`1" />. The value

        can be null for reference types.
    typeParameters:
    - id: T
    return:
      type: System.Int32
      description: >-
        The zero-based index of the last occurrence of item within the entire the

        <see cref="T:System.Collections.Immutable.IImmutableList`1" />, if found; otherwise, -1.
- uid: System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  id: LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Collections.Generic.IEqualityComparer{``0})
  parent: System.Collections.Immutable.ImmutableList
  href: System.Collections.Immutable.ImmutableList.yml
  name: LastIndexOf<T>(IImmutableList<T>, T, IEqualityComparer<T>)
  name.vb: LastIndexOf(Of T)(IImmutableList(Of T), T, IEqualityComparer(Of T))
  fullName: System.Collections.Immutable.ImmutableList.LastIndexOf<T>(System.Collections.Immutable.IImmutableList<T>, T, System.Collections.Generic.IEqualityComparer<T>)
  fullName.vb: System.Collections.Immutable.ImmutableList.LastIndexOf(Of T)(System.Collections.Immutable.IImmutableList(Of T), T, System.Collections.Generic.IEqualityComparer(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 272
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: >-
    Searches for the specified object and returns the zero-based index of the

    last occurrence within the entire [System.Collections.Immutable.IImmutableList`1](System.Collections.Immutable.IImmutableList`1.yml).
  syntax:
    content: public static int LastIndexOf<T>(IImmutableList<T> list, T item, IEqualityComparer<T> equalityComparer)
    content.vb: Public Shared Function LastIndexOf(Of T)(list As IImmutableList(Of T), item As T, equalityComparer As IEqualityComparer(Of T)) As Integer
    parameters:
    - id: list
      type: System.Collections.Immutable.IImmutableList{{T}}
      description: The list to search.
    - id: item
      type: '{T}'
      description: >-
        The object to locate in the <see cref="T:System.Collections.Immutable.IImmutableList`1" />. The value

        can be null for reference types.
    - id: equalityComparer
      type: System.Collections.Generic.IEqualityComparer{{T}}
      description: The equality comparer to use in the search.
    typeParameters:
    - id: T
    return:
      type: System.Int32
      description: >-
        The zero-based index of the last occurrence of item within the entire the

        <see cref="T:System.Collections.Immutable.IImmutableList`1" />, if found; otherwise, -1.
- uid: System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)
  id: LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32)
  parent: System.Collections.Immutable.ImmutableList
  href: System.Collections.Immutable.ImmutableList.yml
  name: LastIndexOf<T>(IImmutableList<T>, T, Int32)
  name.vb: LastIndexOf(Of T)(IImmutableList(Of T), T, Int32)
  fullName: System.Collections.Immutable.ImmutableList.LastIndexOf<T>(System.Collections.Immutable.IImmutableList<T>, T, System.Int32)
  fullName.vb: System.Collections.Immutable.ImmutableList.LastIndexOf(Of T)(System.Collections.Immutable.IImmutableList(Of T), T, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 304
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: >-
    Searches for the specified object and returns the zero-based index of the

    last occurrence within the range of elements in the [System.Collections.Immutable.IImmutableList`1](System.Collections.Immutable.IImmutableList`1.yml)

    that extends from the first element to the specified index.
  syntax:
    content: public static int LastIndexOf<T>(IImmutableList<T> list, T item, int startIndex)
    content.vb: Public Shared Function LastIndexOf(Of T)(list As IImmutableList(Of T), item As T, startIndex As Integer) As Integer
    parameters:
    - id: list
      type: System.Collections.Immutable.IImmutableList{{T}}
      description: The list to search.
    - id: item
      type: '{T}'
      description: >-
        The object to locate in the <see cref="T:System.Collections.Immutable.IImmutableList`1" />. The value

        can be null for reference types.
    - id: startIndex
      type: System.Int32
      description: The zero-based starting index of the backward search.
    typeParameters:
    - id: T
    return:
      type: System.Int32
      description: >-
        The zero-based index of the last occurrence of item within the range of elements

        in the <see cref="T:System.Collections.Immutable.IImmutableList`1" /> that extends from the first element

        to index, if found; otherwise, -1.
- uid: System.Collections.Immutable.ImmutableList.LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)
  id: LastIndexOf``1(System.Collections.Immutable.IImmutableList{``0},``0,System.Int32,System.Int32)
  parent: System.Collections.Immutable.ImmutableList
  href: System.Collections.Immutable.ImmutableList.yml
  name: LastIndexOf<T>(IImmutableList<T>, T, Int32, Int32)
  name.vb: LastIndexOf(Of T)(IImmutableList(Of T), T, Int32, Int32)
  fullName: System.Collections.Immutable.ImmutableList.LastIndexOf<T>(System.Collections.Immutable.IImmutableList<T>, T, System.Int32, System.Int32)
  fullName.vb: System.Collections.Immutable.ImmutableList.LastIndexOf(Of T)(System.Collections.Immutable.IImmutableList(Of T), T, System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableList.cs
    startLine: 338
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: >-
    Searches for the specified object and returns the zero-based index of the

    last occurrence within the range of elements in the [System.Collections.Immutable.IImmutableList`1](System.Collections.Immutable.IImmutableList`1.yml)

    that extends from the first element to the specified index.
  syntax:
    content: public static int LastIndexOf<T>(IImmutableList<T> list, T item, int startIndex, int count)
    content.vb: Public Shared Function LastIndexOf(Of T)(list As IImmutableList(Of T), item As T, startIndex As Integer, count As Integer) As Integer
    parameters:
    - id: list
      type: System.Collections.Immutable.IImmutableList{{T}}
      description: The list to search.
    - id: item
      type: '{T}'
      description: >-
        The object to locate in the <see cref="T:System.Collections.Immutable.IImmutableList`1" />. The value

        can be null for reference types.
    - id: startIndex
      type: System.Int32
      description: The zero-based starting index of the backward search.
    - id: count
      type: System.Int32
      description: The number of elements in the section to search.
    typeParameters:
    - id: T
    return:
      type: System.Int32
      description: >-
        The zero-based index of the last occurrence of item within the range of elements

        in the <see cref="T:System.Collections.Immutable.IImmutableList`1" /> that extends from the first element

        to index, if found; otherwise, -1.
references:
- uid: System.Collections.Immutable.ImmutableList`1
  parent: System.Collections.Immutable
  isExternal: false
  href: System.Collections.Immutable.ImmutableList`1.yml
  name: ImmutableList<T>
  name.vb: ImmutableList(Of T)
  fullName: System.Collections.Immutable.ImmutableList<T>
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T)
  type: Class
  summary: An immutable list implementation.
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableList`1
    name: ImmutableList
    fullName: System.Collections.Immutable.ImmutableList
    href: System.Collections.Immutable.ImmutableList`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableList`1
    name: ImmutableList
    fullName: System.Collections.Immutable.ImmutableList
    href: System.Collections.Immutable.ImmutableList`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Immutable
  isExternal: false
  name: System.Collections.Immutable
  fullName: System.Collections.Immutable
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Collections.Immutable.ImmutableList{{T}}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableList`1
  href: System.Collections.Immutable.ImmutableList`1.yml
  name: ImmutableList<T>
  name.vb: ImmutableList(Of T)
  fullName: System.Collections.Immutable.ImmutableList<T>
  fullName.vb: System.Collections.Immutable.ImmutableList(Of T)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableList`1
    name: ImmutableList
    fullName: System.Collections.Immutable.ImmutableList
    href: System.Collections.Immutable.ImmutableList`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableList`1
    name: ImmutableList
    fullName: System.Collections.Immutable.ImmutableList
    href: System.Collections.Immutable.ImmutableList`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.Collections.Generic.IEnumerable{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  name.vb: IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  name.vb: IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: '{T}[]'
  isExternal: false
  name: T[]
  name.vb: T()
  fullName: T[]
  fullName.vb: T()
  spec.csharp:
  - name: T
    fullName: T
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - name: T
    fullName: T
  - name: ()
    fullName: ()
- uid: System.Collections.Immutable.ImmutableList{{T}}.Builder
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableList`1.Builder
  href: System.Collections.Immutable.ImmutableList`1.Builder.yml
  name: ImmutableList.Builder<>
  name.vb: ImmutableList.Builder(Of )
  fullName: System.Collections.Immutable.ImmutableList.Builder<>
  fullName.vb: System.Collections.Immutable.ImmutableList.Builder(Of )
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableList`1.Builder
    name: ImmutableList.Builder
    fullName: System.Collections.Immutable.ImmutableList.Builder
    href: System.Collections.Immutable.ImmutableList`1.Builder.yml
  - name: <
    fullName: <
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableList`1.Builder
    name: ImmutableList.Builder
    fullName: System.Collections.Immutable.ImmutableList.Builder
    href: System.Collections.Immutable.ImmutableList`1.Builder.yml
  - name: '(Of '
    fullName: '(Of '
  - name: )
    fullName: )
- uid: System.Collections.Immutable.ImmutableList`1.Builder
  parent: System.Collections.Immutable
  isExternal: false
  href: System.Collections.Immutable.ImmutableList`1.Builder.yml
  name: ImmutableList.Builder<>
  name.vb: ImmutableList.Builder(Of )
  fullName: System.Collections.Immutable.ImmutableList.Builder<>
  fullName.vb: System.Collections.Immutable.ImmutableList.Builder(Of )
  type: Class
  summary: >-
    A list that mutates with little or no memory allocations,

    can produce and/or build on immutable list instances very efficiently.
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableList`1.Builder
    name: ImmutableList.Builder
    fullName: System.Collections.Immutable.ImmutableList.Builder
    href: System.Collections.Immutable.ImmutableList`1.Builder.yml
  - name: <
    fullName: <
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableList`1.Builder
    name: ImmutableList.Builder
    fullName: System.Collections.Immutable.ImmutableList.Builder
    href: System.Collections.Immutable.ImmutableList`1.Builder.yml
  - name: '(Of '
    fullName: '(Of '
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{TSource}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TSource>
  name.vb: IEnumerable(Of TSource)
  fullName: System.Collections.Generic.IEnumerable<TSource>
  fullName.vb: System.Collections.Generic.IEnumerable(Of TSource)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
- uid: System.Collections.Immutable.ImmutableList{{TSource}}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableList`1
  href: System.Collections.Immutable.ImmutableList`1.yml
  name: ImmutableList<TSource>
  name.vb: ImmutableList(Of TSource)
  fullName: System.Collections.Immutable.ImmutableList<TSource>
  fullName.vb: System.Collections.Immutable.ImmutableList(Of TSource)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableList`1
    name: ImmutableList
    fullName: System.Collections.Immutable.ImmutableList
    href: System.Collections.Immutable.ImmutableList`1.yml
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableList`1
    name: ImmutableList
    fullName: System.Collections.Immutable.ImmutableList
    href: System.Collections.Immutable.ImmutableList`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
- uid: System.ArgumentException
- uid: System.Collections.Immutable.IImmutableList{{T}}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.IImmutableList`1
  href: System.Collections.Immutable.IImmutableList`1.yml
  name: IImmutableList<T>
  name.vb: IImmutableList(Of T)
  fullName: System.Collections.Immutable.IImmutableList<T>
  fullName.vb: System.Collections.Immutable.IImmutableList(Of T)
  spec.csharp:
  - uid: System.Collections.Immutable.IImmutableList`1
    name: IImmutableList
    fullName: System.Collections.Immutable.IImmutableList
    href: System.Collections.Immutable.IImmutableList`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.IImmutableList`1
    name: IImmutableList
    fullName: System.Collections.Immutable.IImmutableList
    href: System.Collections.Immutable.IImmutableList`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Immutable.IImmutableList`1
  parent: System.Collections.Immutable
  isExternal: false
  href: System.Collections.Immutable.IImmutableList`1.yml
  name: IImmutableList<T>
  name.vb: IImmutableList(Of T)
  fullName: System.Collections.Immutable.IImmutableList<T>
  fullName.vb: System.Collections.Immutable.IImmutableList(Of T)
  type: Interface
  summary: A list of elements that can only be modified by creating a new instance of the list.
  spec.csharp:
  - uid: System.Collections.Immutable.IImmutableList`1
    name: IImmutableList
    fullName: System.Collections.Immutable.IImmutableList
    href: System.Collections.Immutable.IImmutableList`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.IImmutableList`1
    name: IImmutableList
    fullName: System.Collections.Immutable.IImmutableList
    href: System.Collections.Immutable.IImmutableList`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IEqualityComparer{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEqualityComparer`1
  name: IEqualityComparer<T>
  name.vb: IEqualityComparer(Of T)
  fullName: System.Collections.Generic.IEqualityComparer<T>
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEqualityComparer`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEqualityComparer<T>
  name.vb: IEqualityComparer(Of T)
  fullName: System.Collections.Generic.IEqualityComparer<T>
  fullName.vb: System.Collections.Generic.IEqualityComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEqualityComparer`1
    name: IEqualityComparer
    fullName: System.Collections.Generic.IEqualityComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
