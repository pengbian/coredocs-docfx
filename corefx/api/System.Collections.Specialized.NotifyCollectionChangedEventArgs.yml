items:
- uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
  id: NotifyCollectionChangedEventArgs
  parent: System.Collections.Specialized
  children:
  - System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction)
  - System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList)
  - System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList)
  - System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList,System.Int32)
  - System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Int32)
  - System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Int32,System.Int32)
  - System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object)
  - System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32)
  - System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32,System.Int32)
  - System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Object)
  - System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Object,System.Int32)
  - System.Collections.Specialized.NotifyCollectionChangedEventArgs.Action
  - System.Collections.Specialized.NotifyCollectionChangedEventArgs.NewItems
  - System.Collections.Specialized.NotifyCollectionChangedEventArgs.NewStartingIndex
  - System.Collections.Specialized.NotifyCollectionChangedEventArgs.OldItems
  - System.Collections.Specialized.NotifyCollectionChangedEventArgs.OldStartingIndex
  href: System.Collections.Specialized.NotifyCollectionChangedEventArgs.yml
  name: NotifyCollectionChangedEventArgs
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
  type: Class
  source:
    remote: &o0
      path: src/System.ObjectModel/src/System/Collections/Specialized/NotifyCollectionChangedEventArgs.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.ObjectModel/src/System/Collections/Specialized/NotifyCollectionChangedEventArgs.cs
    startLine: 34
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.Specialized
  summary: >-
    Arguments for the CollectionChanged event.

    A collection that supports INotifyCollectionChangedThis raises this event

    whenever an item is added or removed, or when the contents of the collection

    changes dramatically.
  syntax:
    content: 'public class NotifyCollectionChangedEventArgs : EventArgs'
    content.vb: Public Class NotifyCollectionChangedEventArgs Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction)
  id: '#ctor(System.Collections.Specialized.NotifyCollectionChangedAction)'
  parent: System.Collections.Specialized.NotifyCollectionChangedEventArgs
  href: System.Collections.Specialized.NotifyCollectionChangedEventArgs.yml
  name: NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction)
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction)
  type: Constructor
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/Specialized/NotifyCollectionChangedEventArgs.cs
    startLine: 46
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.Specialized
  summary: Construct a NotifyCollectionChangedEventArgs that describes a reset change.
  syntax:
    content: public NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action)
    content.vb: Public Sub New(action As NotifyCollectionChangedAction)
    parameters:
    - id: action
      type: System.Collections.Specialized.NotifyCollectionChangedAction
      description: The action that caused the event (must be Reset).
- uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object)
  id: '#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object)'
  parent: System.Collections.Specialized.NotifyCollectionChangedEventArgs
  href: System.Collections.Specialized.NotifyCollectionChangedEventArgs.yml
  name: NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction, Object)
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, System.Object)
  type: Constructor
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/Specialized/NotifyCollectionChangedEventArgs.cs
    startLine: 59
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.Specialized
  summary: Construct a NotifyCollectionChangedEventArgs that describes a one-item change.
  syntax:
    content: public NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, object changedItem)
    content.vb: Public Sub New(action As NotifyCollectionChangedAction, changedItem As Object)
    parameters:
    - id: action
      type: System.Collections.Specialized.NotifyCollectionChangedAction
      description: The action that caused the event; can only be Reset, Add or Remove action.
    - id: changedItem
      type: System.Object
      description: The item affected by the change.
- uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32)
  id: '#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32)'
  parent: System.Collections.Specialized.NotifyCollectionChangedEventArgs
  href: System.Collections.Specialized.NotifyCollectionChangedEventArgs.yml
  name: NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction, Object, Int32)
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, System.Object, System.Int32)
  type: Constructor
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/Specialized/NotifyCollectionChangedEventArgs.cs
    startLine: 84
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.Specialized
  summary: Construct a NotifyCollectionChangedEventArgs that describes a one-item change.
  syntax:
    content: public NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, object changedItem, int index)
    content.vb: Public Sub New(action As NotifyCollectionChangedAction, changedItem As Object, index As Integer)
    parameters:
    - id: action
      type: System.Collections.Specialized.NotifyCollectionChangedAction
      description: The action that caused the event.
    - id: changedItem
      type: System.Object
      description: The item affected by the change.
    - id: index
      type: System.Int32
      description: The index where the change occurred.
- uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList)
  id: '#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList)'
  parent: System.Collections.Specialized.NotifyCollectionChangedEventArgs
  href: System.Collections.Specialized.NotifyCollectionChangedEventArgs.yml
  name: NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction, IList)
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, System.Collections.IList)
  type: Constructor
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/Specialized/NotifyCollectionChangedEventArgs.cs
    startLine: 110
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.Specialized
  summary: Construct a NotifyCollectionChangedEventArgs that describes a multi-item change.
  syntax:
    content: public NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, IList changedItems)
    content.vb: Public Sub New(action As NotifyCollectionChangedAction, changedItems As IList)
    parameters:
    - id: action
      type: System.Collections.Specialized.NotifyCollectionChangedAction
      description: The action that caused the event.
    - id: changedItems
      type: System.Collections.IList
      description: The items affected by the change.
- uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Int32)
  id: '#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Int32)'
  parent: System.Collections.Specialized.NotifyCollectionChangedEventArgs
  href: System.Collections.Specialized.NotifyCollectionChangedEventArgs.yml
  name: NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction, IList, Int32)
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, System.Collections.IList, System.Int32)
  type: Constructor
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/Specialized/NotifyCollectionChangedEventArgs.cs
    startLine: 138
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.Specialized
  summary: Construct a NotifyCollectionChangedEventArgs that describes a multi-item change (or a reset).
  syntax:
    content: public NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, IList changedItems, int startingIndex)
    content.vb: Public Sub New(action As NotifyCollectionChangedAction, changedItems As IList, startingIndex As Integer)
    parameters:
    - id: action
      type: System.Collections.Specialized.NotifyCollectionChangedAction
      description: The action that caused the event.
    - id: changedItems
      type: System.Collections.IList
      description: The items affected by the change.
    - id: startingIndex
      type: System.Int32
      description: The index where the change occurred.
- uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Object)
  id: '#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Object)'
  parent: System.Collections.Specialized.NotifyCollectionChangedEventArgs
  href: System.Collections.Specialized.NotifyCollectionChangedEventArgs.yml
  name: NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction, Object, Object)
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, System.Object, System.Object)
  type: Constructor
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/Specialized/NotifyCollectionChangedEventArgs.cs
    startLine: 170
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.Specialized
  summary: Construct a NotifyCollectionChangedEventArgs that describes a one-item Replace event.
  syntax:
    content: public NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, object newItem, object oldItem)
    content.vb: Public Sub New(action As NotifyCollectionChangedAction, newItem As Object, oldItem As Object)
    parameters:
    - id: action
      type: System.Collections.Specialized.NotifyCollectionChangedAction
      description: Can only be a Replace action.
    - id: newItem
      type: System.Object
      description: The new item replacing the original item.
    - id: oldItem
      type: System.Object
      description: The original item that is replaced.
- uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Object,System.Int32)
  id: '#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Object,System.Int32)'
  parent: System.Collections.Specialized.NotifyCollectionChangedEventArgs
  href: System.Collections.Specialized.NotifyCollectionChangedEventArgs.yml
  name: NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction, Object, Object, Int32)
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, System.Object, System.Object, System.Int32)
  type: Constructor
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/Specialized/NotifyCollectionChangedEventArgs.cs
    startLine: 185
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.Specialized
  summary: Construct a NotifyCollectionChangedEventArgs that describes a one-item Replace event.
  syntax:
    content: public NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, object newItem, object oldItem, int index)
    content.vb: Public Sub New(action As NotifyCollectionChangedAction, newItem As Object, oldItem As Object, index As Integer)
    parameters:
    - id: action
      type: System.Collections.Specialized.NotifyCollectionChangedAction
      description: Can only be a Replace action.
    - id: newItem
      type: System.Object
      description: The new item replacing the original item.
    - id: oldItem
      type: System.Object
      description: The original item that is replaced.
    - id: index
      type: System.Int32
      description: The index of the item being replaced.
- uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList)
  id: '#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList)'
  parent: System.Collections.Specialized.NotifyCollectionChangedEventArgs
  href: System.Collections.Specialized.NotifyCollectionChangedEventArgs.yml
  name: NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction, IList, IList)
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, System.Collections.IList, System.Collections.IList)
  type: Constructor
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/Specialized/NotifyCollectionChangedEventArgs.cs
    startLine: 199
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.Specialized
  summary: Construct a NotifyCollectionChangedEventArgs that describes a multi-item Replace event.
  syntax:
    content: public NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, IList newItems, IList oldItems)
    content.vb: Public Sub New(action As NotifyCollectionChangedAction, newItems As IList, oldItems As IList)
    parameters:
    - id: action
      type: System.Collections.Specialized.NotifyCollectionChangedAction
      description: Can only be a Replace action.
    - id: newItems
      type: System.Collections.IList
      description: The new items replacing the original items.
    - id: oldItems
      type: System.Collections.IList
      description: The original items that are replaced.
- uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList,System.Int32)
  id: '#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Collections.IList,System.Int32)'
  parent: System.Collections.Specialized.NotifyCollectionChangedEventArgs
  href: System.Collections.Specialized.NotifyCollectionChangedEventArgs.yml
  name: NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction, IList, IList, Int32)
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, System.Collections.IList, System.Collections.IList, System.Int32)
  type: Constructor
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/Specialized/NotifyCollectionChangedEventArgs.cs
    startLine: 218
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.Specialized
  summary: Construct a NotifyCollectionChangedEventArgs that describes a multi-item Replace event.
  syntax:
    content: public NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, IList newItems, IList oldItems, int startingIndex)
    content.vb: Public Sub New(action As NotifyCollectionChangedAction, newItems As IList, oldItems As IList, startingIndex As Integer)
    parameters:
    - id: action
      type: System.Collections.Specialized.NotifyCollectionChangedAction
      description: Can only be a Replace action.
    - id: newItems
      type: System.Collections.IList
      description: The new items replacing the original items.
    - id: oldItems
      type: System.Collections.IList
      description: The original items that are replaced.
    - id: startingIndex
      type: System.Int32
      description: The starting index of the items being replaced.
- uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32,System.Int32)
  id: '#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Object,System.Int32,System.Int32)'
  parent: System.Collections.Specialized.NotifyCollectionChangedEventArgs
  href: System.Collections.Specialized.NotifyCollectionChangedEventArgs.yml
  name: NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction, Object, Int32, Int32)
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, System.Object, System.Int32, System.Int32)
  type: Constructor
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/Specialized/NotifyCollectionChangedEventArgs.cs
    startLine: 237
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.Specialized
  summary: Construct a NotifyCollectionChangedEventArgs that describes a one-item Move event.
  syntax:
    content: public NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, object changedItem, int index, int oldIndex)
    content.vb: Public Sub New(action As NotifyCollectionChangedAction, changedItem As Object, index As Integer, oldIndex As Integer)
    parameters:
    - id: action
      type: System.Collections.Specialized.NotifyCollectionChangedAction
      description: Can only be a Move action.
    - id: changedItem
      type: System.Object
      description: The item affected by the change.
    - id: index
      type: System.Int32
      description: The new index for the changed item.
    - id: oldIndex
      type: System.Int32
      description: The old index for the changed item.
- uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs.#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Int32,System.Int32)
  id: '#ctor(System.Collections.Specialized.NotifyCollectionChangedAction,System.Collections.IList,System.Int32,System.Int32)'
  parent: System.Collections.Specialized.NotifyCollectionChangedEventArgs
  href: System.Collections.Specialized.NotifyCollectionChangedEventArgs.yml
  name: NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction, IList, Int32, Int32)
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs.NotifyCollectionChangedEventArgs(System.Collections.Specialized.NotifyCollectionChangedAction, System.Collections.IList, System.Int32, System.Int32)
  type: Constructor
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/Specialized/NotifyCollectionChangedEventArgs.cs
    startLine: 255
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.Specialized
  summary: Construct a NotifyCollectionChangedEventArgs that describes a multi-item Move event.
  syntax:
    content: public NotifyCollectionChangedEventArgs(NotifyCollectionChangedAction action, IList changedItems, int index, int oldIndex)
    content.vb: Public Sub New(action As NotifyCollectionChangedAction, changedItems As IList, index As Integer, oldIndex As Integer)
    parameters:
    - id: action
      type: System.Collections.Specialized.NotifyCollectionChangedAction
      description: The action that caused the event.
    - id: changedItems
      type: System.Collections.IList
      description: The items affected by the change.
    - id: index
      type: System.Int32
      description: The new index for the changed items.
    - id: oldIndex
      type: System.Int32
      description: The old index for the changed items.
- uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs.Action
  id: Action
  parent: System.Collections.Specialized.NotifyCollectionChangedEventArgs
  href: System.Collections.Specialized.NotifyCollectionChangedEventArgs.yml
  name: Action
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs.Action
  type: Property
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/Specialized/NotifyCollectionChangedEventArgs.cs
    startLine: 316
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.Specialized
  summary: The action that caused the event.
  syntax:
    content: public NotifyCollectionChangedAction Action { get; }
    content.vb: Public ReadOnly Property Action As NotifyCollectionChangedAction
    parameters: []
    return:
      type: System.Collections.Specialized.NotifyCollectionChangedAction
- uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs.NewItems
  id: NewItems
  parent: System.Collections.Specialized.NotifyCollectionChangedEventArgs
  href: System.Collections.Specialized.NotifyCollectionChangedEventArgs.yml
  name: NewItems
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs.NewItems
  type: Property
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/Specialized/NotifyCollectionChangedEventArgs.cs
    startLine: 324
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.Specialized
  summary: The items affected by the change.
  syntax:
    content: public IList NewItems { get; }
    content.vb: Public ReadOnly Property NewItems As IList
    parameters: []
    return:
      type: System.Collections.IList
- uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs.OldItems
  id: OldItems
  parent: System.Collections.Specialized.NotifyCollectionChangedEventArgs
  href: System.Collections.Specialized.NotifyCollectionChangedEventArgs.yml
  name: OldItems
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs.OldItems
  type: Property
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/Specialized/NotifyCollectionChangedEventArgs.cs
    startLine: 332
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.Specialized
  summary: The old items affected by the change (for Replace events).
  syntax:
    content: public IList OldItems { get; }
    content.vb: Public ReadOnly Property OldItems As IList
    parameters: []
    return:
      type: System.Collections.IList
- uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs.NewStartingIndex
  id: NewStartingIndex
  parent: System.Collections.Specialized.NotifyCollectionChangedEventArgs
  href: System.Collections.Specialized.NotifyCollectionChangedEventArgs.yml
  name: NewStartingIndex
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs.NewStartingIndex
  type: Property
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/Specialized/NotifyCollectionChangedEventArgs.cs
    startLine: 340
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.Specialized
  summary: The index where the change occurred.
  syntax:
    content: public int NewStartingIndex { get; }
    content.vb: Public ReadOnly Property NewStartingIndex As Integer
    parameters: []
    return:
      type: System.Int32
- uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs.OldStartingIndex
  id: OldStartingIndex
  parent: System.Collections.Specialized.NotifyCollectionChangedEventArgs
  href: System.Collections.Specialized.NotifyCollectionChangedEventArgs.yml
  name: OldStartingIndex
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs.OldStartingIndex
  type: Property
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/Specialized/NotifyCollectionChangedEventArgs.cs
    startLine: 348
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.Specialized
  summary: The old index where the change occurred (for Move events).
  syntax:
    content: public int OldStartingIndex { get; }
    content.vb: Public ReadOnly Property OldStartingIndex As Integer
    parameters: []
    return:
      type: System.Int32
references:
- uid: System.Collections.Specialized
  isExternal: false
  name: System.Collections.Specialized
  fullName: System.Collections.Specialized
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Collections.Specialized.NotifyCollectionChangedAction
  parent: System.Collections.Specialized
  isExternal: false
  href: System.Collections.Specialized.NotifyCollectionChangedAction.yml
  name: NotifyCollectionChangedAction
  fullName: System.Collections.Specialized.NotifyCollectionChangedAction
  type: Enum
  summary: This enum describes the action that caused a CollectionChanged event.
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  fullName: System.Collections.IList
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
