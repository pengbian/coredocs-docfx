items:
- uid: System.Reflection.Metadata.BlobHandle
  id: BlobHandle
  parent: System.Reflection.Metadata
  children:
  - System.Reflection.Metadata.BlobHandle.Equals(System.Object)
  - System.Reflection.Metadata.BlobHandle.Equals(System.Reflection.Metadata.BlobHandle)
  - System.Reflection.Metadata.BlobHandle.GetHashCode
  - System.Reflection.Metadata.BlobHandle.IsNil
  - System.Reflection.Metadata.BlobHandle.op_Equality(System.Reflection.Metadata.BlobHandle,System.Reflection.Metadata.BlobHandle)
  - System.Reflection.Metadata.BlobHandle.op_Explicit(System.Reflection.Metadata.Handle)~System.Reflection.Metadata.BlobHandle
  - System.Reflection.Metadata.BlobHandle.op_Implicit(System.Reflection.Metadata.BlobHandle)~System.Reflection.Metadata.Handle
  - System.Reflection.Metadata.BlobHandle.op_Inequality(System.Reflection.Metadata.BlobHandle,System.Reflection.Metadata.BlobHandle)
  href: System.Reflection.Metadata.BlobHandle.yml
  name: BlobHandle
  fullName: System.Reflection.Metadata.BlobHandle
  type: Struct
  source:
    remote: &o0
      path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Handles.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Handles.cs
    startLine: 2817
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: 'public struct BlobHandle : IEquatable<BlobHandle>'
    content.vb: Public Structure BlobHandle Implements IEquatable(Of BlobHandle)
  implements:
  - System.IEquatable{System.Reflection.Metadata.BlobHandle}
  inheritedMembers:
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: System.Reflection.Metadata.BlobHandle.op_Implicit(System.Reflection.Metadata.BlobHandle)~System.Reflection.Metadata.Handle
  id: op_Implicit(System.Reflection.Metadata.BlobHandle)~System.Reflection.Metadata.Handle
  parent: System.Reflection.Metadata.BlobHandle
  href: System.Reflection.Metadata.BlobHandle.yml
  name: Implicit(BlobHandle to Handle)
  name.vb: Widening(BlobHandle to Handle)
  fullName: System.Reflection.Metadata.BlobHandle.Implicit(System.Reflection.Metadata.BlobHandle to System.Reflection.Metadata.Handle)
  fullName.vb: System.Reflection.Metadata.BlobHandle.Widening(System.Reflection.Metadata.BlobHandle to System.Reflection.Metadata.Handle)
  type: Operator
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Handles.cs
    startLine: 2872
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public static implicit operator Handle(BlobHandle handle)
    content.vb: Public Shared Widening Operator CType(handle As BlobHandle) As Handle
    parameters:
    - id: handle
      type: System.Reflection.Metadata.BlobHandle
    return:
      type: System.Reflection.Metadata.Handle
- uid: System.Reflection.Metadata.BlobHandle.op_Explicit(System.Reflection.Metadata.Handle)~System.Reflection.Metadata.BlobHandle
  id: op_Explicit(System.Reflection.Metadata.Handle)~System.Reflection.Metadata.BlobHandle
  parent: System.Reflection.Metadata.BlobHandle
  href: System.Reflection.Metadata.BlobHandle.yml
  name: Explicit(Handle to BlobHandle)
  name.vb: Narrowing(Handle to BlobHandle)
  fullName: System.Reflection.Metadata.BlobHandle.Explicit(System.Reflection.Metadata.Handle to System.Reflection.Metadata.BlobHandle)
  fullName.vb: System.Reflection.Metadata.BlobHandle.Narrowing(System.Reflection.Metadata.Handle to System.Reflection.Metadata.BlobHandle)
  type: Operator
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Handles.cs
    startLine: 2880
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public static explicit operator BlobHandle(Handle handle)
    content.vb: Public Shared Narrowing Operator CType(handle As Handle) As BlobHandle
    parameters:
    - id: handle
      type: System.Reflection.Metadata.Handle
    return:
      type: System.Reflection.Metadata.BlobHandle
- uid: System.Reflection.Metadata.BlobHandle.IsNil
  id: IsNil
  parent: System.Reflection.Metadata.BlobHandle
  href: System.Reflection.Metadata.BlobHandle.yml
  name: IsNil
  fullName: System.Reflection.Metadata.BlobHandle.IsNil
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Handles.cs
    startLine: 2892
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public bool IsNil { get; }
    content.vb: Public ReadOnly Property IsNil As Boolean
    parameters: []
    return:
      type: System.Boolean
- uid: System.Reflection.Metadata.BlobHandle.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Reflection.Metadata.BlobHandle
  href: System.Reflection.Metadata.BlobHandle.yml
  name: Equals(Object)
  fullName: System.Reflection.Metadata.BlobHandle.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Handles.cs
    startLine: 2919
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.Boolean
  overridden: System.ValueType.Equals(System.Object)
- uid: System.Reflection.Metadata.BlobHandle.Equals(System.Reflection.Metadata.BlobHandle)
  id: Equals(System.Reflection.Metadata.BlobHandle)
  parent: System.Reflection.Metadata.BlobHandle
  href: System.Reflection.Metadata.BlobHandle.yml
  name: Equals(BlobHandle)
  fullName: System.Reflection.Metadata.BlobHandle.Equals(System.Reflection.Metadata.BlobHandle)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Handles.cs
    startLine: 2924
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public bool Equals(BlobHandle other)
    content.vb: Public Function Equals(other As BlobHandle) As Boolean
    parameters:
    - id: other
      type: System.Reflection.Metadata.BlobHandle
    return:
      type: System.Boolean
- uid: System.Reflection.Metadata.BlobHandle.GetHashCode
  id: GetHashCode
  parent: System.Reflection.Metadata.BlobHandle
  href: System.Reflection.Metadata.BlobHandle.yml
  name: GetHashCode()
  fullName: System.Reflection.Metadata.BlobHandle.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Handles.cs
    startLine: 2929
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
  overridden: System.ValueType.GetHashCode
- uid: System.Reflection.Metadata.BlobHandle.op_Equality(System.Reflection.Metadata.BlobHandle,System.Reflection.Metadata.BlobHandle)
  id: op_Equality(System.Reflection.Metadata.BlobHandle,System.Reflection.Metadata.BlobHandle)
  parent: System.Reflection.Metadata.BlobHandle
  href: System.Reflection.Metadata.BlobHandle.yml
  name: Equality(BlobHandle, BlobHandle)
  fullName: System.Reflection.Metadata.BlobHandle.Equality(System.Reflection.Metadata.BlobHandle, System.Reflection.Metadata.BlobHandle)
  type: Operator
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Handles.cs
    startLine: 2934
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public static bool operator ==(BlobHandle left, BlobHandle right)
    content.vb: Public Shared Operator =(left As BlobHandle, right As BlobHandle) As Boolean
    parameters:
    - id: left
      type: System.Reflection.Metadata.BlobHandle
    - id: right
      type: System.Reflection.Metadata.BlobHandle
    return:
      type: System.Boolean
- uid: System.Reflection.Metadata.BlobHandle.op_Inequality(System.Reflection.Metadata.BlobHandle,System.Reflection.Metadata.BlobHandle)
  id: op_Inequality(System.Reflection.Metadata.BlobHandle,System.Reflection.Metadata.BlobHandle)
  parent: System.Reflection.Metadata.BlobHandle
  href: System.Reflection.Metadata.BlobHandle.yml
  name: Inequality(BlobHandle, BlobHandle)
  fullName: System.Reflection.Metadata.BlobHandle.Inequality(System.Reflection.Metadata.BlobHandle, System.Reflection.Metadata.BlobHandle)
  type: Operator
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/Handles.cs
    startLine: 2939
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public static bool operator !=(BlobHandle left, BlobHandle right)
    content.vb: Public Shared Operator <>(left As BlobHandle, right As BlobHandle) As Boolean
    parameters:
    - id: left
      type: System.Reflection.Metadata.BlobHandle
    - id: right
      type: System.Reflection.Metadata.BlobHandle
    return:
      type: System.Boolean
references:
- uid: System.Reflection.Metadata
  isExternal: false
  name: System.Reflection.Metadata
  fullName: System.Reflection.Metadata
  type: Namespace
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  fullName: System.ValueType
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Reflection.Metadata.BlobHandle
  parent: System.Reflection.Metadata
  isExternal: false
  href: System.Reflection.Metadata.BlobHandle.yml
  name: BlobHandle
  fullName: System.Reflection.Metadata.BlobHandle
  type: Struct
- uid: System.Reflection.Metadata.Handle
  parent: System.Reflection.Metadata
  isExternal: false
  href: System.Reflection.Metadata.Handle.yml
  name: Handle
  fullName: System.Reflection.Metadata.Handle
  type: Struct
  summary: Represents any metadata entity (type reference/definition/specification, method definition, custom attribute, etc.) or value (string, blob, guid, user string).
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
