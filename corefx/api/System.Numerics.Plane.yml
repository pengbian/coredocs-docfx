items:
- uid: System.Numerics.Plane
  id: Plane
  parent: System.Numerics
  children:
  - System.Numerics.Plane.#ctor(System.Numerics.Vector3,System.Single)
  - System.Numerics.Plane.#ctor(System.Numerics.Vector4)
  - System.Numerics.Plane.#ctor(System.Single,System.Single,System.Single,System.Single)
  - System.Numerics.Plane.CreateFromVertices(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)
  - System.Numerics.Plane.D
  - System.Numerics.Plane.Dot(System.Numerics.Plane,System.Numerics.Vector4)
  - System.Numerics.Plane.DotCoordinate(System.Numerics.Plane,System.Numerics.Vector3)
  - System.Numerics.Plane.DotNormal(System.Numerics.Plane,System.Numerics.Vector3)
  - System.Numerics.Plane.Equals(System.Numerics.Plane)
  - System.Numerics.Plane.Equals(System.Object)
  - System.Numerics.Plane.GetHashCode
  - System.Numerics.Plane.Normal
  - System.Numerics.Plane.Normalize(System.Numerics.Plane)
  - System.Numerics.Plane.op_Equality(System.Numerics.Plane,System.Numerics.Plane)
  - System.Numerics.Plane.op_Inequality(System.Numerics.Plane,System.Numerics.Plane)
  - System.Numerics.Plane.ToString
  - System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Matrix4x4)
  - System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Quaternion)
  href: System.Numerics.Plane.yml
  name: Plane
  fullName: System.Numerics.Plane
  type: Struct
  source:
    remote: &o0
      path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 11
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: A structure encapsulating a 3D Plane
  syntax:
    content: 'public struct Plane : IEquatable<Plane>'
    content.vb: Public Structure Plane Implements IEquatable(Of Plane)
  implements:
  - System.IEquatable{System.Numerics.Plane}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: System.Numerics.Plane.Normal
  id: Normal
  parent: System.Numerics.Plane
  href: System.Numerics.Plane.yml
  name: Normal
  fullName: System.Numerics.Plane.Normal
  type: Field
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 16
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: The normal vector of the Plane.
  syntax:
    content: public Vector3 Normal
    content.vb: Public Normal As Vector3
- uid: System.Numerics.Plane.D
  id: D
  parent: System.Numerics.Plane
  href: System.Numerics.Plane.yml
  name: D
  fullName: System.Numerics.Plane.D
  type: Field
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 20
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: The distance of the Plane along its normal from the origin.
  syntax:
    content: public float D
    content.vb: Public D As Single
- uid: System.Numerics.Plane.#ctor(System.Single,System.Single,System.Single,System.Single)
  id: '#ctor(System.Single,System.Single,System.Single,System.Single)'
  parent: System.Numerics.Plane
  href: System.Numerics.Plane.yml
  name: Plane(Single, Single, Single, Single)
  fullName: System.Numerics.Plane.Plane(System.Single, System.Single, System.Single, System.Single)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 29
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Constructs a Plane from the X, Y, and Z components of its normal, and its distance from the origin on that normal.
  syntax:
    content: public Plane(float x, float y, float z, float d)
    content.vb: Public Sub New(x As Single, y As Single, z As Single, d As Single)
    parameters:
    - id: x
      type: System.Single
      description: The X-component of the normal.
    - id: y
      type: System.Single
      description: The Y-component of the normal.
    - id: z
      type: System.Single
      description: The Z-component of the normal.
    - id: d
      type: System.Single
      description: The distance of the Plane along its normal from the origin.
- uid: System.Numerics.Plane.#ctor(System.Numerics.Vector3,System.Single)
  id: '#ctor(System.Numerics.Vector3,System.Single)'
  parent: System.Numerics.Plane
  href: System.Numerics.Plane.yml
  name: Plane(Vector3, Single)
  fullName: System.Numerics.Plane.Plane(System.Numerics.Vector3, System.Single)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 40
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Constructs a Plane from the given normal and distance along the normal from the origin.
  syntax:
    content: public Plane(Vector3 normal, float d)
    content.vb: Public Sub New(normal As Vector3, d As Single)
    parameters:
    - id: normal
      type: System.Numerics.Vector3
      description: The Plane's normal vector.
    - id: d
      type: System.Single
      description: The Plane's distance from the origin along its normal vector.
- uid: System.Numerics.Plane.#ctor(System.Numerics.Vector4)
  id: '#ctor(System.Numerics.Vector4)'
  parent: System.Numerics.Plane
  href: System.Numerics.Plane.yml
  name: Plane(Vector4)
  fullName: System.Numerics.Plane.Plane(System.Numerics.Vector4)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 51
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Constructs a Plane from the given Vector4.
  syntax:
    content: public Plane(Vector4 value)
    content.vb: Public Sub New(value As Vector4)
    parameters:
    - id: value
      type: System.Numerics.Vector4
      description: >-
        A vector whose first 3 elements describe the normal vector,

        and whose W component defines the distance along that normal from the origin.
- uid: System.Numerics.Plane.CreateFromVertices(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)
  id: CreateFromVertices(System.Numerics.Vector3,System.Numerics.Vector3,System.Numerics.Vector3)
  parent: System.Numerics.Plane
  href: System.Numerics.Plane.yml
  name: CreateFromVertices(Vector3, Vector3, Vector3)
  fullName: System.Numerics.Plane.CreateFromVertices(System.Numerics.Vector3, System.Numerics.Vector3, System.Numerics.Vector3)
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 64
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Creates a Plane that contains the three given points.
  syntax:
    content: public static Plane CreateFromVertices(Vector3 point1, Vector3 point2, Vector3 point3)
    content.vb: Public Shared Function CreateFromVertices(point1 As Vector3, point2 As Vector3, point3 As Vector3) As Plane
    parameters:
    - id: point1
      type: System.Numerics.Vector3
      description: The first point defining the Plane.
    - id: point2
      type: System.Numerics.Vector3
      description: The second point defining the Plane.
    - id: point3
      type: System.Numerics.Vector3
      description: The third point defining the Plane.
    return:
      type: System.Numerics.Plane
      description: The Plane containing the three points.
- uid: System.Numerics.Plane.Normalize(System.Numerics.Plane)
  id: Normalize(System.Numerics.Plane)
  parent: System.Numerics.Plane
  href: System.Numerics.Plane.yml
  name: Normalize(Plane)
  fullName: System.Numerics.Plane.Normalize(System.Numerics.Plane)
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 116
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Creates a new Plane whose normal vector is the source Plane's normal vector normalized.
  syntax:
    content: public static Plane Normalize(Plane value)
    content.vb: Public Shared Function Normalize(value As Plane) As Plane
    parameters:
    - id: value
      type: System.Numerics.Plane
      description: The source Plane.
    return:
      type: System.Numerics.Plane
      description: The normalized Plane.
- uid: System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Matrix4x4)
  id: Transform(System.Numerics.Plane,System.Numerics.Matrix4x4)
  parent: System.Numerics.Plane
  href: System.Numerics.Plane.yml
  name: Transform(Plane, Matrix4x4)
  fullName: System.Numerics.Plane.Transform(System.Numerics.Plane, System.Numerics.Matrix4x4)
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 159
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Transforms a normalized Plane by a Matrix.
  syntax:
    content: public static Plane Transform(Plane plane, Matrix4x4 matrix)
    content.vb: Public Shared Function Transform(plane As Plane, matrix As Matrix4x4) As Plane
    parameters:
    - id: plane
      type: System.Numerics.Plane
      description: >-
        The normalized Plane to transform.

        This Plane must already be normalized, so that its Normal vector is of unit length, before this method is called.
    - id: matrix
      type: System.Numerics.Matrix4x4
      description: The transformation matrix to apply to the Plane.
    return:
      type: System.Numerics.Plane
      description: The transformed Plane.
- uid: System.Numerics.Plane.Transform(System.Numerics.Plane,System.Numerics.Quaternion)
  id: Transform(System.Numerics.Plane,System.Numerics.Quaternion)
  parent: System.Numerics.Plane
  href: System.Numerics.Plane.yml
  name: Transform(Plane, Quaternion)
  fullName: System.Numerics.Plane.Transform(System.Numerics.Plane, System.Numerics.Quaternion)
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 181
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Transforms a normalized Plane by a Quaternion rotation.
  syntax:
    content: public static Plane Transform(Plane plane, Quaternion rotation)
    content.vb: Public Shared Function Transform(plane As Plane, rotation As Quaternion) As Plane
    parameters:
    - id: plane
      type: System.Numerics.Plane
      description: >-
        The normalized Plane to transform.

        This Plane must already be normalized, so that its Normal vector is of unit length, before this method is called.
    - id: rotation
      type: System.Numerics.Quaternion
      description: The Quaternion rotation to apply to the Plane.
    return:
      type: System.Numerics.Plane
      description: A new Plane that results from applying the rotation.
- uid: System.Numerics.Plane.Dot(System.Numerics.Plane,System.Numerics.Vector4)
  id: Dot(System.Numerics.Plane,System.Numerics.Vector4)
  parent: System.Numerics.Plane
  href: System.Numerics.Plane.yml
  name: Dot(Plane, Vector4)
  fullName: System.Numerics.Plane.Dot(System.Numerics.Plane, System.Numerics.Vector4)
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 226
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Calculates the dot product of a Plane and Vector4.
  syntax:
    content: public static float Dot(Plane plane, Vector4 value)
    content.vb: Public Shared Function Dot(plane As Plane, value As Vector4) As Single
    parameters:
    - id: plane
      type: System.Numerics.Plane
      description: The Plane.
    - id: value
      type: System.Numerics.Vector4
      description: The Vector4.
    return:
      type: System.Single
      description: The dot product.
- uid: System.Numerics.Plane.DotCoordinate(System.Numerics.Plane,System.Numerics.Vector3)
  id: DotCoordinate(System.Numerics.Plane,System.Numerics.Vector3)
  parent: System.Numerics.Plane
  href: System.Numerics.Plane.yml
  name: DotCoordinate(Plane, Vector3)
  fullName: System.Numerics.Plane.DotCoordinate(System.Numerics.Plane, System.Numerics.Vector3)
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 241
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Returns the dot product of a specified Vector3 and the normal vector of this Plane plus the distance (D) value of the Plane.
  syntax:
    content: public static float DotCoordinate(Plane plane, Vector3 value)
    content.vb: Public Shared Function DotCoordinate(plane As Plane, value As Vector3) As Single
    parameters:
    - id: plane
      type: System.Numerics.Plane
      description: The plane.
    - id: value
      type: System.Numerics.Vector3
      description: The Vector3.
    return:
      type: System.Single
      description: The resulting value.
- uid: System.Numerics.Plane.DotNormal(System.Numerics.Plane,System.Numerics.Vector3)
  id: DotNormal(System.Numerics.Plane,System.Numerics.Vector3)
  parent: System.Numerics.Plane
  href: System.Numerics.Plane.yml
  name: DotNormal(Plane, Vector3)
  fullName: System.Numerics.Plane.DotNormal(System.Numerics.Plane, System.Numerics.Vector3)
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 263
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Returns the dot product of a specified Vector3 and the Normal vector of this Plane.
  syntax:
    content: public static float DotNormal(Plane plane, Vector3 value)
    content.vb: Public Shared Function DotNormal(plane As Plane, value As Vector3) As Single
    parameters:
    - id: plane
      type: System.Numerics.Plane
      description: The plane.
    - id: value
      type: System.Numerics.Vector3
      description: The Vector3.
    return:
      type: System.Single
      description: The resulting dot product.
- uid: System.Numerics.Plane.op_Equality(System.Numerics.Plane,System.Numerics.Plane)
  id: op_Equality(System.Numerics.Plane,System.Numerics.Plane)
  parent: System.Numerics.Plane
  href: System.Numerics.Plane.yml
  name: Equality(Plane, Plane)
  fullName: System.Numerics.Plane.Equality(System.Numerics.Plane, System.Numerics.Plane)
  type: Operator
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 284
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Returns a boolean indicating whether the two given Planes are equal.
  syntax:
    content: public static bool operator ==(Plane value1, Plane value2)
    content.vb: Public Shared Operator =(value1 As Plane, value2 As Plane) As Boolean
    parameters:
    - id: value1
      type: System.Numerics.Plane
      description: The first Plane to compare.
    - id: value2
      type: System.Numerics.Plane
      description: The second Plane to compare.
    return:
      type: System.Boolean
      description: True if the Planes are equal; False otherwise.
- uid: System.Numerics.Plane.op_Inequality(System.Numerics.Plane,System.Numerics.Plane)
  id: op_Inequality(System.Numerics.Plane,System.Numerics.Plane)
  parent: System.Numerics.Plane
  href: System.Numerics.Plane.yml
  name: Inequality(Plane, Plane)
  fullName: System.Numerics.Plane.Inequality(System.Numerics.Plane, System.Numerics.Plane)
  type: Operator
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 299
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Returns a boolean indicating whether the two given Planes are not equal.
  syntax:
    content: public static bool operator !=(Plane value1, Plane value2)
    content.vb: Public Shared Operator <>(value1 As Plane, value2 As Plane) As Boolean
    parameters:
    - id: value1
      type: System.Numerics.Plane
      description: The first Plane to compare.
    - id: value2
      type: System.Numerics.Plane
      description: The second Plane to compare.
    return:
      type: System.Boolean
      description: True if the Planes are not equal; False if they are equal.
- uid: System.Numerics.Plane.Equals(System.Numerics.Plane)
  id: Equals(System.Numerics.Plane)
  parent: System.Numerics.Plane
  href: System.Numerics.Plane.yml
  name: Equals(Plane)
  fullName: System.Numerics.Plane.Equals(System.Numerics.Plane)
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 313
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Returns a boolean indicating whether the given Plane is equal to this Plane instance.
  syntax:
    content: public bool Equals(Plane other)
    content.vb: Public Function Equals(other As Plane) As Boolean
    parameters:
    - id: other
      type: System.Numerics.Plane
      description: The Plane to compare this instance to.
    return:
      type: System.Boolean
      description: True if the other Plane is equal to this instance; False otherwise.
- uid: System.Numerics.Plane.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Numerics.Plane
  href: System.Numerics.Plane.yml
  name: Equals(Object)
  fullName: System.Numerics.Plane.Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 334
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Returns a boolean indicating whether the given Object is equal to this Plane instance.
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: The Object to compare against.
    return:
      type: System.Boolean
      description: True if the Object is equal to this Plane; False otherwise.
  overridden: System.ValueType.Equals(System.Object)
- uid: System.Numerics.Plane.ToString
  id: ToString
  parent: System.Numerics.Plane
  href: System.Numerics.Plane.yml
  name: ToString()
  fullName: System.Numerics.Plane.ToString()
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 349
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Returns a String representing this Plane instance.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: The string representation.
  overridden: System.ValueType.ToString
- uid: System.Numerics.Plane.GetHashCode
  id: GetHashCode
  parent: System.Numerics.Plane
  href: System.Numerics.Plane.yml
  name: GetHashCode()
  fullName: System.Numerics.Plane.GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Plane.cs
    startLine: 360
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Returns the hash code for this instance.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: The hash code.
  overridden: System.ValueType.GetHashCode
references:
- uid: System.Numerics
  isExternal: false
  name: System.Numerics
  fullName: System.Numerics
  type: Namespace
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  fullName: System.Single
- uid: System.Numerics.Vector3
  parent: System.Numerics
  isExternal: false
  href: System.Numerics.Vector3.yml
  name: Vector3
  fullName: System.Numerics.Vector3
  type: Struct
  summary: A structure encapsulating three single precision floating point values and provides hardware accelerated methods.
- uid: System.Numerics.Vector4
  parent: System.Numerics
  isExternal: false
  href: System.Numerics.Vector4.yml
  name: Vector4
  fullName: System.Numerics.Vector4
  type: Struct
  summary: A structure encapsulating four single precision floating point values and provides hardware accelerated methods.
- uid: System.Numerics.Plane
  parent: System.Numerics
  isExternal: false
  href: System.Numerics.Plane.yml
  name: Plane
  fullName: System.Numerics.Plane
  type: Struct
  summary: A structure encapsulating a 3D Plane
- uid: System.Numerics.Matrix4x4
  parent: System.Numerics
  isExternal: false
  href: System.Numerics.Matrix4x4.yml
  name: Matrix4x4
  fullName: System.Numerics.Matrix4x4
  type: Struct
  summary: A structure encapsulating a 4x4 matrix.
- uid: System.Numerics.Quaternion
  parent: System.Numerics
  isExternal: false
  href: System.Numerics.Quaternion.yml
  name: Quaternion
  fullName: System.Numerics.Quaternion
  type: Struct
  summary: >-
    A structure encapsulating a four-dimensional vector (x,y,z,w),

    which is used to efficiently rotate an object about the (x,y,z) vector by the angle theta, where w = cos(theta/2).
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  fullName: System.ValueType
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
