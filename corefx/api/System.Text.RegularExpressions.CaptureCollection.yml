items:
- uid: System.Text.RegularExpressions.CaptureCollection
  id: CaptureCollection
  parent: System.Text.RegularExpressions
  children:
  - System.Text.RegularExpressions.CaptureCollection.Count
  - System.Text.RegularExpressions.CaptureCollection.GetEnumerator
  - System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)
  - System.Text.RegularExpressions.CaptureCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Text.RegularExpressions.CaptureCollection.System#Collections#ICollection#IsSynchronized
  - System.Text.RegularExpressions.CaptureCollection.System#Collections#ICollection#SyncRoot
  href: System.Text.RegularExpressions.CaptureCollection.yml
  name: CaptureCollection
  fullName: System.Text.RegularExpressions.CaptureCollection
  type: Class
  source:
    remote: &o0
      path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCaptureCollection.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCaptureCollection.cs
    startLine: 20
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: >-
    Represents a sequence of capture substrings. The object is used

    to return the set of captures done by a single capturing group.
  syntax:
    content: 'public class CaptureCollection : ICollection, IEnumerable'
    content.vb: Public Class CaptureCollection Implements ICollection, IEnumerable
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Text.RegularExpressions.CaptureCollection.Count
  id: Count
  parent: System.Text.RegularExpressions.CaptureCollection
  href: System.Text.RegularExpressions.CaptureCollection.yml
  name: Count
  fullName: System.Text.RegularExpressions.CaptureCollection.Count
  type: Property
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCaptureCollection.cs
    startLine: 35
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Returns the number of captures.
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
- uid: System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Text.RegularExpressions.CaptureCollection
  href: System.Text.RegularExpressions.CaptureCollection.yml
  name: Item[Int32]
  name.vb: Item(Int32)
  fullName: System.Text.RegularExpressions.CaptureCollection.Item[System.Int32]
  fullName.vb: System.Text.RegularExpressions.CaptureCollection.Item(System.Int32)
  type: Property
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCaptureCollection.cs
    startLine: 43
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Returns a specific capture, by index, in this collection.
  syntax:
    content: public Capture this[int i] { get; }
    content.vb: Public ReadOnly Property Item(i As Integer) As Capture
    parameters:
    - id: i
      type: System.Int32
    return:
      type: System.Text.RegularExpressions.Capture
- uid: System.Text.RegularExpressions.CaptureCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Text.RegularExpressions.CaptureCollection
  href: System.Text.RegularExpressions.CaptureCollection.yml
  name: GetEnumerator()
  fullName: System.Text.RegularExpressions.CaptureCollection.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCaptureCollection.cs
    startLine: 51
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  summary: Provides an enumerator in the same order as Item[].
  syntax:
    content: public IEnumerator GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator
    return:
      type: System.Collections.IEnumerator
- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  parent: System.Text.RegularExpressions.CaptureCollection
  href: System.Text.RegularExpressions.CaptureCollection.yml
  name: ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
  fullName: System.Text.RegularExpressions.CaptureCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCaptureCollection.cs
    startLine: 80
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  syntax:
    content: bool ICollection.IsSynchronized { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized
    parameters: []
    return:
      type: System.Boolean
- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  parent: System.Text.RegularExpressions.CaptureCollection
  href: System.Text.RegularExpressions.CaptureCollection.yml
  name: ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
  fullName: System.Text.RegularExpressions.CaptureCollection.System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCaptureCollection.cs
    startLine: 85
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  syntax:
    content: object ICollection.SyncRoot { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot
    parameters: []
    return:
      type: System.Object
- uid: System.Text.RegularExpressions.CaptureCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Text.RegularExpressions.CaptureCollection
  href: System.Text.RegularExpressions.CaptureCollection.yml
  name: ICollection.CopyTo(Array, Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  fullName: System.Text.RegularExpressions.CaptureCollection.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Text.RegularExpressions/src/System/Text/RegularExpressions/RegexCaptureCollection.cs
    startLine: 90
  assemblies:
  - System.Text.RegularExpressions
  namespace: System.Text.RegularExpressions
  syntax:
    content: void ICollection.CopyTo(Array array, int arrayIndex)
    content.vb: Sub System.Collections.ICollection.CopyTo(array As Array, arrayIndex As Integer) Implements ICollection.CopyTo
    parameters:
    - id: array
      type: System.Array
    - id: arrayIndex
      type: System.Int32
references:
- uid: System.Text.RegularExpressions
  isExternal: false
  name: System.Text.RegularExpressions
  fullName: System.Text.RegularExpressions
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Text.RegularExpressions.Capture
  isExternal: false
  href: System.Text.RegularExpressions.Capture.yml
  name: Capture
  fullName: System.Text.RegularExpressions.Capture
  type: Class
  summary: >-
    Represents the results from a single subexpression capture. The object represents

    one substring for a single successful capture.
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  fullName: System.Array
