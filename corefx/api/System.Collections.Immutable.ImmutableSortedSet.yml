items:
- uid: System.Collections.Immutable.ImmutableSortedSet
  id: ImmutableSortedSet
  parent: System.Collections.Immutable
  children:
  - System.Collections.Immutable.ImmutableSortedSet.Create``1
  - System.Collections.Immutable.ImmutableSortedSet.Create``1(``0)
  - System.Collections.Immutable.ImmutableSortedSet.Create``1(``0[])
  - System.Collections.Immutable.ImmutableSortedSet.Create``1(System.Collections.Generic.IComparer{``0})
  - System.Collections.Immutable.ImmutableSortedSet.Create``1(System.Collections.Generic.IComparer{``0},``0)
  - System.Collections.Immutable.ImmutableSortedSet.Create``1(System.Collections.Generic.IComparer{``0},``0[])
  - System.Collections.Immutable.ImmutableSortedSet.CreateBuilder``1
  - System.Collections.Immutable.ImmutableSortedSet.CreateBuilder``1(System.Collections.Generic.IComparer{``0})
  - System.Collections.Immutable.ImmutableSortedSet.CreateRange``1(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEnumerable{``0})
  - System.Collections.Immutable.ImmutableSortedSet.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})
  - System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})
  href: System.Collections.Immutable.ImmutableSortedSet.yml
  name: ImmutableSortedSet
  fullName: System.Collections.Immutable.ImmutableSortedSet
  type: Class
  source:
    remote: &o0
      path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedSet.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedSet.cs
    startLine: 11
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: A set of initialization methods for instances of [System.Collections.Immutable.ImmutableSortedSet`1](System.Collections.Immutable.ImmutableSortedSet`1.yml).
  syntax:
    content: public class ImmutableSortedSet
    content.vb: Public Class ImmutableSortedSet
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Collections.Immutable.ImmutableSortedSet.Create``1
  id: Create``1
  parent: System.Collections.Immutable.ImmutableSortedSet
  href: System.Collections.Immutable.ImmutableSortedSet.yml
  name: Create<T>()
  name.vb: Create(Of T)()
  fullName: System.Collections.Immutable.ImmutableSortedSet.Create<T>()
  fullName.vb: System.Collections.Immutable.ImmutableSortedSet.Create(Of T)()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedSet.cs
    startLine: 18
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Returns an empty collection.
  syntax:
    content: public static ImmutableSortedSet<T> Create<T>()
    content.vb: Public Shared Function Create(Of T) As ImmutableSortedSet(Of T)
    typeParameters:
    - id: T
      description: The type of items stored by the collection.
    return:
      type: System.Collections.Immutable.ImmutableSortedSet{{T}}
      description: The immutable collection.
- uid: System.Collections.Immutable.ImmutableSortedSet.Create``1(System.Collections.Generic.IComparer{``0})
  id: Create``1(System.Collections.Generic.IComparer{``0})
  parent: System.Collections.Immutable.ImmutableSortedSet
  href: System.Collections.Immutable.ImmutableSortedSet.yml
  name: Create<T>(IComparer<T>)
  name.vb: Create(Of T)(IComparer(Of T))
  fullName: System.Collections.Immutable.ImmutableSortedSet.Create<T>(System.Collections.Generic.IComparer<T>)
  fullName.vb: System.Collections.Immutable.ImmutableSortedSet.Create(Of T)(System.Collections.Generic.IComparer(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedSet.cs
    startLine: 32
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Returns an empty collection.
  syntax:
    content: public static ImmutableSortedSet<T> Create<T>(IComparer<T> comparer)
    content.vb: Public Shared Function Create(Of T)(comparer As IComparer(Of T)) As ImmutableSortedSet(Of T)
    parameters:
    - id: comparer
      type: System.Collections.Generic.IComparer{{T}}
      description: The comparer.
    typeParameters:
    - id: T
      description: The type of items stored by the collection.
    return:
      type: System.Collections.Immutable.ImmutableSortedSet{{T}}
      description: The immutable collection.
- uid: System.Collections.Immutable.ImmutableSortedSet.Create``1(``0)
  id: Create``1(``0)
  parent: System.Collections.Immutable.ImmutableSortedSet
  href: System.Collections.Immutable.ImmutableSortedSet.yml
  name: Create<T>(T)
  name.vb: Create(Of T)(T)
  fullName: System.Collections.Immutable.ImmutableSortedSet.Create<T>(T)
  fullName.vb: System.Collections.Immutable.ImmutableSortedSet.Create(Of T)(T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedSet.cs
    startLine: 44
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable collection prefilled with the specified item.
  syntax:
    content: public static ImmutableSortedSet<T> Create<T>(T item)
    content.vb: Public Shared Function Create(Of T)(item As T) As ImmutableSortedSet(Of T)
    parameters:
    - id: item
      type: '{T}'
      description: The item to prepopulate.
    typeParameters:
    - id: T
      description: The type of items stored by the collection.
    return:
      type: System.Collections.Immutable.ImmutableSortedSet{{T}}
      description: The new immutable collection.
- uid: System.Collections.Immutable.ImmutableSortedSet.Create``1(System.Collections.Generic.IComparer{``0},``0)
  id: Create``1(System.Collections.Generic.IComparer{``0},``0)
  parent: System.Collections.Immutable.ImmutableSortedSet
  href: System.Collections.Immutable.ImmutableSortedSet.yml
  name: Create<T>(IComparer<T>, T)
  name.vb: Create(Of T)(IComparer(Of T), T)
  fullName: System.Collections.Immutable.ImmutableSortedSet.Create<T>(System.Collections.Generic.IComparer<T>, T)
  fullName.vb: System.Collections.Immutable.ImmutableSortedSet.Create(Of T)(System.Collections.Generic.IComparer(Of T), T)
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedSet.cs
    startLine: 57
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable collection prefilled with the specified item.
  syntax:
    content: public static ImmutableSortedSet<T> Create<T>(IComparer<T> comparer, T item)
    content.vb: Public Shared Function Create(Of T)(comparer As IComparer(Of T), item As T) As ImmutableSortedSet(Of T)
    parameters:
    - id: comparer
      type: System.Collections.Generic.IComparer{{T}}
      description: The comparer.
    - id: item
      type: '{T}'
      description: The item to prepopulate.
    typeParameters:
    - id: T
      description: The type of items stored by the collection.
    return:
      type: System.Collections.Immutable.ImmutableSortedSet{{T}}
      description: The new immutable collection.
- uid: System.Collections.Immutable.ImmutableSortedSet.CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  id: CreateRange``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableSortedSet
  href: System.Collections.Immutable.ImmutableSortedSet.yml
  name: CreateRange<T>(IEnumerable<T>)
  name.vb: CreateRange(Of T)(IEnumerable(Of T))
  fullName: System.Collections.Immutable.ImmutableSortedSet.CreateRange<T>(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: System.Collections.Immutable.ImmutableSortedSet.CreateRange(Of T)(System.Collections.Generic.IEnumerable(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedSet.cs
    startLine: 69
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable collection prefilled with the specified items.
  syntax:
    content: public static ImmutableSortedSet<T> CreateRange<T>(IEnumerable<T> items)
    content.vb: Public Shared Function CreateRange(Of T)(items As IEnumerable(Of T)) As ImmutableSortedSet(Of T)
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The items to prepopulate.
    typeParameters:
    - id: T
      description: The type of items stored by the collection.
    return:
      type: System.Collections.Immutable.ImmutableSortedSet{{T}}
      description: The new immutable collection.
- uid: System.Collections.Immutable.ImmutableSortedSet.CreateRange``1(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEnumerable{``0})
  id: CreateRange``1(System.Collections.Generic.IComparer{``0},System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableSortedSet
  href: System.Collections.Immutable.ImmutableSortedSet.yml
  name: CreateRange<T>(IComparer<T>, IEnumerable<T>)
  name.vb: CreateRange(Of T)(IComparer(Of T), IEnumerable(Of T))
  fullName: System.Collections.Immutable.ImmutableSortedSet.CreateRange<T>(System.Collections.Generic.IComparer<T>, System.Collections.Generic.IEnumerable<T>)
  fullName.vb: System.Collections.Immutable.ImmutableSortedSet.CreateRange(Of T)(System.Collections.Generic.IComparer(Of T), System.Collections.Generic.IEnumerable(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedSet.cs
    startLine: 82
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable collection prefilled with the specified items.
  syntax:
    content: public static ImmutableSortedSet<T> CreateRange<T>(IComparer<T> comparer, IEnumerable<T> items)
    content.vb: Public Shared Function CreateRange(Of T)(comparer As IComparer(Of T), items As IEnumerable(Of T)) As ImmutableSortedSet(Of T)
    parameters:
    - id: comparer
      type: System.Collections.Generic.IComparer{{T}}
      description: The comparer.
    - id: items
      type: System.Collections.Generic.IEnumerable{{T}}
      description: The items to prepopulate.
    typeParameters:
    - id: T
      description: The type of items stored by the collection.
    return:
      type: System.Collections.Immutable.ImmutableSortedSet{{T}}
      description: The new immutable collection.
- uid: System.Collections.Immutable.ImmutableSortedSet.Create``1(``0[])
  id: Create``1(``0[])
  parent: System.Collections.Immutable.ImmutableSortedSet
  href: System.Collections.Immutable.ImmutableSortedSet.yml
  name: Create<T>(T[])
  name.vb: Create(Of T)(T())
  fullName: System.Collections.Immutable.ImmutableSortedSet.Create<T>(T[])
  fullName.vb: System.Collections.Immutable.ImmutableSortedSet.Create(Of T)(T())
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedSet.cs
    startLine: 94
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable collection prefilled with the specified items.
  syntax:
    content: public static ImmutableSortedSet<T> Create<T>(params T[] items)
    content.vb: Public Shared Function Create(Of T)(ParamArray items As T()) As ImmutableSortedSet(Of T)
    parameters:
    - id: items
      type: '{T}[]'
      description: The items to prepopulate.
    typeParameters:
    - id: T
      description: The type of items stored by the collection.
    return:
      type: System.Collections.Immutable.ImmutableSortedSet{{T}}
      description: The new immutable collection.
- uid: System.Collections.Immutable.ImmutableSortedSet.Create``1(System.Collections.Generic.IComparer{``0},``0[])
  id: Create``1(System.Collections.Generic.IComparer{``0},``0[])
  parent: System.Collections.Immutable.ImmutableSortedSet
  href: System.Collections.Immutable.ImmutableSortedSet.yml
  name: Create<T>(IComparer<T>, T[])
  name.vb: Create(Of T)(IComparer(Of T), T())
  fullName: System.Collections.Immutable.ImmutableSortedSet.Create<T>(System.Collections.Generic.IComparer<T>, T[])
  fullName.vb: System.Collections.Immutable.ImmutableSortedSet.Create(Of T)(System.Collections.Generic.IComparer(Of T), T())
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedSet.cs
    startLine: 107
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Creates a new immutable collection prefilled with the specified items.
  syntax:
    content: public static ImmutableSortedSet<T> Create<T>(IComparer<T> comparer, params T[] items)
    content.vb: Public Shared Function Create(Of T)(comparer As IComparer(Of T), ParamArray items As T()) As ImmutableSortedSet(Of T)
    parameters:
    - id: comparer
      type: System.Collections.Generic.IComparer{{T}}
      description: The comparer.
    - id: items
      type: '{T}[]'
      description: The items to prepopulate.
    typeParameters:
    - id: T
      description: The type of items stored by the collection.
    return:
      type: System.Collections.Immutable.ImmutableSortedSet{{T}}
      description: The new immutable collection.
- uid: System.Collections.Immutable.ImmutableSortedSet.CreateBuilder``1
  id: CreateBuilder``1
  parent: System.Collections.Immutable.ImmutableSortedSet
  href: System.Collections.Immutable.ImmutableSortedSet.yml
  name: CreateBuilder<T>()
  name.vb: CreateBuilder(Of T)()
  fullName: System.Collections.Immutable.ImmutableSortedSet.CreateBuilder<T>()
  fullName.vb: System.Collections.Immutable.ImmutableSortedSet.CreateBuilder(Of T)()
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedSet.cs
    startLine: 118
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Returns an empty collection.
  syntax:
    content: public static ImmutableSortedSet<T>.Builder CreateBuilder<T>()
    content.vb: Public Shared Function CreateBuilder(Of T) As ImmutableSortedSet(Of T).Builder
    typeParameters:
    - id: T
      description: The type of items stored by the collection.
    return:
      type: System.Collections.Immutable.ImmutableSortedSet{{T}}.Builder
      description: The immutable collection.
- uid: System.Collections.Immutable.ImmutableSortedSet.CreateBuilder``1(System.Collections.Generic.IComparer{``0})
  id: CreateBuilder``1(System.Collections.Generic.IComparer{``0})
  parent: System.Collections.Immutable.ImmutableSortedSet
  href: System.Collections.Immutable.ImmutableSortedSet.yml
  name: CreateBuilder<T>(IComparer<T>)
  name.vb: CreateBuilder(Of T)(IComparer(Of T))
  fullName: System.Collections.Immutable.ImmutableSortedSet.CreateBuilder<T>(System.Collections.Generic.IComparer<T>)
  fullName.vb: System.Collections.Immutable.ImmutableSortedSet.CreateBuilder(Of T)(System.Collections.Generic.IComparer(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedSet.cs
    startLine: 132
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Returns an empty collection.
  syntax:
    content: public static ImmutableSortedSet<T>.Builder CreateBuilder<T>(IComparer<T> comparer)
    content.vb: Public Shared Function CreateBuilder(Of T)(comparer As IComparer(Of T)) As ImmutableSortedSet(Of T).Builder
    parameters:
    - id: comparer
      type: System.Collections.Generic.IComparer{{T}}
      description: The comparer.
    typeParameters:
    - id: T
      description: The type of items stored by the collection.
    return:
      type: System.Collections.Immutable.ImmutableSortedSet{{T}}.Builder
      description: The immutable collection.
- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})
  id: ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IComparer{``0})
  parent: System.Collections.Immutable.ImmutableSortedSet
  href: System.Collections.Immutable.ImmutableSortedSet.yml
  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>, IComparer<TSource>)
  name.vb: ToImmutableSortedSet(Of TSource)(IEnumerable(Of TSource), IComparer(Of TSource))
  fullName: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IComparer<TSource>)
  fullName.vb: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource), System.Collections.Generic.IComparer(Of TSource))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedSet.cs
    startLine: 145
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Enumerates a sequence exactly once and produces an immutable set of its contents.
  syntax:
    content: public static ImmutableSortedSet<TSource> ToImmutableSortedSet<TSource>(IEnumerable<TSource> source, IComparer<TSource> comparer)
    content.vb: Public Shared Function ToImmutableSortedSet(Of TSource)(source As IEnumerable(Of TSource), comparer As IComparer(Of TSource)) As ImmutableSortedSet(Of TSource)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
      description: The sequence to enumerate.
    - id: comparer
      type: System.Collections.Generic.IComparer{{TSource}}
      description: The comparer to use for initializing and adding members to the sorted set.
    typeParameters:
    - id: TSource
      description: The type of element in the sequence.
    return:
      type: System.Collections.Immutable.ImmutableSortedSet{{TSource}}
      description: An immutable set.
- uid: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})
  id: ToImmutableSortedSet``1(System.Collections.Generic.IEnumerable{``0})
  parent: System.Collections.Immutable.ImmutableSortedSet
  href: System.Collections.Immutable.ImmutableSortedSet.yml
  name: ToImmutableSortedSet<TSource>(IEnumerable<TSource>)
  name.vb: ToImmutableSortedSet(Of TSource)(IEnumerable(Of TSource))
  fullName: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet<TSource>(System.Collections.Generic.IEnumerable<TSource>)
  fullName.vb: System.Collections.Immutable.ImmutableSortedSet.ToImmutableSortedSet(Of TSource)(System.Collections.Generic.IEnumerable(Of TSource))
  type: Method
  source:
    remote: *o0
    path: src/System.Collections.Immutable/src/System/Collections/Immutable/ImmutableSortedSet.cs
    startLine: 163
  assemblies:
  - System.Collections.Immutable
  namespace: System.Collections.Immutable
  summary: Enumerates a sequence exactly once and produces an immutable set of its contents.
  syntax:
    content: public static ImmutableSortedSet<TSource> ToImmutableSortedSet<TSource>(IEnumerable<TSource> source)
    content.vb: Public Shared Function ToImmutableSortedSet(Of TSource)(source As IEnumerable(Of TSource)) As ImmutableSortedSet(Of TSource)
    parameters:
    - id: source
      type: System.Collections.Generic.IEnumerable{{TSource}}
      description: The sequence to enumerate.
    typeParameters:
    - id: TSource
      description: The type of element in the sequence.
    return:
      type: System.Collections.Immutable.ImmutableSortedSet{{TSource}}
      description: An immutable set.
references:
- uid: System.Collections.Immutable.ImmutableSortedSet`1
  parent: System.Collections.Immutable
  isExternal: false
  href: System.Collections.Immutable.ImmutableSortedSet`1.yml
  name: ImmutableSortedSet<T>
  name.vb: ImmutableSortedSet(Of T)
  fullName: System.Collections.Immutable.ImmutableSortedSet<T>
  fullName.vb: System.Collections.Immutable.ImmutableSortedSet(Of T)
  type: Class
  summary: An immutable sorted set implementation.
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableSortedSet`1
    name: ImmutableSortedSet
    fullName: System.Collections.Immutable.ImmutableSortedSet
    href: System.Collections.Immutable.ImmutableSortedSet`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableSortedSet`1
    name: ImmutableSortedSet
    fullName: System.Collections.Immutable.ImmutableSortedSet
    href: System.Collections.Immutable.ImmutableSortedSet`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Immutable
  isExternal: false
  name: System.Collections.Immutable
  fullName: System.Collections.Immutable
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Collections.Immutable.ImmutableSortedSet{{T}}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableSortedSet`1
  href: System.Collections.Immutable.ImmutableSortedSet`1.yml
  name: ImmutableSortedSet<T>
  name.vb: ImmutableSortedSet(Of T)
  fullName: System.Collections.Immutable.ImmutableSortedSet<T>
  fullName.vb: System.Collections.Immutable.ImmutableSortedSet(Of T)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableSortedSet`1
    name: ImmutableSortedSet
    fullName: System.Collections.Immutable.ImmutableSortedSet
    href: System.Collections.Immutable.ImmutableSortedSet`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableSortedSet`1
    name: ImmutableSortedSet
    fullName: System.Collections.Immutable.ImmutableSortedSet
    href: System.Collections.Immutable.ImmutableSortedSet`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IComparer{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  name: IComparer<T>
  name.vb: IComparer(Of T)
  fullName: System.Collections.Generic.IComparer<T>
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IComparer`1
  parent: System.Collections.Generic
  isExternal: true
  name: IComparer<T>
  name.vb: IComparer(Of T)
  fullName: System.Collections.Generic.IComparer<T>
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.Collections.Generic.IEnumerable{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  name.vb: IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  name.vb: IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: '{T}[]'
  isExternal: false
  name: T[]
  name.vb: T()
  fullName: T[]
  fullName.vb: T()
  spec.csharp:
  - name: T
    fullName: T
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - name: T
    fullName: T
  - name: ()
    fullName: ()
- uid: System.Collections.Immutable.ImmutableSortedSet{{T}}.Builder
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableSortedSet`1.Builder
  href: System.Collections.Immutable.ImmutableSortedSet`1.Builder.yml
  name: ImmutableSortedSet.Builder<>
  name.vb: ImmutableSortedSet.Builder(Of )
  fullName: System.Collections.Immutable.ImmutableSortedSet.Builder<>
  fullName.vb: System.Collections.Immutable.ImmutableSortedSet.Builder(Of )
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableSortedSet`1.Builder
    name: ImmutableSortedSet.Builder
    fullName: System.Collections.Immutable.ImmutableSortedSet.Builder
    href: System.Collections.Immutable.ImmutableSortedSet`1.Builder.yml
  - name: <
    fullName: <
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableSortedSet`1.Builder
    name: ImmutableSortedSet.Builder
    fullName: System.Collections.Immutable.ImmutableSortedSet.Builder
    href: System.Collections.Immutable.ImmutableSortedSet`1.Builder.yml
  - name: '(Of '
    fullName: '(Of '
  - name: )
    fullName: )
- uid: System.Collections.Immutable.ImmutableSortedSet`1.Builder
  parent: System.Collections.Immutable
  isExternal: false
  href: System.Collections.Immutable.ImmutableSortedSet`1.Builder.yml
  name: ImmutableSortedSet.Builder<>
  name.vb: ImmutableSortedSet.Builder(Of )
  fullName: System.Collections.Immutable.ImmutableSortedSet.Builder<>
  fullName.vb: System.Collections.Immutable.ImmutableSortedSet.Builder(Of )
  type: Class
  summary: >-
    A sorted set that mutates with little or no memory allocations,

    can produce and/or build on immutable sorted set instances very efficiently.
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableSortedSet`1.Builder
    name: ImmutableSortedSet.Builder
    fullName: System.Collections.Immutable.ImmutableSortedSet.Builder
    href: System.Collections.Immutable.ImmutableSortedSet`1.Builder.yml
  - name: <
    fullName: <
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableSortedSet`1.Builder
    name: ImmutableSortedSet.Builder
    fullName: System.Collections.Immutable.ImmutableSortedSet.Builder
    href: System.Collections.Immutable.ImmutableSortedSet`1.Builder.yml
  - name: '(Of '
    fullName: '(Of '
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{TSource}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<TSource>
  name.vb: IEnumerable(Of TSource)
  fullName: System.Collections.Generic.IEnumerable<TSource>
  fullName.vb: System.Collections.Generic.IEnumerable(Of TSource)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
- uid: System.Collections.Generic.IComparer{{TSource}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  name: IComparer<TSource>
  name.vb: IComparer(Of TSource)
  fullName: System.Collections.Generic.IComparer<TSource>
  fullName.vb: System.Collections.Generic.IComparer(Of TSource)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
- uid: System.Collections.Immutable.ImmutableSortedSet{{TSource}}
  parent: System.Collections.Immutable
  definition: System.Collections.Immutable.ImmutableSortedSet`1
  href: System.Collections.Immutable.ImmutableSortedSet`1.yml
  name: ImmutableSortedSet<TSource>
  name.vb: ImmutableSortedSet(Of TSource)
  fullName: System.Collections.Immutable.ImmutableSortedSet<TSource>
  fullName.vb: System.Collections.Immutable.ImmutableSortedSet(Of TSource)
  spec.csharp:
  - uid: System.Collections.Immutable.ImmutableSortedSet`1
    name: ImmutableSortedSet
    fullName: System.Collections.Immutable.ImmutableSortedSet
    href: System.Collections.Immutable.ImmutableSortedSet`1.yml
  - name: <
    fullName: <
  - name: TSource
    fullName: TSource
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Immutable.ImmutableSortedSet`1
    name: ImmutableSortedSet
    fullName: System.Collections.Immutable.ImmutableSortedSet
    href: System.Collections.Immutable.ImmutableSortedSet`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TSource
    fullName: TSource
  - name: )
    fullName: )
