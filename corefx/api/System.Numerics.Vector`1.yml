items:
- uid: System.Numerics.Vector`1
  id: Vector`1
  parent: System.Numerics
  children:
  - System.Numerics.Vector`1.#ctor(`0)
  - System.Numerics.Vector`1.#ctor(`0[])
  - System.Numerics.Vector`1.#ctor(`0[],System.Int32)
  - System.Numerics.Vector`1.CopyTo(`0[])
  - System.Numerics.Vector`1.CopyTo(`0[],System.Int32)
  - System.Numerics.Vector`1.Count
  - System.Numerics.Vector`1.Equals(System.Numerics.Vector{`0})
  - System.Numerics.Vector`1.Equals(System.Object)
  - System.Numerics.Vector`1.GetHashCode
  - System.Numerics.Vector`1.Item(System.Int32)
  - System.Numerics.Vector`1.One
  - System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  - System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  - System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  - System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  - System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  - System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  - System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Byte}
  - System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Double}
  - System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int16}
  - System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int32}
  - System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int64}
  - System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.SByte}
  - System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Single}
  - System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt16}
  - System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt32}
  - System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt64}
  - System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  - System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})
  - System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)
  - System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  - System.Numerics.Vector`1.op_OnesComplement(System.Numerics.Vector{`0})
  - System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  - System.Numerics.Vector`1.op_UnaryNegation(System.Numerics.Vector{`0})
  - System.Numerics.Vector`1.ToString
  - System.Numerics.Vector`1.ToString(System.String)
  - System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)
  - System.Numerics.Vector`1.Zero
  href: System.Numerics.Vector`1.yml
  name: Vector<T>
  name.vb: Vector(Of T)
  fullName: System.Numerics.Vector<T>
  fullName.vb: System.Numerics.Vector(Of T)
  type: Struct
  source:
    remote: &o0
      path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 40
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: >-
    A structure that represents a single Vector. The count of this Vector is fixed but CPU register dependent.

    This struct only supports numerical types. This type is intended to be used as a building block for vectorizing

    large algorithms. This type is immutable, individual elements cannot be modified.
  syntax:
    content: 'public struct Vector<T> : IEquatable<Vector<T>>, IFormattable where T : struct'
    content.vb: Public Structure Vector(Of T As Structure) Implements IEquatable(Of Vector(Of T)), IFormattable
    typeParameters:
    - id: T
  implements:
  - System.IEquatable{System.Numerics.Vector`1}
  - System.IFormattable
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: System.Numerics.Vector`1.Count
  id: Count
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Count
  fullName: System.Numerics.Vector<T>.Count
  fullName.vb: System.Numerics.Vector(Of T).Count
  type: Property
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 50
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Returns the number of elements stored in the vector. This value is hardware dependent.
  syntax:
    content: public static int Count { get; }
    content.vb: Public Shared ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
- uid: System.Numerics.Vector`1.Zero
  id: Zero
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Zero
  fullName: System.Numerics.Vector<T>.Zero
  fullName.vb: System.Numerics.Vector(Of T).Zero
  type: Property
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 70
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Returns a vector containing all zeroes.
  syntax:
    content: public static Vector<T> Zero { get; }
    content.vb: Public Shared ReadOnly Property Zero As Vector(Of T)
    parameters: []
    return:
      type: System.Numerics.Vector`1
- uid: System.Numerics.Vector`1.One
  id: One
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: One
  fullName: System.Numerics.Vector<T>.One
  fullName.vb: System.Numerics.Vector(Of T).One
  type: Property
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 77
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Returns a vector containing all ones.
  syntax:
    content: public static Vector<T> One { get; }
    content.vb: Public Shared ReadOnly Property One As Vector(Of T)
    parameters: []
    return:
      type: System.Numerics.Vector`1
- uid: System.Numerics.Vector`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Vector(T)
  fullName: System.Numerics.Vector<T>.Vector(T)
  fullName.vb: System.Numerics.Vector(Of T).Vector(T)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 142
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Constructs a vector whose components are all <code>value</code>
  syntax:
    content: public Vector(T value)
    content.vb: Public Sub New(value As T)
    parameters:
    - id: value
      type: '{T}'
- uid: System.Numerics.Vector`1.#ctor(`0[])
  id: '#ctor(`0[])'
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Vector(T[])
  name.vb: Vector(T())
  fullName: System.Numerics.Vector<T>.Vector(T[])
  fullName.vb: System.Numerics.Vector(Of T).Vector(T())
  type: Constructor
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 353
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Constructs a vector from the given array. The size of the given array must be at least Vector'T.Count.
  syntax:
    content: public Vector(T[] values)
    content.vb: Public Sub New(values As T())
    parameters:
    - id: values
      type: '{T}[]'
- uid: System.Numerics.Vector`1.#ctor(`0[],System.Int32)
  id: '#ctor(`0[],System.Int32)'
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Vector(T[], Int32)
  name.vb: Vector(T(), Int32)
  fullName: System.Numerics.Vector<T>.Vector(T[], System.Int32)
  fullName.vb: System.Numerics.Vector(Of T).Vector(T(), System.Int32)
  type: Constructor
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 360
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: >-
    Constructs a vector from the given array, starting from the given index.

    The array must contain at least Vector'T.Count from the given index.
  syntax:
    content: public Vector(T[] values, int index)
    content.vb: Public Sub New(values As T(), index As Integer)
    parameters:
    - id: values
      type: '{T}[]'
    - id: index
      type: System.Int32
- uid: System.Numerics.Vector`1.CopyTo(`0[])
  id: CopyTo(`0[])
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: CopyTo(T[])
  name.vb: CopyTo(T())
  fullName: System.Numerics.Vector<T>.CopyTo(T[])
  fullName.vb: System.Numerics.Vector(Of T).CopyTo(T())
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 756
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Copies the vector to the given destination array. The destination array must be at least size Vector'T.Count.
  syntax:
    content: public void CopyTo(T[] destination)
    content.vb: Public Sub CopyTo(destination As T())
    parameters:
    - id: destination
      type: '{T}[]'
      description: The destination array which the values are copied into
  exceptions:
  - type: System.ArgumentNullException
    description: If the destination array is null
  - type: System.ArgumentException
    description: If number of elements in source vector is greater than those available in destination array
- uid: System.Numerics.Vector`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: CopyTo(T[], Int32)
  name.vb: CopyTo(T(), Int32)
  fullName: System.Numerics.Vector<T>.CopyTo(T[], System.Int32)
  fullName.vb: System.Numerics.Vector(Of T).CopyTo(T(), System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 770
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Copies the vector to the given destination array. The destination array must be at least size Vector'T.Count.
  syntax:
    content: public void CopyTo(T[] destination, int startIndex)
    content.vb: Public Sub CopyTo(destination As T(), startIndex As Integer)
    parameters:
    - id: destination
      type: '{T}[]'
      description: The destination array which the values are copied into
    - id: startIndex
      type: System.Int32
      description: The index to start copying to
  exceptions:
  - type: System.ArgumentNullException
    description: If the destination array is null
  - type: System.ArgumentOutOfRangeException
    description: If index is greater than end of the array or index is less than zero
  - type: System.ArgumentException
    description: If number of elements in source vector is greater than those available in destination array
- uid: System.Numerics.Vector`1.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Item[Int32]
  name.vb: Item(Int32)
  fullName: System.Numerics.Vector<T>.Item[System.Int32]
  fullName.vb: System.Numerics.Vector(Of T).Item(System.Int32)
  type: Property
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 1044
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Returns the element at the given index.
  syntax:
    content: public T this[int index] { get; }
    content.vb: Public ReadOnly Property Item(index As Integer) As T
    parameters:
    - id: index
      type: System.Int32
    return:
      type: '{T}'
- uid: System.Numerics.Vector`1.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Equals(Object)
  fullName: System.Numerics.Vector<T>.Equals(System.Object)
  fullName.vb: System.Numerics.Vector(Of T).Equals(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 1135
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Returns a boolean indicating whether the given Object is equal to this vector instance.
  syntax:
    content: public override bool Equals(object obj)
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
    parameters:
    - id: obj
      type: System.Object
      description: The Object to compare against.
    return:
      type: System.Boolean
      description: True if the Object is equal to this vector; False otherwise.
  overridden: System.ValueType.Equals(System.Object)
- uid: System.Numerics.Vector`1.Equals(System.Numerics.Vector{`0})
  id: Equals(System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Equals(Vector<T>)
  name.vb: Equals(Vector(Of T))
  fullName: System.Numerics.Vector<T>.Equals(System.Numerics.Vector<T>)
  fullName.vb: System.Numerics.Vector(Of T).Equals(System.Numerics.Vector(Of T))
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 1150
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Returns a boolean indicating whether the given vector is equal to this vector instance.
  syntax:
    content: public bool Equals(Vector<T> other)
    content.vb: Public Function Equals(other As Vector(Of T)) As Boolean
    parameters:
    - id: other
      type: System.Numerics.Vector`1
      description: The vector to compare this instance to.
    return:
      type: System.Boolean
      description: True if the other vector is equal to this instance; False otherwise.
- uid: System.Numerics.Vector`1.GetHashCode
  id: GetHashCode
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: GetHashCode()
  fullName: System.Numerics.Vector<T>.GetHashCode()
  fullName.vb: System.Numerics.Vector(Of T).GetHashCode()
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 1283
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Returns the hash code for this instance.
  syntax:
    content: public override int GetHashCode()
    content.vb: Public Overrides Function GetHashCode As Integer
    return:
      type: System.Int32
      description: The hash code.
  overridden: System.ValueType.GetHashCode
- uid: System.Numerics.Vector`1.ToString
  id: ToString
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: ToString()
  fullName: System.Numerics.Vector<T>.ToString()
  fullName.vb: System.Numerics.Vector(Of T).ToString()
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 1493
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Returns a String representing this vector.
  syntax:
    content: public override string ToString()
    content.vb: Public Overrides Function ToString As String
    return:
      type: System.String
      description: The string representation.
  overridden: System.ValueType.ToString
- uid: System.Numerics.Vector`1.ToString(System.String)
  id: ToString(System.String)
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: ToString(String)
  fullName: System.Numerics.Vector<T>.ToString(System.String)
  fullName.vb: System.Numerics.Vector(Of T).ToString(System.String)
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 1503
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Returns a String representing this vector, using the specified format string to format individual elements.
  syntax:
    content: public string ToString(string format)
    content.vb: Public Function ToString(format As String) As String
    parameters:
    - id: format
      type: System.String
      description: The format of individual elements.
    return:
      type: System.String
      description: The string representation.
- uid: System.Numerics.Vector`1.ToString(System.String,System.IFormatProvider)
  id: ToString(System.String,System.IFormatProvider)
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: ToString(String, IFormatProvider)
  fullName: System.Numerics.Vector<T>.ToString(System.String, System.IFormatProvider)
  fullName.vb: System.Numerics.Vector(Of T).ToString(System.String, System.IFormatProvider)
  type: Method
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 1515
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: >-
    Returns a String representing this vector, using the specified format string to format individual elements

    and the given IFormatProvider.
  syntax:
    content: public string ToString(string format, IFormatProvider formatProvider)
    content.vb: Public Function ToString(format As String, formatProvider As IFormatProvider) As String
    parameters:
    - id: format
      type: System.String
      description: The format of individual elements.
    - id: formatProvider
      type: System.IFormatProvider
      description: The format provider to use when formatting elements.
    return:
      type: System.String
      description: The string representation.
- uid: System.Numerics.Vector`1.op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  id: op_Addition(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Addition(Vector<T>, Vector<T>)
  name.vb: Addition(Vector(Of T), Vector(Of T))
  fullName: System.Numerics.Vector<T>.Addition(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  fullName.vb: System.Numerics.Vector(Of T).Addition(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  type: Operator
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 1540
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Adds two vectors together.
  syntax:
    content: public static Vector<T> operator +(Vector<T> left, Vector<T> right)
    content.vb: Public Shared Operator +(left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: The first source vector.
    - id: right
      type: System.Numerics.Vector`1
      description: The second source vector.
    return:
      type: System.Numerics.Vector`1
      description: The summed vector.
- uid: System.Numerics.Vector`1.op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  id: op_Subtraction(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Subtraction(Vector<T>, Vector<T>)
  name.vb: Subtraction(Vector(Of T), Vector(Of T))
  fullName: System.Numerics.Vector<T>.Subtraction(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  fullName.vb: System.Numerics.Vector(Of T).Subtraction(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  type: Operator
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 1751
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Subtracts the second vector from the first.
  syntax:
    content: public static Vector<T> operator -(Vector<T> left, Vector<T> right)
    content.vb: Public Shared Operator -(left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: The first source vector.
    - id: right
      type: System.Numerics.Vector`1
      description: The second source vector.
    return:
      type: System.Numerics.Vector`1
      description: The difference vector.
- uid: System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  id: op_Multiply(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Multiply(Vector<T>, Vector<T>)
  name.vb: Multiply(Vector(Of T), Vector(Of T))
  fullName: System.Numerics.Vector<T>.Multiply(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  fullName.vb: System.Numerics.Vector(Of T).Multiply(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  type: Operator
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 1963
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Multiplies two vectors together.
  syntax:
    content: public static Vector<T> operator *(Vector<T> left, Vector<T> right)
    content.vb: Public Shared Operator *(left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: The first source vector.
    - id: right
      type: System.Numerics.Vector`1
      description: The second source vector.
    return:
      type: System.Numerics.Vector`1
      description: The product vector.
- uid: System.Numerics.Vector`1.op_Multiply(System.Numerics.Vector{`0},`0)
  id: op_Multiply(System.Numerics.Vector{`0},`0)
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Multiply(Vector<T>, T)
  name.vb: Multiply(Vector(Of T), T)
  fullName: System.Numerics.Vector<T>.Multiply(System.Numerics.Vector<T>, T)
  fullName.vb: System.Numerics.Vector(Of T).Multiply(System.Numerics.Vector(Of T), T)
  type: Operator
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 2175
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Multiplies a vector by the given scalar.
  syntax:
    content: public static Vector<T> operator *(Vector<T> value, T factor)
    content.vb: Public Shared Operator *(value As Vector(Of T), factor As T) As Vector(Of T)
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: The source vector.
    - id: factor
      type: '{T}'
      description: The scalar value.
    return:
      type: System.Numerics.Vector`1
      description: The scaled vector.
- uid: System.Numerics.Vector`1.op_Multiply(`0,System.Numerics.Vector{`0})
  id: op_Multiply(`0,System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Multiply(T, Vector<T>)
  name.vb: Multiply(T, Vector(Of T))
  fullName: System.Numerics.Vector<T>.Multiply(T, System.Numerics.Vector<T>)
  fullName.vb: System.Numerics.Vector(Of T).Multiply(T, System.Numerics.Vector(Of T))
  type: Operator
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 2294
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Multiplies a vector by the given scalar.
  syntax:
    content: public static Vector<T> operator *(T factor, Vector<T> value)
    content.vb: Public Shared Operator *(factor As T, value As Vector(Of T)) As Vector(Of T)
    parameters:
    - id: factor
      type: '{T}'
      description: The scalar value.
    - id: value
      type: System.Numerics.Vector`1
      description: The source vector.
    return:
      type: System.Numerics.Vector`1
      description: The scaled vector.
- uid: System.Numerics.Vector`1.op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  id: op_Division(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Division(Vector<T>, Vector<T>)
  name.vb: Division(Vector(Of T), Vector(Of T))
  fullName: System.Numerics.Vector<T>.Division(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  fullName.vb: System.Numerics.Vector(Of T).Division(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  type: Operator
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 2413
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Divides the first vector by the second.
  syntax:
    content: public static Vector<T> operator /(Vector<T> left, Vector<T> right)
    content.vb: Public Shared Operator /(left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: The first source vector.
    - id: right
      type: System.Numerics.Vector`1
      description: The second source vector.
    return:
      type: System.Numerics.Vector`1
      description: The vector resulting from the division.
- uid: System.Numerics.Vector`1.op_UnaryNegation(System.Numerics.Vector{`0})
  id: op_UnaryNegation(System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: UnaryNegation(Vector<T>)
  name.vb: UnaryNegation(Vector(Of T))
  fullName: System.Numerics.Vector<T>.UnaryNegation(System.Numerics.Vector<T>)
  fullName.vb: System.Numerics.Vector(Of T).UnaryNegation(System.Numerics.Vector(Of T))
  type: Operator
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 2623
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Negates a given vector.
  syntax:
    content: public static Vector<T> operator -(Vector<T> value)
    content.vb: Public Shared Operator -(value As Vector(Of T)) As Vector(Of T)
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: The source vector.
    return:
      type: System.Numerics.Vector`1
      description: The negated vector.
- uid: System.Numerics.Vector`1.op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  id: op_BitwiseAnd(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: BitwiseAnd(Vector<T>, Vector<T>)
  name.vb: BitwiseAnd(Vector(Of T), Vector(Of T))
  fullName: System.Numerics.Vector<T>.BitwiseAnd(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  fullName.vb: System.Numerics.Vector(Of T).BitwiseAnd(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  type: Operator
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 2636
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Returns a new vector by performing a bitwise-and operation on each of the elements in the given vectors.
  syntax:
    content: public static Vector<T> operator &(Vector<T> left, Vector<T> right)
    content.vb: Public Shared Operator And(left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: The first source vector.
    - id: right
      type: System.Numerics.Vector`1
      description: The second source vector.
    return:
      type: System.Numerics.Vector`1
      description: The resultant vector.
- uid: System.Numerics.Vector`1.op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  id: op_BitwiseOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: BitwiseOr(Vector<T>, Vector<T>)
  name.vb: BitwiseOr(Vector(Of T), Vector(Of T))
  fullName: System.Numerics.Vector<T>.BitwiseOr(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  fullName.vb: System.Numerics.Vector(Of T).BitwiseOr(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  type: Operator
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 2667
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Returns a new vector by performing a bitwise-or operation on each of the elements in the given vectors.
  syntax:
    content: public static Vector<T> operator |(Vector<T> left, Vector<T> right)
    content.vb: Public Shared Operator Or(left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: The first source vector.
    - id: right
      type: System.Numerics.Vector`1
      description: The second source vector.
    return:
      type: System.Numerics.Vector`1
      description: The resultant vector.
- uid: System.Numerics.Vector`1.op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  id: op_ExclusiveOr(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: ExclusiveOr(Vector<T>, Vector<T>)
  name.vb: ExclusiveOr(Vector(Of T), Vector(Of T))
  fullName: System.Numerics.Vector<T>.ExclusiveOr(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  fullName.vb: System.Numerics.Vector(Of T).ExclusiveOr(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  type: Operator
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 2698
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Returns a new vector by performing a bitwise-exclusive-or operation on each of the elements in the given vectors.
  syntax:
    content: public static Vector<T> operator ^(Vector<T> left, Vector<T> right)
    content.vb: Public Shared Operator Xor(left As Vector(Of T), right As Vector(Of T)) As Vector(Of T)
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: The first source vector.
    - id: right
      type: System.Numerics.Vector`1
      description: The second source vector.
    return:
      type: System.Numerics.Vector`1
      description: The resultant vector.
- uid: System.Numerics.Vector`1.op_OnesComplement(System.Numerics.Vector{`0})
  id: op_OnesComplement(System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: OnesComplement(Vector<T>)
  name.vb: OnesComplement(Vector(Of T))
  fullName: System.Numerics.Vector<T>.OnesComplement(System.Numerics.Vector<T>)
  fullName.vb: System.Numerics.Vector(Of T).OnesComplement(System.Numerics.Vector(Of T))
  type: Operator
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 2728
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Returns a new vector whose elements are obtained by taking the one's complement of the given vector's elements.
  syntax:
    content: public static Vector<T> operator ~(Vector<T> value)
    content.vb: Public Shared Operator Not(value As Vector(Of T)) As Vector(Of T)
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: The source vector.
    return:
      type: System.Numerics.Vector`1
      description: The one's complement vector.
- uid: System.Numerics.Vector`1.op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  id: op_Equality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Equality(Vector<T>, Vector<T>)
  name.vb: Equality(Vector(Of T), Vector(Of T))
  fullName: System.Numerics.Vector<T>.Equality(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  fullName.vb: System.Numerics.Vector(Of T).Equality(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  type: Operator
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 2742
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Returns a boolean indicating whether each pair of elements in the given vectors are equal.
  syntax:
    content: public static bool operator ==(Vector<T> left, Vector<T> right)
    content.vb: Public Shared Operator =(left As Vector(Of T), right As Vector(Of T)) As Boolean
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: The first vector to compare.
    - id: right
      type: System.Numerics.Vector`1
      description: The first vector to compare.
    return:
      type: System.Boolean
      description: True if all elements are equal; False otherwise.
- uid: System.Numerics.Vector`1.op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  id: op_Inequality(System.Numerics.Vector{`0},System.Numerics.Vector{`0})
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Inequality(Vector<T>, Vector<T>)
  name.vb: Inequality(Vector(Of T), Vector(Of T))
  fullName: System.Numerics.Vector<T>.Inequality(System.Numerics.Vector<T>, System.Numerics.Vector<T>)
  fullName.vb: System.Numerics.Vector(Of T).Inequality(System.Numerics.Vector(Of T), System.Numerics.Vector(Of T))
  type: Operator
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 2754
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Returns a boolean indicating whether any single pair of elements in the given vectors are equal.
  syntax:
    content: public static bool operator !=(Vector<T> left, Vector<T> right)
    content.vb: Public Shared Operator <>(left As Vector(Of T), right As Vector(Of T)) As Boolean
    parameters:
    - id: left
      type: System.Numerics.Vector`1
      description: The first vector to compare.
    - id: right
      type: System.Numerics.Vector`1
      description: The second vector to compare.
    return:
      type: System.Boolean
      description: True if any element pairs are equal; False if no element pairs are equal.
- uid: System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Byte}
  id: op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Byte}
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Explicit(Vector<T> to Vector<Byte>)
  name.vb: Narrowing(Vector(Of T) to Vector(Of Byte))
  fullName: System.Numerics.Vector<T>.Explicit(System.Numerics.Vector<T> to System.Numerics.Vector<System.Byte>)
  fullName.vb: System.Numerics.Vector(Of T).Narrowing(System.Numerics.Vector(Of T) to System.Numerics.Vector(Of System.Byte))
  type: Operator
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 2767
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Reinterprets the bits of the given vector into those of another type.
  syntax:
    content: public static explicit operator Vector<byte>(Vector<T> value)
    content.vb: Public Shared Narrowing Operator CType(value As Vector(Of T)) As Vector(Of Byte)
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: The source vector
    return:
      type: System.Numerics.Vector{System.Byte}
      description: The reinterpreted vector.
- uid: System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.SByte}
  id: op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.SByte}
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Explicit(Vector<T> to Vector<SByte>)
  name.vb: Narrowing(Vector(Of T) to Vector(Of SByte))
  fullName: System.Numerics.Vector<T>.Explicit(System.Numerics.Vector<T> to System.Numerics.Vector<System.SByte>)
  fullName.vb: System.Numerics.Vector(Of T).Narrowing(System.Numerics.Vector(Of T) to System.Numerics.Vector(Of System.SByte))
  type: Operator
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 2778
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Reinterprets the bits of the given vector into those of another type.
  syntax:
    content: public static explicit operator Vector<sbyte>(Vector<T> value)
    content.vb: Public Shared Narrowing Operator CType(value As Vector(Of T)) As Vector(Of SByte)
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: The source vector
    return:
      type: System.Numerics.Vector{System.SByte}
      description: The reinterpreted vector.
- uid: System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt16}
  id: op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt16}
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Explicit(Vector<T> to Vector<UInt16>)
  name.vb: Narrowing(Vector(Of T) to Vector(Of UInt16))
  fullName: System.Numerics.Vector<T>.Explicit(System.Numerics.Vector<T> to System.Numerics.Vector<System.UInt16>)
  fullName.vb: System.Numerics.Vector(Of T).Narrowing(System.Numerics.Vector(Of T) to System.Numerics.Vector(Of System.UInt16))
  type: Operator
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 2790
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Reinterprets the bits of the given vector into those of another type.
  syntax:
    content: public static explicit operator Vector<ushort>(Vector<T> value)
    content.vb: Public Shared Narrowing Operator CType(value As Vector(Of T)) As Vector(Of UShort)
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: The source vector
    return:
      type: System.Numerics.Vector{System.UInt16}
      description: The reinterpreted vector.
- uid: System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int16}
  id: op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int16}
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Explicit(Vector<T> to Vector<Int16>)
  name.vb: Narrowing(Vector(Of T) to Vector(Of Int16))
  fullName: System.Numerics.Vector<T>.Explicit(System.Numerics.Vector<T> to System.Numerics.Vector<System.Int16>)
  fullName.vb: System.Numerics.Vector(Of T).Narrowing(System.Numerics.Vector(Of T) to System.Numerics.Vector(Of System.Int16))
  type: Operator
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 2802
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Reinterprets the bits of the given vector into those of another type.
  syntax:
    content: public static explicit operator Vector<short>(Vector<T> value)
    content.vb: Public Shared Narrowing Operator CType(value As Vector(Of T)) As Vector(Of Short)
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: The source vector
    return:
      type: System.Numerics.Vector{System.Int16}
      description: The reinterpreted vector.
- uid: System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt32}
  id: op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt32}
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Explicit(Vector<T> to Vector<UInt32>)
  name.vb: Narrowing(Vector(Of T) to Vector(Of UInt32))
  fullName: System.Numerics.Vector<T>.Explicit(System.Numerics.Vector<T> to System.Numerics.Vector<System.UInt32>)
  fullName.vb: System.Numerics.Vector(Of T).Narrowing(System.Numerics.Vector(Of T) to System.Numerics.Vector(Of System.UInt32))
  type: Operator
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 2813
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Reinterprets the bits of the given vector into those of another type.
  syntax:
    content: public static explicit operator Vector<uint>(Vector<T> value)
    content.vb: Public Shared Narrowing Operator CType(value As Vector(Of T)) As Vector(Of UInteger)
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: The source vector
    return:
      type: System.Numerics.Vector{System.UInt32}
      description: The reinterpreted vector.
- uid: System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int32}
  id: op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int32}
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Explicit(Vector<T> to Vector<Int32>)
  name.vb: Narrowing(Vector(Of T) to Vector(Of Int32))
  fullName: System.Numerics.Vector<T>.Explicit(System.Numerics.Vector<T> to System.Numerics.Vector<System.Int32>)
  fullName.vb: System.Numerics.Vector(Of T).Narrowing(System.Numerics.Vector(Of T) to System.Numerics.Vector(Of System.Int32))
  type: Operator
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 2825
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Reinterprets the bits of the given vector into those of another type.
  syntax:
    content: public static explicit operator Vector<int>(Vector<T> value)
    content.vb: Public Shared Narrowing Operator CType(value As Vector(Of T)) As Vector(Of Integer)
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: The source vector
    return:
      type: System.Numerics.Vector{System.Int32}
      description: The reinterpreted vector.
- uid: System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt64}
  id: op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.UInt64}
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Explicit(Vector<T> to Vector<UInt64>)
  name.vb: Narrowing(Vector(Of T) to Vector(Of UInt64))
  fullName: System.Numerics.Vector<T>.Explicit(System.Numerics.Vector<T> to System.Numerics.Vector<System.UInt64>)
  fullName.vb: System.Numerics.Vector(Of T).Narrowing(System.Numerics.Vector(Of T) to System.Numerics.Vector(Of System.UInt64))
  type: Operator
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 2836
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Reinterprets the bits of the given vector into those of another type.
  syntax:
    content: public static explicit operator Vector<ulong>(Vector<T> value)
    content.vb: Public Shared Narrowing Operator CType(value As Vector(Of T)) As Vector(Of ULong)
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: The source vector
    return:
      type: System.Numerics.Vector{System.UInt64}
      description: The reinterpreted vector.
- uid: System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int64}
  id: op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Int64}
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Explicit(Vector<T> to Vector<Int64>)
  name.vb: Narrowing(Vector(Of T) to Vector(Of Int64))
  fullName: System.Numerics.Vector<T>.Explicit(System.Numerics.Vector<T> to System.Numerics.Vector<System.Int64>)
  fullName.vb: System.Numerics.Vector(Of T).Narrowing(System.Numerics.Vector(Of T) to System.Numerics.Vector(Of System.Int64))
  type: Operator
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 2848
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Reinterprets the bits of the given vector into those of another type.
  syntax:
    content: public static explicit operator Vector<long>(Vector<T> value)
    content.vb: Public Shared Narrowing Operator CType(value As Vector(Of T)) As Vector(Of Long)
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: The source vector
    return:
      type: System.Numerics.Vector{System.Int64}
      description: The reinterpreted vector.
- uid: System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Single}
  id: op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Single}
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Explicit(Vector<T> to Vector<Single>)
  name.vb: Narrowing(Vector(Of T) to Vector(Of Single))
  fullName: System.Numerics.Vector<T>.Explicit(System.Numerics.Vector<T> to System.Numerics.Vector<System.Single>)
  fullName.vb: System.Numerics.Vector(Of T).Narrowing(System.Numerics.Vector(Of T) to System.Numerics.Vector(Of System.Single))
  type: Operator
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 2859
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Reinterprets the bits of the given vector into those of another type.
  syntax:
    content: public static explicit operator Vector<float>(Vector<T> value)
    content.vb: Public Shared Narrowing Operator CType(value As Vector(Of T)) As Vector(Of Single)
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: The source vector
    return:
      type: System.Numerics.Vector{System.Single}
      description: The reinterpreted vector.
- uid: System.Numerics.Vector`1.op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Double}
  id: op_Explicit(System.Numerics.Vector{`0})~System.Numerics.Vector{System.Double}
  parent: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Explicit(Vector<T> to Vector<Double>)
  name.vb: Narrowing(Vector(Of T) to Vector(Of Double))
  fullName: System.Numerics.Vector<T>.Explicit(System.Numerics.Vector<T> to System.Numerics.Vector<System.Double>)
  fullName.vb: System.Numerics.Vector(Of T).Narrowing(System.Numerics.Vector(Of T) to System.Numerics.Vector(Of System.Double))
  type: Operator
  source:
    remote: *o0
    path: src/System.Numerics.Vectors/src/System/Numerics/Vector.cs
    startLine: 2870
  assemblies:
  - System.Numerics.Vectors
  namespace: System.Numerics
  summary: Reinterprets the bits of the given vector into those of another type.
  syntax:
    content: public static explicit operator Vector<double>(Vector<T> value)
    content.vb: Public Shared Narrowing Operator CType(value As Vector(Of T)) As Vector(Of Double)
    parameters:
    - id: value
      type: System.Numerics.Vector`1
      description: The source vector
    return:
      type: System.Numerics.Vector{System.Double}
      description: The reinterpreted vector.
references:
- uid: System.Numerics
  isExternal: false
  name: System.Numerics
  fullName: System.Numerics
  type: Namespace
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Numerics.Vector`1
  parent: System.Numerics
  isExternal: false
  href: System.Numerics.Vector`1.yml
  name: Vector<T>
  name.vb: Vector(Of T)
  fullName: System.Numerics.Vector<T>
  fullName.vb: System.Numerics.Vector(Of T)
  type: Struct
  summary: >-
    A structure that represents a single Vector. The count of this Vector is fixed but CPU register dependent.

    This struct only supports numerical types. This type is intended to be used as a building block for vectorizing

    large algorithms. This type is immutable, individual elements cannot be modified.
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
    href: System.Numerics.Vector`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
    href: System.Numerics.Vector`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: '{T}[]'
  isExternal: false
  name: T[]
  name.vb: T()
  fullName: T[]
  fullName.vb: T()
  spec.csharp:
  - name: T
    fullName: T
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - name: T
    fullName: T
  - name: ()
    fullName: ()
- uid: System.ArgumentNullException
- uid: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.ValueType
  parent: System
  isExternal: true
  name: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.String
  parent: System
  isExternal: true
  name: String
  fullName: System.String
- uid: System.IFormatProvider
  parent: System
  isExternal: true
  name: IFormatProvider
  fullName: System.IFormatProvider
- uid: System.Numerics.Vector{System.Byte}
  parent: System.Numerics
  definition: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Vector<Byte>
  name.vb: Vector(Of Byte)
  fullName: System.Numerics.Vector<System.Byte>
  fullName.vb: System.Numerics.Vector(Of System.Byte)
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
    href: System.Numerics.Vector`1.yml
  - name: <
    fullName: <
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
    href: System.Numerics.Vector`1.yml
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    isExternal: true
  - name: )
    fullName: )
- uid: System.Numerics.Vector{System.SByte}
  parent: System.Numerics
  definition: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Vector<SByte>
  name.vb: Vector(Of SByte)
  fullName: System.Numerics.Vector<System.SByte>
  fullName.vb: System.Numerics.Vector(Of System.SByte)
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
    href: System.Numerics.Vector`1.yml
  - name: <
    fullName: <
  - uid: System.SByte
    name: SByte
    fullName: System.SByte
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
    href: System.Numerics.Vector`1.yml
  - name: '(Of '
    fullName: '(Of '
  - uid: System.SByte
    name: SByte
    fullName: System.SByte
    isExternal: true
  - name: )
    fullName: )
- uid: System.Numerics.Vector{System.UInt16}
  parent: System.Numerics
  definition: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Vector<UInt16>
  name.vb: Vector(Of UInt16)
  fullName: System.Numerics.Vector<System.UInt16>
  fullName.vb: System.Numerics.Vector(Of System.UInt16)
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
    href: System.Numerics.Vector`1.yml
  - name: <
    fullName: <
  - uid: System.UInt16
    name: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
    href: System.Numerics.Vector`1.yml
  - name: '(Of '
    fullName: '(Of '
  - uid: System.UInt16
    name: UInt16
    fullName: System.UInt16
    isExternal: true
  - name: )
    fullName: )
- uid: System.Numerics.Vector{System.Int16}
  parent: System.Numerics
  definition: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Vector<Int16>
  name.vb: Vector(Of Int16)
  fullName: System.Numerics.Vector<System.Int16>
  fullName.vb: System.Numerics.Vector(Of System.Int16)
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
    href: System.Numerics.Vector`1.yml
  - name: <
    fullName: <
  - uid: System.Int16
    name: Int16
    fullName: System.Int16
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
    href: System.Numerics.Vector`1.yml
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int16
    name: Int16
    fullName: System.Int16
    isExternal: true
  - name: )
    fullName: )
- uid: System.Numerics.Vector{System.UInt32}
  parent: System.Numerics
  definition: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Vector<UInt32>
  name.vb: Vector(Of UInt32)
  fullName: System.Numerics.Vector<System.UInt32>
  fullName.vb: System.Numerics.Vector(Of System.UInt32)
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
    href: System.Numerics.Vector`1.yml
  - name: <
    fullName: <
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
    href: System.Numerics.Vector`1.yml
  - name: '(Of '
    fullName: '(Of '
  - uid: System.UInt32
    name: UInt32
    fullName: System.UInt32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Numerics.Vector{System.Int32}
  parent: System.Numerics
  definition: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Vector<Int32>
  name.vb: Vector(Of Int32)
  fullName: System.Numerics.Vector<System.Int32>
  fullName.vb: System.Numerics.Vector(Of System.Int32)
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
    href: System.Numerics.Vector`1.yml
  - name: <
    fullName: <
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
    href: System.Numerics.Vector`1.yml
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Numerics.Vector{System.UInt64}
  parent: System.Numerics
  definition: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Vector<UInt64>
  name.vb: Vector(Of UInt64)
  fullName: System.Numerics.Vector<System.UInt64>
  fullName.vb: System.Numerics.Vector(Of System.UInt64)
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
    href: System.Numerics.Vector`1.yml
  - name: <
    fullName: <
  - uid: System.UInt64
    name: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
    href: System.Numerics.Vector`1.yml
  - name: '(Of '
    fullName: '(Of '
  - uid: System.UInt64
    name: UInt64
    fullName: System.UInt64
    isExternal: true
  - name: )
    fullName: )
- uid: System.Numerics.Vector{System.Int64}
  parent: System.Numerics
  definition: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Vector<Int64>
  name.vb: Vector(Of Int64)
  fullName: System.Numerics.Vector<System.Int64>
  fullName.vb: System.Numerics.Vector(Of System.Int64)
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
    href: System.Numerics.Vector`1.yml
  - name: <
    fullName: <
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
    href: System.Numerics.Vector`1.yml
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Int64
    name: Int64
    fullName: System.Int64
    isExternal: true
  - name: )
    fullName: )
- uid: System.Numerics.Vector{System.Single}
  parent: System.Numerics
  definition: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Vector<Single>
  name.vb: Vector(Of Single)
  fullName: System.Numerics.Vector<System.Single>
  fullName.vb: System.Numerics.Vector(Of System.Single)
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
    href: System.Numerics.Vector`1.yml
  - name: <
    fullName: <
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
    href: System.Numerics.Vector`1.yml
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Single
    name: Single
    fullName: System.Single
    isExternal: true
  - name: )
    fullName: )
- uid: System.Numerics.Vector{System.Double}
  parent: System.Numerics
  definition: System.Numerics.Vector`1
  href: System.Numerics.Vector`1.yml
  name: Vector<Double>
  name.vb: Vector(Of Double)
  fullName: System.Numerics.Vector<System.Double>
  fullName.vb: System.Numerics.Vector(Of System.Double)
  spec.csharp:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
    href: System.Numerics.Vector`1.yml
  - name: <
    fullName: <
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Numerics.Vector`1
    name: Vector
    fullName: System.Numerics.Vector
    href: System.Numerics.Vector`1.yml
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    fullName: System.Double
    isExternal: true
  - name: )
    fullName: )
