items:
- uid: System.Reflection.Metadata.HandleComparer
  id: HandleComparer
  parent: System.Reflection.Metadata
  children:
  - System.Reflection.Metadata.HandleComparer.Compare(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)
  - System.Reflection.Metadata.HandleComparer.Compare(System.Reflection.Metadata.Handle,System.Reflection.Metadata.Handle)
  - System.Reflection.Metadata.HandleComparer.Default
  - System.Reflection.Metadata.HandleComparer.Equals(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)
  - System.Reflection.Metadata.HandleComparer.Equals(System.Reflection.Metadata.Handle,System.Reflection.Metadata.Handle)
  - System.Reflection.Metadata.HandleComparer.GetHashCode(System.Reflection.Metadata.EntityHandle)
  - System.Reflection.Metadata.HandleComparer.GetHashCode(System.Reflection.Metadata.Handle)
  href: System.Reflection.Metadata.HandleComparer.yml
  name: HandleComparer
  fullName: System.Reflection.Metadata.HandleComparer
  type: Class
  source:
    remote: &o0
      path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/HandleComparer.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/HandleComparer.cs
    startLine: 7
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: 'public sealed class HandleComparer : IEqualityComparer<Handle>, IComparer<Handle>, IEqualityComparer<EntityHandle>, IComparer<EntityHandle>'
    content.vb: Public NotInheritable Class HandleComparer Implements IEqualityComparer(Of Handle), IComparer(Of Handle), IEqualityComparer(Of EntityHandle), IComparer(Of EntityHandle)
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IEqualityComparer{System.Reflection.Metadata.Handle}
  - System.Collections.Generic.IComparer{System.Reflection.Metadata.Handle}
  - System.Collections.Generic.IEqualityComparer{System.Reflection.Metadata.EntityHandle}
  - System.Collections.Generic.IComparer{System.Reflection.Metadata.EntityHandle}
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Reflection.Metadata.HandleComparer.Default
  id: Default
  parent: System.Reflection.Metadata.HandleComparer
  href: System.Reflection.Metadata.HandleComparer.yml
  name: Default
  fullName: System.Reflection.Metadata.HandleComparer.Default
  type: Property
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/HandleComparer.cs
    startLine: 15
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public static HandleComparer Default { get; }
    content.vb: Public Shared ReadOnly Property Default As HandleComparer
    parameters: []
    return:
      type: System.Reflection.Metadata.HandleComparer
- uid: System.Reflection.Metadata.HandleComparer.Equals(System.Reflection.Metadata.Handle,System.Reflection.Metadata.Handle)
  id: Equals(System.Reflection.Metadata.Handle,System.Reflection.Metadata.Handle)
  parent: System.Reflection.Metadata.HandleComparer
  href: System.Reflection.Metadata.HandleComparer.yml
  name: Equals(Handle, Handle)
  fullName: System.Reflection.Metadata.HandleComparer.Equals(System.Reflection.Metadata.Handle, System.Reflection.Metadata.Handle)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/HandleComparer.cs
    startLine: 20
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public bool Equals(Handle x, Handle y)
    content.vb: Public Function Equals(x As Handle, y As Handle) As Boolean
    parameters:
    - id: x
      type: System.Reflection.Metadata.Handle
    - id: y
      type: System.Reflection.Metadata.Handle
    return:
      type: System.Boolean
- uid: System.Reflection.Metadata.HandleComparer.Equals(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)
  id: Equals(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)
  parent: System.Reflection.Metadata.HandleComparer
  href: System.Reflection.Metadata.HandleComparer.yml
  name: Equals(EntityHandle, EntityHandle)
  fullName: System.Reflection.Metadata.HandleComparer.Equals(System.Reflection.Metadata.EntityHandle, System.Reflection.Metadata.EntityHandle)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/HandleComparer.cs
    startLine: 25
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public bool Equals(EntityHandle x, EntityHandle y)
    content.vb: Public Function Equals(x As EntityHandle, y As EntityHandle) As Boolean
    parameters:
    - id: x
      type: System.Reflection.Metadata.EntityHandle
    - id: y
      type: System.Reflection.Metadata.EntityHandle
    return:
      type: System.Boolean
- uid: System.Reflection.Metadata.HandleComparer.GetHashCode(System.Reflection.Metadata.Handle)
  id: GetHashCode(System.Reflection.Metadata.Handle)
  parent: System.Reflection.Metadata.HandleComparer
  href: System.Reflection.Metadata.HandleComparer.yml
  name: GetHashCode(Handle)
  fullName: System.Reflection.Metadata.HandleComparer.GetHashCode(System.Reflection.Metadata.Handle)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/HandleComparer.cs
    startLine: 30
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public int GetHashCode(Handle obj)
    content.vb: Public Function GetHashCode(obj As Handle) As Integer
    parameters:
    - id: obj
      type: System.Reflection.Metadata.Handle
    return:
      type: System.Int32
- uid: System.Reflection.Metadata.HandleComparer.GetHashCode(System.Reflection.Metadata.EntityHandle)
  id: GetHashCode(System.Reflection.Metadata.EntityHandle)
  parent: System.Reflection.Metadata.HandleComparer
  href: System.Reflection.Metadata.HandleComparer.yml
  name: GetHashCode(EntityHandle)
  fullName: System.Reflection.Metadata.HandleComparer.GetHashCode(System.Reflection.Metadata.EntityHandle)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/HandleComparer.cs
    startLine: 35
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  syntax:
    content: public int GetHashCode(EntityHandle obj)
    content.vb: Public Function GetHashCode(obj As EntityHandle) As Integer
    parameters:
    - id: obj
      type: System.Reflection.Metadata.EntityHandle
    return:
      type: System.Int32
- uid: System.Reflection.Metadata.HandleComparer.Compare(System.Reflection.Metadata.Handle,System.Reflection.Metadata.Handle)
  id: Compare(System.Reflection.Metadata.Handle,System.Reflection.Metadata.Handle)
  parent: System.Reflection.Metadata.HandleComparer
  href: System.Reflection.Metadata.HandleComparer.yml
  name: Compare(Handle, Handle)
  fullName: System.Reflection.Metadata.HandleComparer.Compare(System.Reflection.Metadata.Handle, System.Reflection.Metadata.Handle)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/HandleComparer.cs
    startLine: 47
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  summary: Compares two handles.
  remarks: >-
    The order of handles that differ in kind is undefined.

    Returns 0 if and only if [System.Reflection.Metadata.HandleComparer.Equals(System.Reflection.Metadata.Handle,System.Reflection.Metadata.Handle)](System.Reflection.Metadata.HandleComparer.yml) returns true.
  syntax:
    content: public int Compare(Handle x, Handle y)
    content.vb: Public Function Compare(x As Handle, y As Handle) As Integer
    parameters:
    - id: x
      type: System.Reflection.Metadata.Handle
    - id: y
      type: System.Reflection.Metadata.Handle
    return:
      type: System.Int32
- uid: System.Reflection.Metadata.HandleComparer.Compare(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)
  id: Compare(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)
  parent: System.Reflection.Metadata.HandleComparer
  href: System.Reflection.Metadata.HandleComparer.yml
  name: Compare(EntityHandle, EntityHandle)
  fullName: System.Reflection.Metadata.HandleComparer.Compare(System.Reflection.Metadata.EntityHandle, System.Reflection.Metadata.EntityHandle)
  type: Method
  source:
    remote: *o0
    path: src/System.Reflection.Metadata/src/System/Reflection/Metadata/HandleComparer.cs
    startLine: 59
  assemblies:
  - System.Reflection.Metadata
  namespace: System.Reflection.Metadata
  summary: Compares two entity handles.
  remarks: >-
    The order of handles that differ in kind is undefined.

    Returns 0 if and only if [System.Reflection.Metadata.HandleComparer.Equals(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)](System.Reflection.Metadata.HandleComparer.yml) returns true.
  syntax:
    content: public int Compare(EntityHandle x, EntityHandle y)
    content.vb: Public Function Compare(x As EntityHandle, y As EntityHandle) As Integer
    parameters:
    - id: x
      type: System.Reflection.Metadata.EntityHandle
    - id: y
      type: System.Reflection.Metadata.EntityHandle
    return:
      type: System.Int32
references:
- uid: System.Reflection.Metadata
  isExternal: false
  name: System.Reflection.Metadata
  fullName: System.Reflection.Metadata
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Reflection.Metadata.HandleComparer
  parent: System.Reflection.Metadata
  isExternal: false
  href: System.Reflection.Metadata.HandleComparer.yml
  name: HandleComparer
  fullName: System.Reflection.Metadata.HandleComparer
  type: Class
- uid: System.Reflection.Metadata.Handle
  parent: System.Reflection.Metadata
  isExternal: false
  href: System.Reflection.Metadata.Handle.yml
  name: Handle
  fullName: System.Reflection.Metadata.Handle
  type: Struct
  summary: Represents any metadata entity (type reference/definition/specification, method definition, custom attribute, etc.) or value (string, blob, guid, user string).
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  fullName: System.Boolean
- uid: System.Reflection.Metadata.EntityHandle
  parent: System.Reflection.Metadata
  isExternal: false
  href: System.Reflection.Metadata.EntityHandle.yml
  name: EntityHandle
  fullName: System.Reflection.Metadata.EntityHandle
  type: Struct
  summary: Represents a metadata entity (type reference/definition/specification, method definition, custom attribute, etc.).
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  fullName: System.Int32
- uid: System.Reflection.Metadata.HandleComparer.Equals(System.Reflection.Metadata.Handle,System.Reflection.Metadata.Handle)
- uid: System.Reflection.Metadata.HandleComparer.Equals(System.Reflection.Metadata.EntityHandle,System.Reflection.Metadata.EntityHandle)
