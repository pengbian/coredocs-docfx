items:
- uid: System.Collections.ObjectModel.ReadOnlyObservableCollection`1
  id: ReadOnlyObservableCollection`1
  parent: System.Collections.ObjectModel
  children:
  - System.Collections.ObjectModel.ReadOnlyObservableCollection`1.#ctor(System.Collections.ObjectModel.ObservableCollection{`0})
  - System.Collections.ObjectModel.ReadOnlyObservableCollection`1.CollectionChanged
  - System.Collections.ObjectModel.ReadOnlyObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  - System.Collections.ObjectModel.ReadOnlyObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  - System.Collections.ObjectModel.ReadOnlyObservableCollection`1.PropertyChanged
  - System.Collections.ObjectModel.ReadOnlyObservableCollection`1.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged
  - System.Collections.ObjectModel.ReadOnlyObservableCollection`1.System#ComponentModel#INotifyPropertyChanged#PropertyChanged
  href: System.Collections.ObjectModel.ReadOnlyObservableCollection`1.yml
  name: ReadOnlyObservableCollection<T>
  name.vb: ReadOnlyObservableCollection(Of T)
  fullName: System.Collections.ObjectModel.ReadOnlyObservableCollection<T>
  fullName.vb: System.Collections.ObjectModel.ReadOnlyObservableCollection(Of T)
  type: Class
  source:
    remote: &o0
      path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyObservableCollection.cs
      branch: master
      repo: https://github.com/chenkennt/corefx.git
      key: 66d90a88
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyObservableCollection.cs
    startLine: 16
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: Read-only wrapper around an ObservableCollection.
  syntax:
    content: 'public class ReadOnlyObservableCollection<T> : ReadOnlyCollection<T>, IList<T>, ICollection<T>, IList, ICollection, IReadOnlyList<T>, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable, INotifyCollectionChanged, INotifyPropertyChanged'
    content.vb: Public Class ReadOnlyObservableCollection(Of T) Inherits ReadOnlyCollection(Of T) Implements IList(Of T), ICollection(Of T), IList, ICollection, IReadOnlyList(Of T), IReadOnlyCollection(Of T), IEnumerable(Of T), IEnumerable, INotifyCollectionChanged, INotifyPropertyChanged
    typeParameters:
    - id: T
  inheritance:
  - System.Object
  - System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  implements:
  - System.Collections.Generic.IList{{T}}
  - System.Collections.Generic.ICollection{{T}}
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.Generic.IReadOnlyList{{T}}
  - System.Collections.Generic.IReadOnlyCollection{{T}}
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Collections.IEnumerable
  - System.Collections.Specialized.INotifyCollectionChanged
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - System.Collections.ObjectModel.ReadOnlyCollection{{T}}.Contains({T})
  - System.Collections.ObjectModel.ReadOnlyCollection{{T}}.CopyTo({T}[],System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection{{T}}.GetEnumerator
  - System.Collections.ObjectModel.ReadOnlyCollection{{T}}.IndexOf({T})
  - System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#Generic#IList{T}#get_Item(System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#Generic#IList{T}#set_Item(System.Int32,{T})
  - System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#Generic#ICollection{T}#Add({T})
  - System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#Generic#ICollection{T}#Clear
  - System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#Generic#IList{T}#Insert(System.Int32,{T})
  - System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#Generic#ICollection{T}#Remove({T})
  - System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#IList#get_Item(System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#IList#set_Item(System.Int32,System.Object)
  - System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#IList#Add(System.Object)
  - System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#IList#Clear
  - System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#IList#Contains(System.Object)
  - System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#IList#Remove(System.Object)
  - System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#IList#RemoveAt(System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection{{T}}.Count
  - System.Collections.ObjectModel.ReadOnlyCollection{{T}}.Item(System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection{{T}}.Items
  - System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#Generic#IList{T}#Item(System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#ICollection#IsSynchronized
  - System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#ICollection#SyncRoot
  - System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#IList#IsFixedSize
  - System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#IList#IsReadOnly
  - System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#IList#Item(System.Int32)
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Collections.ObjectModel.ReadOnlyObservableCollection`1.#ctor(System.Collections.ObjectModel.ObservableCollection{`0})
  id: '#ctor(System.Collections.ObjectModel.ObservableCollection{`0})'
  parent: System.Collections.ObjectModel.ReadOnlyObservableCollection`1
  href: System.Collections.ObjectModel.ReadOnlyObservableCollection`1.yml
  name: ReadOnlyObservableCollection(ObservableCollection<T>)
  name.vb: ReadOnlyObservableCollection(ObservableCollection(Of T))
  fullName: System.Collections.ObjectModel.ReadOnlyObservableCollection<T>.ReadOnlyObservableCollection(System.Collections.ObjectModel.ObservableCollection<T>)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyObservableCollection(Of T).ReadOnlyObservableCollection(System.Collections.ObjectModel.ObservableCollection(Of T))
  type: Constructor
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyObservableCollection.cs
    startLine: 32
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: >-
    Initializes a new instance of ReadOnlyObservableCollection that

    wraps the given ObservableCollection.
  syntax:
    content: public ReadOnlyObservableCollection(ObservableCollection<T> list)
    content.vb: Public Sub New(list As ObservableCollection(Of T))
    parameters:
    - id: list
      type: System.Collections.ObjectModel.ObservableCollection{{T}}
- uid: System.Collections.ObjectModel.ReadOnlyObservableCollection`1.System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged
  id: System#Collections#Specialized#INotifyCollectionChanged#CollectionChanged
  parent: System.Collections.ObjectModel.ReadOnlyObservableCollection`1
  href: System.Collections.ObjectModel.ReadOnlyObservableCollection`1.yml
  name: INotifyCollectionChanged.CollectionChanged
  name.vb: System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged
  fullName: System.Collections.ObjectModel.ReadOnlyObservableCollection<T>.System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged
  fullName.vb: System.Collections.ObjectModel.ReadOnlyObservableCollection(Of T).System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged
  type: Event
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyObservableCollection.cs
    startLine: 53
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: CollectionChanged event (per [System.Collections.Specialized.INotifyCollectionChanged](System.Collections.Specialized.INotifyCollectionChanged.yml)).
  syntax:
    content: event NotifyCollectionChangedEventHandler INotifyCollectionChanged.CollectionChanged
    content.vb: Event System.Collections.Specialized.INotifyCollectionChanged.CollectionChanged As NotifyCollectionChangedEventHandler Implements INotifyCollectionChanged.CollectionChanged
- uid: System.Collections.ObjectModel.ReadOnlyObservableCollection`1.CollectionChanged
  id: CollectionChanged
  parent: System.Collections.ObjectModel.ReadOnlyObservableCollection`1
  href: System.Collections.ObjectModel.ReadOnlyObservableCollection`1.yml
  name: CollectionChanged
  fullName: System.Collections.ObjectModel.ReadOnlyObservableCollection<T>.CollectionChanged
  fullName.vb: System.Collections.ObjectModel.ReadOnlyObservableCollection(Of T).CollectionChanged
  type: Event
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyObservableCollection.cs
    startLine: 65
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: Occurs when the collection changes, either by adding or removing an item.
  remarks: see [System.Collections.Specialized.INotifyCollectionChanged](System.Collections.Specialized.INotifyCollectionChanged.yml)
  syntax:
    content: protected virtual event NotifyCollectionChangedEventHandler CollectionChanged
    content.vb: Protected Overridable Event CollectionChanged As NotifyCollectionChangedEventHandler
- uid: System.Collections.ObjectModel.ReadOnlyObservableCollection`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  id: OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  parent: System.Collections.ObjectModel.ReadOnlyObservableCollection`1
  href: System.Collections.ObjectModel.ReadOnlyObservableCollection`1.yml
  name: OnCollectionChanged(NotifyCollectionChangedEventArgs)
  fullName: System.Collections.ObjectModel.ReadOnlyObservableCollection<T>.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyObservableCollection(Of T).OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)
  type: Method
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyObservableCollection.cs
    startLine: 70
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: raise CollectionChanged event to any listeners
  syntax:
    content: protected virtual void OnCollectionChanged(NotifyCollectionChangedEventArgs args)
    content.vb: Protected Overridable Sub OnCollectionChanged(args As NotifyCollectionChangedEventArgs)
    parameters:
    - id: args
      type: System.Collections.Specialized.NotifyCollectionChangedEventArgs
- uid: System.Collections.ObjectModel.ReadOnlyObservableCollection`1.System#ComponentModel#INotifyPropertyChanged#PropertyChanged
  id: System#ComponentModel#INotifyPropertyChanged#PropertyChanged
  parent: System.Collections.ObjectModel.ReadOnlyObservableCollection`1
  href: System.Collections.ObjectModel.ReadOnlyObservableCollection`1.yml
  name: INotifyPropertyChanged.PropertyChanged
  name.vb: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  fullName: System.Collections.ObjectModel.ReadOnlyObservableCollection<T>.System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  fullName.vb: System.Collections.ObjectModel.ReadOnlyObservableCollection(Of T).System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  type: Event
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyObservableCollection.cs
    startLine: 85
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: PropertyChanged event (per [System.ComponentModel.INotifyPropertyChanged](System.ComponentModel.INotifyPropertyChanged.yml)).
  syntax:
    content: event PropertyChangedEventHandler INotifyPropertyChanged.PropertyChanged
    content.vb: Event System.ComponentModel.INotifyPropertyChanged.PropertyChanged As PropertyChangedEventHandler Implements INotifyPropertyChanged.PropertyChanged
- uid: System.Collections.ObjectModel.ReadOnlyObservableCollection`1.PropertyChanged
  id: PropertyChanged
  parent: System.Collections.ObjectModel.ReadOnlyObservableCollection`1
  href: System.Collections.ObjectModel.ReadOnlyObservableCollection`1.yml
  name: PropertyChanged
  fullName: System.Collections.ObjectModel.ReadOnlyObservableCollection<T>.PropertyChanged
  fullName.vb: System.Collections.ObjectModel.ReadOnlyObservableCollection(Of T).PropertyChanged
  type: Event
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyObservableCollection.cs
    startLine: 97
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: Occurs when a property changes.
  remarks: see [System.ComponentModel.INotifyPropertyChanged](System.ComponentModel.INotifyPropertyChanged.yml)
  syntax:
    content: protected virtual event PropertyChangedEventHandler PropertyChanged
    content.vb: Protected Overridable Event PropertyChanged As PropertyChangedEventHandler
- uid: System.Collections.ObjectModel.ReadOnlyObservableCollection`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  id: OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  parent: System.Collections.ObjectModel.ReadOnlyObservableCollection`1
  href: System.Collections.ObjectModel.ReadOnlyObservableCollection`1.yml
  name: OnPropertyChanged(PropertyChangedEventArgs)
  fullName: System.Collections.ObjectModel.ReadOnlyObservableCollection<T>.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyObservableCollection(Of T).OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)
  type: Method
  source:
    remote: *o0
    path: src/System.ObjectModel/src/System/Collections/ObjectModel/ReadOnlyObservableCollection.cs
    startLine: 102
  assemblies:
  - System.ObjectModel
  namespace: System.Collections.ObjectModel
  summary: raise PropertyChanged event to any listeners
  syntax:
    content: protected virtual void OnPropertyChanged(PropertyChangedEventArgs args)
    content.vb: Protected Overridable Sub OnPropertyChanged(args As PropertyChangedEventArgs)
    parameters:
    - id: args
      type: System.ComponentModel.PropertyChangedEventArgs
references:
- uid: System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  fullName: System.Object
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  name: ReadOnlyCollection<T>
  name.vb: ReadOnlyCollection(Of T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}.Contains({T})
  parent: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.Contains({T})
  name: Contains(T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.Contains(T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)
    name: Contains
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.Contains
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)
    name: Contains
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).Contains
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}.CopyTo({T}[],System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo({T}[],System.Int32)
  name: CopyTo(T[], Int32)
  name.vb: CopyTo(T(), Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.CopyTo(T[], System.Int32)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).CopyTo(T(), System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.CopyTo
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).CopyTo
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}.GetEnumerator
  parent: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator
  name: GetEnumerator()
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}.IndexOf({T})
  parent: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf({T})
  name: IndexOf(T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.IndexOf(T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)
    name: IndexOf
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.IndexOf
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)
    name: IndexOf
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).IndexOf
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#Generic#IList{T}#get_Item(System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#get_Item(System.Int32)
  name: IList<T>.get_Item(Int32)
  name.vb: System.Collections.Generic.IList<T>.get_Item(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.get_Item(System.Int32)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.get_Item(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#get_Item(System.Int32)
    name: IList<T>.get_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.get_Item
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#get_Item(System.Int32)
    name: System.Collections.Generic.IList<T>.get_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.get_Item
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#Generic#IList{T}#set_Item(System.Int32,{T})
  parent: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#set_Item(System.Int32,{T})
  name: IList<T>.set_Item(Int32, T)
  name.vb: System.Collections.Generic.IList<T>.set_Item(Int32, T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.set_Item(System.Int32, T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.set_Item(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#set_Item(System.Int32,`0)
    name: IList<T>.set_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.set_Item
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#set_Item(System.Int32,`0)
    name: System.Collections.Generic.IList<T>.set_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.set_Item
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#Generic#ICollection{T}#Add({T})
  parent: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add({T})
  name: ICollection<T>.Add(T)
  name.vb: System.Collections.Generic.ICollection<T>.Add(T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Add(T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Add(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)
    name: ICollection<T>.Add
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)
    name: System.Collections.Generic.ICollection<T>.Add
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#Generic#ICollection{T}#Clear
  parent: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear
  name: ICollection<T>.Clear()
  name.vb: System.Collections.Generic.ICollection<T>.Clear()
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Clear()
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Clear()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear
    name: ICollection<T>.Clear
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear
    name: System.Collections.Generic.ICollection<T>.Clear
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#Generic#IList{T}#Insert(System.Int32,{T})
  parent: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,{T})
  name: IList<T>.Insert(Int32, T)
  name.vb: System.Collections.Generic.IList<T>.Insert(Int32, T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.Insert(System.Int32, T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)
    name: IList<T>.Insert
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.Insert
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)
    name: System.Collections.Generic.IList<T>.Insert
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.Insert
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#Generic#ICollection{T}#Remove({T})
  parent: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove({T})
  name: ICollection<T>.Remove(T)
  name.vb: System.Collections.Generic.ICollection<T>.Remove(T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Remove(T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Remove(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)
    name: ICollection<T>.Remove
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)
    name: System.Collections.Generic.ICollection<T>.Remove
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
  name: IList<T>.RemoveAt(Int32)
  name.vb: System.Collections.Generic.IList<T>.RemoveAt(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.RemoveAt(System.Int32)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
    name: IList<T>.RemoveAt
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.RemoveAt
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
    name: System.Collections.Generic.IList<T>.RemoveAt
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.RemoveAt
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator
  name: IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  name: ICollection.CopyTo(Array, Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Array
    name: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Array
    name: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#IList#get_Item(System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#get_Item(System.Int32)
  name: IList.get_Item(Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.get_Item(System.Int32)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.get_Item(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#IList#set_Item(System.Int32,System.Object)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  name: IList.set_Item(Int32, Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.set_Item(System.Int32, System.Object)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.set_Item(System.Int32, System.Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#IList#Add(System.Object)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)
  name: IList.Add(Object)
  name.vb: System.Collections.IList.Add(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Add(System.Object)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Add(System.Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Add
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Add
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#IList#Clear
  parent: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear
  name: IList.Clear()
  name.vb: System.Collections.IList.Clear()
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Clear()
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Clear()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear
    name: IList.Clear
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Clear
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear
    name: System.Collections.IList.Clear
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Clear
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#IList#Contains(System.Object)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)
  name: IList.Contains(Object)
  name.vb: System.Collections.IList.Contains(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Contains(System.Object)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Contains(System.Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Contains
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#IList#IndexOf(System.Object)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)
  name: IList.IndexOf(Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.IndexOf(System.Object)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.IndexOf(System.Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  name: IList.Insert(Int32, Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Insert(System.Int32, System.Object)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Insert(System.Int32, System.Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Insert
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#IList#Remove(System.Object)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)
  name: IList.Remove(Object)
  name.vb: System.Collections.IList.Remove(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Remove(System.Object)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Remove(System.Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Remove
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#IList#RemoveAt(System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)
  name: IList.RemoveAt(Int32)
  name.vb: System.Collections.IList.RemoveAt(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.RemoveAt(System.Int32)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)
    name: IList.RemoveAt
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.RemoveAt
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)
    name: System.Collections.IList.RemoveAt
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.RemoveAt
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}.Count
  parent: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.Count
  name: Count
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.Count
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).Count
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}.Item(System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)
  name: Item[Int32]
  name.vb: Item(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.Item[System.Int32]
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).Item(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)
    name: Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.Item
    isExternal: true
  - name: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)
    name: Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).Item
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}.Items
  parent: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.Items
  name: Items
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.Items
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).Items
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#Generic#ICollection{T}#IsReadOnly
  parent: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  name: ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#Generic#IList{T}#Item(System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)
  name: IList<T>.Item[Int32]
  name.vb: System.Collections.Generic.IList<T>.Item(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.Item[System.Int32]
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.Item(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)
    name: IList<T>.Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.Item
    isExternal: true
  - name: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)
    name: System.Collections.Generic.IList<T>.Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.Item
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized
  name: ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#ICollection#SyncRoot
  parent: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot
  name: ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.ICollection.SyncRoot
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#IList#IsFixedSize
  parent: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize
  name: IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.IsFixedSize
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.IsFixedSize
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#IList#IsReadOnly
  parent: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly
  name: IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.IsReadOnly
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}.System#Collections#IList#Item(System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)
  name: IList.Item[Int32]
  name.vb: System.Collections.IList.Item(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Item[System.Int32]
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Item(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Item
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<T>
  name.vb: ReadOnlyCollection(Of T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    isExternal: true
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Contains({T})
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: Contains(T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.Contains(T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)
    name: Contains
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.Contains
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)
    name: Contains
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).Contains
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo({T}[],System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: CopyTo(T[], Int32)
  name.vb: CopyTo(T(), Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.CopyTo(T[], System.Int32)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).CopyTo(T(), System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.CopyTo
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).CopyTo
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: GetEnumerator()
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf({T})
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: IndexOf(T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.IndexOf(T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).IndexOf(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)
    name: IndexOf
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.IndexOf
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)
    name: IndexOf
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).IndexOf
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#get_Item(System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: IList<T>.get_Item(Int32)
  name.vb: System.Collections.Generic.IList<T>.get_Item(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.get_Item(System.Int32)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.get_Item(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#get_Item(System.Int32)
    name: IList<T>.get_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.get_Item
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#get_Item(System.Int32)
    name: System.Collections.Generic.IList<T>.get_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.get_Item
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#set_Item(System.Int32,{T})
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: IList<T>.set_Item(Int32, T)
  name.vb: System.Collections.Generic.IList<T>.set_Item(Int32, T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.set_Item(System.Int32, T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.set_Item(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#set_Item(System.Int32,`0)
    name: IList<T>.set_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.set_Item
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#set_Item(System.Int32,`0)
    name: System.Collections.Generic.IList<T>.set_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.set_Item
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add({T})
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ICollection<T>.Add(T)
  name.vb: System.Collections.Generic.ICollection<T>.Add(T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Add(T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Add(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)
    name: ICollection<T>.Add
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)
    name: System.Collections.Generic.ICollection<T>.Add
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Add
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ICollection<T>.Clear()
  name.vb: System.Collections.Generic.ICollection<T>.Clear()
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Clear()
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Clear()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear
    name: ICollection<T>.Clear
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear
    name: System.Collections.Generic.ICollection<T>.Clear
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Clear
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,{T})
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: IList<T>.Insert(Int32, T)
  name.vb: System.Collections.Generic.IList<T>.Insert(Int32, T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.Insert(System.Int32, T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.Insert(System.Int32, T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)
    name: IList<T>.Insert
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.Insert
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)
    name: System.Collections.Generic.IList<T>.Insert
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.Insert
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove({T})
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ICollection<T>.Remove(T)
  name.vb: System.Collections.Generic.ICollection<T>.Remove(T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Remove(T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Remove(T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)
    name: ICollection<T>.Remove
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)
    name: System.Collections.Generic.ICollection<T>.Remove
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Remove
    isExternal: true
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: IList<T>.RemoveAt(Int32)
  name.vb: System.Collections.Generic.IList<T>.RemoveAt(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.RemoveAt(System.Int32)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
    name: IList<T>.RemoveAt
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.RemoveAt
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
    name: System.Collections.Generic.IList<T>.RemoveAt
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.RemoveAt
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IEnumerable.GetEnumerator()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator
    name: System.Collections.IEnumerable.GetEnumerator
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IEnumerable.GetEnumerator
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ICollection.CopyTo(Array, Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: ICollection.CopyTo
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Array
    name: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
    name: System.Collections.ICollection.CopyTo
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.ICollection.CopyTo
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Array
    name: Array
    fullName: System.Array
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#get_Item(System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: IList.get_Item(Int32)
  name.vb: System.Collections.IList.get_Item(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.get_Item(System.Int32)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.get_Item(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#get_Item(System.Int32)
    name: IList.get_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.get_Item
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#get_Item(System.Int32)
    name: System.Collections.IList.get_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.get_Item
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: IList.set_Item(Int32, Object)
  name.vb: System.Collections.IList.set_Item(Int32, Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.set_Item(System.Int32, System.Object)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.set_Item(System.Int32, System.Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: IList.set_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.set_Item
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#set_Item(System.Int32,System.Object)
    name: System.Collections.IList.set_Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.set_Item
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: IList.Add(Object)
  name.vb: System.Collections.IList.Add(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Add(System.Object)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Add(System.Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)
    name: IList.Add
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Add
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)
    name: System.Collections.IList.Add
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Add
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: IList.Clear()
  name.vb: System.Collections.IList.Clear()
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Clear()
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Clear()
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear
    name: IList.Clear
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Clear
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear
    name: System.Collections.IList.Clear
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Clear
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: IList.Contains(Object)
  name.vb: System.Collections.IList.Contains(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Contains(System.Object)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Contains(System.Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)
    name: IList.Contains
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Contains
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)
    name: System.Collections.IList.Contains
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Contains
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: IList.IndexOf(Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.IndexOf(System.Object)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.IndexOf(System.Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)
    name: IList.IndexOf
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)
    name: System.Collections.IList.IndexOf
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.IndexOf
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: IList.Insert(Int32, Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Insert(System.Int32, System.Object)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Insert(System.Int32, System.Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: IList.Insert
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Insert
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)
    name: System.Collections.IList.Insert
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Insert
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: IList.Remove(Object)
  name.vb: System.Collections.IList.Remove(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Remove(System.Object)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Remove(System.Object)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)
    name: IList.Remove
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Remove
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)
    name: System.Collections.IList.Remove
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Remove
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: IList.RemoveAt(Int32)
  name.vb: System.Collections.IList.RemoveAt(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.RemoveAt(System.Int32)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.RemoveAt(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)
    name: IList.RemoveAt
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.RemoveAt
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)
    name: System.Collections.IList.RemoveAt
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.RemoveAt
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Count
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: Count
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.Count
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).Count
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: Item[Int32]
  name.vb: Item(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.Item[System.Int32]
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).Item(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)
    name: Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.Item
    isExternal: true
  - name: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)
    name: Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).Item
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Items
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: Items
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.Items
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).Items
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: IList<T>.Item[Int32]
  name.vb: System.Collections.Generic.IList<T>.Item(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.Item[System.Int32]
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.Item(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)
    name: IList<T>.Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.Item
    isExternal: true
  - name: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)
    name: System.Collections.Generic.IList<T>.Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.Item
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.ICollection.IsSynchronized
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.ICollection.SyncRoot
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.IsFixedSize
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.IsFixedSize
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.IsReadOnly
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  isExternal: true
  name: IList.Item[Int32]
  name.vb: System.Collections.IList.Item(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Item[System.Int32]
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Item(System.Int32)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)
    name: IList.Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Item
    isExternal: true
  - name: '['
    fullName: '['
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: ']'
    fullName: ']'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)
    name: System.Collections.IList.Item
    fullName: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Item
    isExternal: true
  - name: (
    fullName: (
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection{{T}}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ObservableCollection`1
  href: System.Collections.ObjectModel.ObservableCollection`1.yml
  name: ObservableCollection<T>
  name.vb: ObservableCollection(Of T)
  fullName: System.Collections.ObjectModel.ObservableCollection<T>
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    href: System.Collections.ObjectModel.ObservableCollection`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    href: System.Collections.ObjectModel.ObservableCollection`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ObservableCollection`1
  isExternal: false
  href: System.Collections.ObjectModel.ObservableCollection`1.yml
  name: ObservableCollection<T>
  name.vb: ObservableCollection(Of T)
  fullName: System.Collections.ObjectModel.ObservableCollection<T>
  fullName.vb: System.Collections.ObjectModel.ObservableCollection(Of T)
  type: Class
  summary: >-
    Implementation of a dynamic data collection based on generic Collection&lt;T&gt;,

    implementing INotifyCollectionChanged to notify listeners

    when items get added, removed or the whole list is refreshed.
  spec.csharp:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    href: System.Collections.ObjectModel.ObservableCollection`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ObservableCollection`1
    name: ObservableCollection
    fullName: System.Collections.ObjectModel.ObservableCollection
    href: System.Collections.ObjectModel.ObservableCollection`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Specialized.INotifyCollectionChanged
  isExternal: false
  href: System.Collections.Specialized.INotifyCollectionChanged.yml
  name: INotifyCollectionChanged
  fullName: System.Collections.Specialized.INotifyCollectionChanged
  type: Interface
  summary: >-
    A collection implementing this interface will notify listeners of dynamic changes,

    e.g. when items get added and removed or the whole list is refreshed.
- uid: System.Collections.Specialized.NotifyCollectionChangedEventArgs
  isExternal: false
  href: System.Collections.Specialized.NotifyCollectionChangedEventArgs.yml
  name: NotifyCollectionChangedEventArgs
  fullName: System.Collections.Specialized.NotifyCollectionChangedEventArgs
  type: Class
  summary: >-
    Arguments for the CollectionChanged event.

    A collection that supports INotifyCollectionChangedThis raises this event

    whenever an item is added or removed, or when the contents of the collection

    changes dramatically.
- uid: System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: false
  href: System.ComponentModel.INotifyPropertyChanged.yml
  name: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
  type: Interface
- uid: System.ComponentModel
  isExternal: false
  name: System.ComponentModel
  fullName: System.ComponentModel
  type: Namespace
- uid: System.ComponentModel.PropertyChangedEventArgs
  parent: System.ComponentModel
  isExternal: false
  href: System.ComponentModel.PropertyChangedEventArgs.yml
  name: PropertyChangedEventArgs
  fullName: System.ComponentModel.PropertyChangedEventArgs
  type: Class
