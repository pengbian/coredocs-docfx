items:
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  id: ReadOnlyCollection`1
  parent: System.Collections.ObjectModel
  children:
  - System.Collections.ObjectModel.ReadOnlyCollection`1.#ctor(System.Collections.Generic.IList{`0})
  - System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.Count
  - System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator
  - System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.Items
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)
  - System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)
  href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  name: ReadOnlyCollection<T>
  name.vb: ReadOnlyCollection(Of T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyCollection.cs
      branch: master
      repo: https://github.com/chenkennt/coreclr.git
      key: 6c42ef8d
    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyCollection.cs
    startLine: 13
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: 'public class ReadOnlyCollection<T> : IList<T>, ICollection<T>, IList, ICollection, IReadOnlyList<T>, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable'
    content.vb: Public Class ReadOnlyCollection(Of T) Implements IList(Of T), ICollection(Of T), IList, ICollection, IReadOnlyList(Of T), IReadOnlyCollection(Of T), IEnumerable(Of T), IEnumerable
    typeParameters:
    - id: T
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IList{{T}}
  - System.Collections.Generic.ICollection{{T}}
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.Generic.IReadOnlyList{{T}}
  - System.Collections.Generic.IReadOnlyCollection{{T}}
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.#ctor(System.Collections.Generic.IList{`0})
  id: '#ctor(System.Collections.Generic.IList{`0})'
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  name: ReadOnlyCollection(IList<T>)
  name.vb: ReadOnlyCollection(IList(Of T))
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.ReadOnlyCollection(System.Collections.Generic.IList<T>)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).ReadOnlyCollection(System.Collections.Generic.IList(Of T))
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyCollection.cs
    startLine: 23
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: public ReadOnlyCollection(IList<T> list)
    content.vb: Public Sub New(list As IList(Of T))
    parameters:
    - id: list
      type: System.Collections.Generic.IList{{T}}
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Count
  id: Count
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  name: Count
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.Count
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).Count
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyCollection.cs
    startLine: 30
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  name: Item[Int32]
  name.vb: Item(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.Item[System.Int32]
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).Item(System.Int32)
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyCollection.cs
    startLine: 34
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: public T this[int index] { get; }
    content.vb: Public ReadOnly Property Item(index As Integer) As T
    parameters:
    - id: index
      type: System.Int32
    return:
      type: '{T}'
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Contains(`0)
  id: Contains(`0)
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  name: Contains(T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.Contains(T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).Contains(T)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyCollection.cs
    startLine: 38
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: public bool Contains(T value)
    content.vb: Public Function Contains(value As T) As Boolean
    parameters:
    - id: value
      type: '{T}'
    return:
      type: System.Boolean
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  name: CopyTo(T[], Int32)
  name.vb: CopyTo(T(), Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.CopyTo(T[], System.Int32)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).CopyTo(T(), System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyCollection.cs
    startLine: 42
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: public void CopyTo(T[] array, int index)
    content.vb: Public Sub CopyTo(array As T(), index As Integer)
    parameters:
    - id: array
      type: '{T}[]'
    - id: index
      type: System.Int32
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  name: GetEnumerator()
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyCollection.cs
    startLine: 46
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: public IEnumerator<T> GetEnumerator()
    content.vb: Public Function GetEnumerator As IEnumerator(Of T)
    return:
      type: System.Collections.Generic.IEnumerator{{T}}
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.IndexOf(`0)
  id: IndexOf(`0)
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  name: IndexOf(T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.IndexOf(T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).IndexOf(T)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyCollection.cs
    startLine: 50
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: public int IndexOf(T value)
    content.vb: Public Function IndexOf(value As T) As Integer
    parameters:
    - id: value
      type: '{T}'
    return:
      type: System.Int32
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.Items
  id: Items
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  name: Items
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.Items
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).Items
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyCollection.cs
    startLine: 54
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: protected IList<T> Items { get; }
    content.vb: Protected ReadOnly Property Items As IList(Of T)
    parameters: []
    return:
      type: System.Collections.Generic.IList{{T}}
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  id: System#Collections#Generic#ICollection{T}#IsReadOnly
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  name: ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyCollection.cs
    startLine: 60
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: bool ICollection<T>.IsReadOnly { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.ICollection<T>.IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly
    parameters: []
    return:
      type: System.Boolean
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Item(System.Int32)
  id: System#Collections#Generic#IList{T}#Item(System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  name: IList<T>.Item[Int32]
  name.vb: System.Collections.Generic.IList<T>.Item(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.Item[System.Int32]
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.Item(System.Int32)
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyCollection.cs
    startLine: 64
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: T IList<T>.this[int index] { get; set; }
    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.IList<T>.Item(index As Integer) As T Implements IList(Of T).this
    parameters:
    - id: index
      type: System.Int32
    return:
      type: '{T}'
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Add(`0)
  id: System#Collections#Generic#ICollection{T}#Add(`0)
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  name: ICollection<T>.Add(T)
  name.vb: System.Collections.Generic.ICollection<T>.Add(T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Add(T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Add(T)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyCollection.cs
    startLine: 71
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: void ICollection<T>.Add(T value)
    content.vb: Sub System.Collections.Generic.ICollection<T>.Add(value As T) Implements ICollection(Of T).Add
    parameters:
    - id: value
      type: '{T}'
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Clear
  id: System#Collections#Generic#ICollection{T}#Clear
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  name: ICollection<T>.Clear()
  name.vb: System.Collections.Generic.ICollection<T>.Clear()
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Clear()
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Clear()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyCollection.cs
    startLine: 75
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: void ICollection<T>.Clear()
    content.vb: Sub System.Collections.Generic.ICollection<T>.Clear Implements ICollection(Of T).Clear
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#Insert(System.Int32,`0)
  id: System#Collections#Generic#IList{T}#Insert(System.Int32,`0)
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  name: IList<T>.Insert(Int32, T)
  name.vb: System.Collections.Generic.IList<T>.Insert(Int32, T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.Insert(System.Int32, T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.Insert(System.Int32, T)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyCollection.cs
    startLine: 79
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: void IList<T>.Insert(int index, T value)
    content.vb: Sub System.Collections.Generic.IList<T>.Insert(index As Integer, value As T) Implements IList(Of T).Insert
    parameters:
    - id: index
      type: System.Int32
    - id: value
      type: '{T}'
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#ICollection{T}#Remove(`0)
  id: System#Collections#Generic#ICollection{T}#Remove(`0)
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  name: ICollection<T>.Remove(T)
  name.vb: System.Collections.Generic.ICollection<T>.Remove(T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.ICollection<T>.Remove(T)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.ICollection<T>.Remove(T)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyCollection.cs
    startLine: 83
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: bool ICollection<T>.Remove(T value)
    content.vb: Function System.Collections.Generic.ICollection<T>.Remove(value As T) As Boolean Implements ICollection(Of T).Remove
    parameters:
    - id: value
      type: '{T}'
    return:
      type: System.Boolean
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
  id: System#Collections#Generic#IList{T}#RemoveAt(System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  name: IList<T>.RemoveAt(Int32)
  name.vb: System.Collections.Generic.IList<T>.RemoveAt(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.Generic.IList<T>.RemoveAt(System.Int32)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.Generic.IList<T>.RemoveAt(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyCollection.cs
    startLine: 88
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: void IList<T>.RemoveAt(int index)
    content.vb: Sub System.Collections.Generic.IList<T>.RemoveAt(index As Integer) Implements IList(Of T).RemoveAt
    parameters:
    - id: index
      type: System.Int32
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  name: IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyCollection.cs
    startLine: 92
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  name: ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyCollection.cs
    startLine: 96
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: bool ICollection.IsSynchronized { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized
    parameters: []
    return:
      type: System.Boolean
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  name: ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyCollection.cs
    startLine: 100
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: object ICollection.SyncRoot { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot
    parameters: []
    return:
      type: System.Object
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  name: ICollection.CopyTo(Array, Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyCollection.cs
    startLine: 115
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: void ICollection.CopyTo(Array array, int index)
    content.vb: Sub System.Collections.ICollection.CopyTo(array As Array, index As Integer) Implements ICollection.CopyTo
    parameters:
    - id: array
      type: System.Array
    - id: index
      type: System.Int32
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  name: IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.IsFixedSize
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.IsFixedSize
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyCollection.cs
    startLine: 174
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: bool IList.IsFixedSize { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IList.IsFixedSize As Boolean Implements IList.IsFixedSize
    parameters: []
    return:
      type: System.Boolean
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  name: IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.IsReadOnly
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.IsReadOnly
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyCollection.cs
    startLine: 178
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: bool IList.IsReadOnly { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IList.IsReadOnly As Boolean Implements IList.IsReadOnly
    parameters: []
    return:
      type: System.Boolean
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  name: IList.Item[Int32]
  name.vb: System.Collections.IList.Item(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Item[System.Int32]
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Item(System.Int32)
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyCollection.cs
    startLine: 182
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: object IList.this[int index] { get; set; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IList.Item(index As Integer) As Object Implements IList.this
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Object
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  name: IList.Add(Object)
  name.vb: System.Collections.IList.Add(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Add(System.Object)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Add(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyCollection.cs
    startLine: 189
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: int IList.Add(object value)
    content.vb: Function System.Collections.IList.Add(value As Object) As Integer Implements IList.Add
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Clear
  id: System#Collections#IList#Clear
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  name: IList.Clear()
  name.vb: System.Collections.IList.Clear()
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Clear()
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Clear()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyCollection.cs
    startLine: 194
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: void IList.Clear()
    content.vb: Sub System.Collections.IList.Clear Implements IList.Clear
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  name: IList.Contains(Object)
  name.vb: System.Collections.IList.Contains(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Contains(System.Object)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Contains(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyCollection.cs
    startLine: 204
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: bool IList.Contains(object value)
    content.vb: Function System.Collections.IList.Contains(value As Object) As Boolean Implements IList.Contains
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Boolean
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  name: IList.IndexOf(Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.IndexOf(System.Object)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.IndexOf(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyCollection.cs
    startLine: 211
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: int IList.IndexOf(object value)
    content.vb: Function System.Collections.IList.IndexOf(value As Object) As Integer Implements IList.IndexOf
    parameters:
    - id: value
      type: System.Object
    return:
      type: System.Int32
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  name: IList.Insert(Int32, Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Insert(System.Int32, System.Object)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Insert(System.Int32, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyCollection.cs
    startLine: 218
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: void IList.Insert(int index, object value)
    content.vb: Sub System.Collections.IList.Insert(index As Integer, value As Object) Implements IList.Insert
    parameters:
    - id: index
      type: System.Int32
    - id: value
      type: System.Object
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  name: IList.Remove(Object)
  name.vb: System.Collections.IList.Remove(Object)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.Remove(System.Object)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.Remove(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyCollection.cs
    startLine: 222
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: void IList.Remove(object value)
    content.vb: Sub System.Collections.IList.Remove(value As Object) Implements IList.Remove
    parameters:
    - id: value
      type: System.Object
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1.System#Collections#IList#RemoveAt(System.Int32)
  id: System#Collections#IList#RemoveAt(System.Int32)
  parent: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  name: IList.RemoveAt(Int32)
  name.vb: System.Collections.IList.RemoveAt(Int32)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>.System.Collections.IList.RemoveAt(System.Int32)
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T).System.Collections.IList.RemoveAt(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/ObjectModel/ReadOnlyCollection.cs
    startLine: 226
  assemblies:
  - mscorlib
  namespace: System.Collections.ObjectModel
  syntax:
    content: void IList.RemoveAt(int index)
    content.vb: Sub System.Collections.IList.RemoveAt(index As Integer) Implements IList.RemoveAt
    parameters:
    - id: index
      type: System.Int32
references:
- uid: System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Collections.Generic.IList{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  href: System.Collections.Generic.IList`1.yml
  name: IList<T>
  name.vb: IList(Of T)
  fullName: System.Collections.Generic.IList<T>
  fullName.vb: System.Collections.Generic.IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    href: System.Collections.Generic.IList`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    href: System.Collections.Generic.IList`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  parent: System.Collections.Generic
  isExternal: false
  href: System.Collections.Generic.IList`1.yml
  name: IList<T>
  name.vb: IList(Of T)
  fullName: System.Collections.Generic.IList<T>
  fullName.vb: System.Collections.Generic.IList(Of T)
  type: Interface
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    href: System.Collections.Generic.IList`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    fullName: System.Collections.Generic.IList
    href: System.Collections.Generic.IList`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
  type: Namespace
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
  type: Struct
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
  type: Struct
- uid: '{T}[]'
  isExternal: false
  name: T[]
  name.vb: T()
  fullName: T[]
  fullName.vb: T()
  spec.csharp:
  - name: T
    fullName: T
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - name: T
    fullName: T
  - name: ()
    fullName: ()
- uid: System.Collections.Generic.IEnumerator{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: System.Collections.Generic.IEnumerator`1.yml
  name: IEnumerator<T>
  name.vb: IEnumerator(Of T)
  fullName: System.Collections.Generic.IEnumerator<T>
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    href: System.Collections.Generic.IEnumerator`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    href: System.Collections.Generic.IEnumerator`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  parent: System.Collections.Generic
  isExternal: false
  href: System.Collections.Generic.IEnumerator`1.yml
  name: IEnumerator<T>
  name.vb: IEnumerator(Of T)
  fullName: System.Collections.Generic.IEnumerator<T>
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  type: Interface
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    href: System.Collections.Generic.IEnumerator`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    href: System.Collections.Generic.IEnumerator`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  href: System.Collections.IEnumerator.yml
  name: IEnumerator
  fullName: System.Collections.IEnumerator
  type: Interface
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
  type: Namespace
- uid: System.Array
  parent: System
  isExternal: false
  href: System.Array.yml
  name: Array
  fullName: System.Array
  type: Class
