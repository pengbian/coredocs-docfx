items:
- uid: System.Collections.IDictionaryEnumerator
  id: IDictionaryEnumerator
  parent: System.Collections
  children:
  - System.Collections.IDictionaryEnumerator.Entry
  - System.Collections.IDictionaryEnumerator.Key
  - System.Collections.IDictionaryEnumerator.Value
  href: System.Collections.IDictionaryEnumerator.yml
  name: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
  type: Interface
  source:
    remote: &o0
      path: src/mscorlib/src/System/Collections/IDictionaryEnumerator.cs
      branch: master
      repo: https://github.com/chenkennt/coreclr.git
      key: 6c42ef8d
    path: src/mscorlib/src/System/Collections/IDictionaryEnumerator.cs
    startLine: 45
  assemblies:
  - mscorlib
  namespace: System.Collections
  syntax:
    content: 'public interface IDictionaryEnumerator : IEnumerator'
    content.vb: Public Interface IDictionaryEnumerator Inherits IEnumerator
  inheritedMembers:
  - System.Collections.IEnumerator.MoveNext
  - System.Collections.IEnumerator.Current
  - System.Collections.IEnumerator.Reset
- uid: System.Collections.IDictionaryEnumerator.Key
  id: Key
  parent: System.Collections.IDictionaryEnumerator
  href: System.Collections.IDictionaryEnumerator.yml
  name: Key
  fullName: System.Collections.IDictionaryEnumerator.Key
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/IDictionaryEnumerator.cs
    startLine: 54
  assemblies:
  - mscorlib
  namespace: System.Collections
  syntax:
    content: object Key { get; }
    content.vb: ReadOnly Property Key As Object
    parameters: []
    return:
      type: System.Object
- uid: System.Collections.IDictionaryEnumerator.Value
  id: Value
  parent: System.Collections.IDictionaryEnumerator
  href: System.Collections.IDictionaryEnumerator.yml
  name: Value
  fullName: System.Collections.IDictionaryEnumerator.Value
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/IDictionaryEnumerator.cs
    startLine: 64
  assemblies:
  - mscorlib
  namespace: System.Collections
  syntax:
    content: object Value { get; }
    content.vb: ReadOnly Property Value As Object
    parameters: []
    return:
      type: System.Object
- uid: System.Collections.IDictionaryEnumerator.Entry
  id: Entry
  parent: System.Collections.IDictionaryEnumerator
  href: System.Collections.IDictionaryEnumerator.yml
  name: Entry
  fullName: System.Collections.IDictionaryEnumerator.Entry
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/IDictionaryEnumerator.cs
    startLine: 73
  assemblies:
  - mscorlib
  namespace: System.Collections
  syntax:
    content: DictionaryEntry Entry { get; }
    content.vb: ReadOnly Property Entry As DictionaryEntry
    parameters: []
    return:
      type: System.Collections.DictionaryEntry
references:
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
  type: Namespace
- uid: System.Collections.IEnumerator.MoveNext
  parent: System.Collections.IEnumerator
  isExternal: false
  href: System.Collections.IEnumerator.yml
  name: MoveNext()
  fullName: System.Collections.IEnumerator.MoveNext()
  spec.csharp:
  - uid: System.Collections.IEnumerator.MoveNext
    name: MoveNext
    fullName: System.Collections.IEnumerator.MoveNext
    href: System.Collections.IEnumerator.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerator.MoveNext
    name: MoveNext
    fullName: System.Collections.IEnumerator.MoveNext
    href: System.Collections.IEnumerator.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.IEnumerator.Current
  parent: System.Collections.IEnumerator
  isExternal: false
  href: System.Collections.IEnumerator.yml
  name: Current
  fullName: System.Collections.IEnumerator.Current
- uid: System.Collections.IEnumerator.Reset
  parent: System.Collections.IEnumerator
  isExternal: false
  href: System.Collections.IEnumerator.yml
  name: Reset()
  fullName: System.Collections.IEnumerator.Reset()
  spec.csharp:
  - uid: System.Collections.IEnumerator.Reset
    name: Reset
    fullName: System.Collections.IEnumerator.Reset
    href: System.Collections.IEnumerator.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.IEnumerator.Reset
    name: Reset
    fullName: System.Collections.IEnumerator.Reset
    href: System.Collections.IEnumerator.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  href: System.Collections.IEnumerator.yml
  name: IEnumerator
  fullName: System.Collections.IEnumerator
  type: Interface
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Collections.DictionaryEntry
  isExternal: false
  href: System.Collections.DictionaryEntry.yml
  name: DictionaryEntry
  fullName: System.Collections.DictionaryEntry
  type: Struct
