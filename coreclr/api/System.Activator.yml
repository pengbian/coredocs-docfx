items:
- uid: System.Activator
  id: Activator
  parent: System
  children:
  - System.Activator.CreateComInstanceFrom(System.String,System.String)
  - System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)
  - System.Activator.CreateInstance(System.AppDomain,System.String,System.String)
  - System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  - System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  - System.Activator.CreateInstance(System.String,System.String)
  - System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  - System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  - System.Activator.CreateInstance(System.String,System.String,System.Object[])
  - System.Activator.CreateInstance(System.Type)
  - System.Activator.CreateInstance(System.Type,System.Boolean)
  - System.Activator.CreateInstance(System.Type,System.Object[])
  - System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])
  - System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  - System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  - System.Activator.CreateInstance``1
  - System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)
  - System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  - System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  - System.Activator.CreateInstanceFrom(System.String,System.String)
  - System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  - System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  - System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])
  href: System.Activator.yml
  name: Activator
  fullName: System.Activator
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Activator.cs
      branch: master
      repo: https://github.com/chenkennt/coreclr.git
      key: 6c42ef8d
    path: src/mscorlib/src/System/Activator.cs
    startLine: 33
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: 'public sealed class Activator : _Activator'
    content.vb: Public NotInheritable Class Activator Implements _Activator
  inheritance:
  - System.Object
  implements:
  - System.Runtime.InteropServices._Activator
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  id: CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)
  parent: System.Activator
  href: System.Activator.yml
  name: CreateInstance(Type, BindingFlags, Binder, Object[], CultureInfo)
  name.vb: CreateInstance(Type, BindingFlags, Binder, Object(), CultureInfo)
  fullName: System.Activator.CreateInstance(System.Type, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo)
  fullName.vb: System.Activator.CreateInstance(System.Type, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object(), System.Globalization.CultureInfo)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Activator.cs
    startLine: 52
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public static object CreateInstance(Type type, BindingFlags bindingAttr, Binder binder, object[] args, CultureInfo culture)
    content.vb: Public Shared Function CreateInstance(type As Type, bindingAttr As BindingFlags, binder As Binder, args As Object(), culture As CultureInfo) As Object
    parameters:
    - id: type
      type: System.Type
    - id: bindingAttr
      type: System.Reflection.BindingFlags
    - id: binder
      type: System.Reflection.Binder
    - id: args
      type: System.Object[]
    - id: culture
      type: System.Globalization.CultureInfo
    return:
      type: System.Object
- uid: System.Activator.CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  id: CreateInstance(System.Type,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  parent: System.Activator
  href: System.Activator.yml
  name: CreateInstance(Type, BindingFlags, Binder, Object[], CultureInfo, Object[])
  name.vb: CreateInstance(Type, BindingFlags, Binder, Object(), CultureInfo, Object())
  fullName: System.Activator.CreateInstance(System.Type, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[])
  fullName.vb: System.Activator.CreateInstance(System.Type, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object(), System.Globalization.CultureInfo, System.Object())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Activator.cs
    startLine: 61
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public static object CreateInstance(Type type, BindingFlags bindingAttr, Binder binder, object[] args, CultureInfo culture, object[] activationAttributes)
    content.vb: Public Shared Function CreateInstance(type As Type, bindingAttr As BindingFlags, binder As Binder, args As Object(), culture As CultureInfo, activationAttributes As Object()) As Object
    parameters:
    - id: type
      type: System.Type
    - id: bindingAttr
      type: System.Reflection.BindingFlags
    - id: binder
      type: System.Reflection.Binder
    - id: args
      type: System.Object[]
    - id: culture
      type: System.Globalization.CultureInfo
    - id: activationAttributes
      type: System.Object[]
    return:
      type: System.Object
- uid: System.Activator.CreateInstance(System.Type,System.Object[])
  id: CreateInstance(System.Type,System.Object[])
  parent: System.Activator
  href: System.Activator.yml
  name: CreateInstance(Type, Object[])
  name.vb: CreateInstance(Type, Object())
  fullName: System.Activator.CreateInstance(System.Type, System.Object[])
  fullName.vb: System.Activator.CreateInstance(System.Type, System.Object())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Activator.cs
    startLine: 107
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public static object CreateInstance(Type type, params object[] args)
    content.vb: Public Shared Function CreateInstance(type As Type, ParamArray args As Object()) As Object
    parameters:
    - id: type
      type: System.Type
    - id: args
      type: System.Object[]
    return:
      type: System.Object
- uid: System.Activator.CreateInstance(System.Type,System.Object[],System.Object[])
  id: CreateInstance(System.Type,System.Object[],System.Object[])
  parent: System.Activator
  href: System.Activator.yml
  name: CreateInstance(Type, Object[], Object[])
  name.vb: CreateInstance(Type, Object(), Object())
  fullName: System.Activator.CreateInstance(System.Type, System.Object[], System.Object[])
  fullName.vb: System.Activator.CreateInstance(System.Type, System.Object(), System.Object())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Activator.cs
    startLine: 117
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public static object CreateInstance(Type type, object[] args, object[] activationAttributes)
    content.vb: Public Shared Function CreateInstance(type As Type, args As Object(), activationAttributes As Object()) As Object
    parameters:
    - id: type
      type: System.Type
    - id: args
      type: System.Object[]
    - id: activationAttributes
      type: System.Object[]
    return:
      type: System.Object
- uid: System.Activator.CreateInstance(System.Type)
  id: CreateInstance(System.Type)
  parent: System.Activator
  href: System.Activator.yml
  name: CreateInstance(Type)
  fullName: System.Activator.CreateInstance(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Activator.cs
    startLine: 129
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public static object CreateInstance(Type type)
    content.vb: Public Shared Function CreateInstance(type As Type) As Object
    parameters:
    - id: type
      type: System.Type
    return:
      type: System.Object
- uid: System.Activator.CreateInstance(System.String,System.String)
  id: CreateInstance(System.String,System.String)
  parent: System.Activator
  href: System.Activator.yml
  name: CreateInstance(String, String)
  fullName: System.Activator.CreateInstance(System.String, System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Activator.cs
    startLine: 139
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public static ObjectHandle CreateInstance(string assemblyName, string typeName)
    content.vb: Public Shared Function CreateInstance(assemblyName As String, typeName As String) As ObjectHandle
    parameters:
    - id: assemblyName
      type: System.String
    - id: typeName
      type: System.String
    return:
      type: System.Runtime.Remoting.ObjectHandle
- uid: System.Activator.CreateInstance(System.String,System.String,System.Object[])
  id: CreateInstance(System.String,System.String,System.Object[])
  parent: System.Activator
  href: System.Activator.yml
  name: CreateInstance(String, String, Object[])
  name.vb: CreateInstance(String, String, Object())
  fullName: System.Activator.CreateInstance(System.String, System.String, System.Object[])
  fullName.vb: System.Activator.CreateInstance(System.String, System.String, System.Object())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Activator.cs
    startLine: 157
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public static ObjectHandle CreateInstance(string assemblyName, string typeName, object[] activationAttributes)
    content.vb: Public Shared Function CreateInstance(assemblyName As String, typeName As String, activationAttributes As Object()) As ObjectHandle
    parameters:
    - id: assemblyName
      type: System.String
    - id: typeName
      type: System.String
    - id: activationAttributes
      type: System.Object[]
    return:
      type: System.Runtime.Remoting.ObjectHandle
- uid: System.Activator.CreateInstance(System.Type,System.Boolean)
  id: CreateInstance(System.Type,System.Boolean)
  parent: System.Activator
  href: System.Activator.yml
  name: CreateInstance(Type, Boolean)
  fullName: System.Activator.CreateInstance(System.Type, System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Activator.cs
    startLine: 177
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public static object CreateInstance(Type type, bool nonPublic)
    content.vb: Public Shared Function CreateInstance(type As Type, nonPublic As Boolean) As Object
    parameters:
    - id: type
      type: System.Type
    - id: nonPublic
      type: System.Boolean
    return:
      type: System.Object
- uid: System.Activator.CreateInstance``1
  id: CreateInstance``1
  parent: System.Activator
  href: System.Activator.yml
  name: CreateInstance<T>()
  name.vb: CreateInstance(Of T)()
  fullName: System.Activator.CreateInstance<T>()
  fullName.vb: System.Activator.CreateInstance(Of T)()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Activator.cs
    startLine: 193
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public static T CreateInstance<T>()
    content.vb: Public Shared Function CreateInstance(Of T) As T
    typeParameters:
    - id: T
    return:
      type: '{T}'
- uid: System.Activator.CreateInstanceFrom(System.String,System.String)
  id: CreateInstanceFrom(System.String,System.String)
  parent: System.Activator
  href: System.Activator.yml
  name: CreateInstanceFrom(String, String)
  fullName: System.Activator.CreateInstanceFrom(System.String, System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Activator.cs
    startLine: 223
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public static ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName)
    content.vb: Public Shared Function CreateInstanceFrom(assemblyFile As String, typeName As String) As ObjectHandle
    parameters:
    - id: assemblyFile
      type: System.String
    - id: typeName
      type: System.String
    return:
      type: System.Runtime.Remoting.ObjectHandle
- uid: System.Activator.CreateInstanceFrom(System.String,System.String,System.Object[])
  id: CreateInstanceFrom(System.String,System.String,System.Object[])
  parent: System.Activator
  href: System.Activator.yml
  name: CreateInstanceFrom(String, String, Object[])
  name.vb: CreateInstanceFrom(String, String, Object())
  fullName: System.Activator.CreateInstanceFrom(System.String, System.String, System.Object[])
  fullName.vb: System.Activator.CreateInstanceFrom(System.String, System.String, System.Object())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Activator.cs
    startLine: 230
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public static ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, object[] activationAttributes)
    content.vb: Public Shared Function CreateInstanceFrom(assemblyFile As String, typeName As String, activationAttributes As Object()) As ObjectHandle
    parameters:
    - id: assemblyFile
      type: System.String
    - id: typeName
      type: System.String
    - id: activationAttributes
      type: System.Object[]
    return:
      type: System.Runtime.Remoting.ObjectHandle
- uid: System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  id: CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  parent: System.Activator
  href: System.Activator.yml
  name: CreateInstance(String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[], Evidence)
  name.vb: CreateInstance(String, String, Boolean, BindingFlags, Binder, Object(), CultureInfo, Object(), Evidence)
  fullName: System.Activator.CreateInstance(System.String, System.String, System.Boolean, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[], System.Security.Policy.Evidence)
  fullName.vb: System.Activator.CreateInstance(System.String, System.String, System.Boolean, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object(), System.Globalization.CultureInfo, System.Object(), System.Security.Policy.Evidence)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Activator.cs
    startLine: 245
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public static ObjectHandle CreateInstance(string assemblyName, string typeName, bool ignoreCase, BindingFlags bindingAttr, Binder binder, object[] args, CultureInfo culture, object[] activationAttributes, Evidence securityInfo)
    content.vb: Public Shared Function CreateInstance(assemblyName As String, typeName As String, ignoreCase As Boolean, bindingAttr As BindingFlags, binder As Binder, args As Object(), culture As CultureInfo, activationAttributes As Object(), securityInfo As Evidence) As ObjectHandle
    parameters:
    - id: assemblyName
      type: System.String
    - id: typeName
      type: System.String
    - id: ignoreCase
      type: System.Boolean
    - id: bindingAttr
      type: System.Reflection.BindingFlags
    - id: binder
      type: System.Reflection.Binder
    - id: args
      type: System.Object[]
    - id: culture
      type: System.Globalization.CultureInfo
    - id: activationAttributes
      type: System.Object[]
    - id: securityInfo
      type: System.Security.Policy.Evidence
    return:
      type: System.Runtime.Remoting.ObjectHandle
- uid: System.Activator.CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  id: CreateInstance(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  parent: System.Activator
  href: System.Activator.yml
  name: CreateInstance(String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[])
  name.vb: CreateInstance(String, String, Boolean, BindingFlags, Binder, Object(), CultureInfo, Object())
  fullName: System.Activator.CreateInstance(System.String, System.String, System.Boolean, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[])
  fullName.vb: System.Activator.CreateInstance(System.String, System.String, System.Boolean, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object(), System.Globalization.CultureInfo, System.Object())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Activator.cs
    startLine: 271
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public static ObjectHandle CreateInstance(string assemblyName, string typeName, bool ignoreCase, BindingFlags bindingAttr, Binder binder, object[] args, CultureInfo culture, object[] activationAttributes)
    content.vb: Public Shared Function CreateInstance(assemblyName As String, typeName As String, ignoreCase As Boolean, bindingAttr As BindingFlags, binder As Binder, args As Object(), culture As CultureInfo, activationAttributes As Object()) As ObjectHandle
    parameters:
    - id: assemblyName
      type: System.String
    - id: typeName
      type: System.String
    - id: ignoreCase
      type: System.Boolean
    - id: bindingAttr
      type: System.Reflection.BindingFlags
    - id: binder
      type: System.Reflection.Binder
    - id: args
      type: System.Object[]
    - id: culture
      type: System.Globalization.CultureInfo
    - id: activationAttributes
      type: System.Object[]
    return:
      type: System.Runtime.Remoting.ObjectHandle
- uid: System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  id: CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  parent: System.Activator
  href: System.Activator.yml
  name: CreateInstanceFrom(String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[], Evidence)
  name.vb: CreateInstanceFrom(String, String, Boolean, BindingFlags, Binder, Object(), CultureInfo, Object(), Evidence)
  fullName: System.Activator.CreateInstanceFrom(System.String, System.String, System.Boolean, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[], System.Security.Policy.Evidence)
  fullName.vb: System.Activator.CreateInstanceFrom(System.String, System.String, System.Boolean, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object(), System.Globalization.CultureInfo, System.Object(), System.Security.Policy.Evidence)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Activator.cs
    startLine: 359
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public static ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, bool ignoreCase, BindingFlags bindingAttr, Binder binder, object[] args, CultureInfo culture, object[] activationAttributes, Evidence securityInfo)
    content.vb: Public Shared Function CreateInstanceFrom(assemblyFile As String, typeName As String, ignoreCase As Boolean, bindingAttr As BindingFlags, binder As Binder, args As Object(), culture As CultureInfo, activationAttributes As Object(), securityInfo As Evidence) As ObjectHandle
    parameters:
    - id: assemblyFile
      type: System.String
    - id: typeName
      type: System.String
    - id: ignoreCase
      type: System.Boolean
    - id: bindingAttr
      type: System.Reflection.BindingFlags
    - id: binder
      type: System.Reflection.Binder
    - id: args
      type: System.Object[]
    - id: culture
      type: System.Globalization.CultureInfo
    - id: activationAttributes
      type: System.Object[]
    - id: securityInfo
      type: System.Security.Policy.Evidence
    return:
      type: System.Runtime.Remoting.ObjectHandle
- uid: System.Activator.CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  id: CreateInstanceFrom(System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  parent: System.Activator
  href: System.Activator.yml
  name: CreateInstanceFrom(String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[])
  name.vb: CreateInstanceFrom(String, String, Boolean, BindingFlags, Binder, Object(), CultureInfo, Object())
  fullName: System.Activator.CreateInstanceFrom(System.String, System.String, System.Boolean, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[])
  fullName.vb: System.Activator.CreateInstanceFrom(System.String, System.String, System.Boolean, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object(), System.Globalization.CultureInfo, System.Object())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Activator.cs
    startLine: 389
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public static ObjectHandle CreateInstanceFrom(string assemblyFile, string typeName, bool ignoreCase, BindingFlags bindingAttr, Binder binder, object[] args, CultureInfo culture, object[] activationAttributes)
    content.vb: Public Shared Function CreateInstanceFrom(assemblyFile As String, typeName As String, ignoreCase As Boolean, bindingAttr As BindingFlags, binder As Binder, args As Object(), culture As CultureInfo, activationAttributes As Object()) As ObjectHandle
    parameters:
    - id: assemblyFile
      type: System.String
    - id: typeName
      type: System.String
    - id: ignoreCase
      type: System.Boolean
    - id: bindingAttr
      type: System.Reflection.BindingFlags
    - id: binder
      type: System.Reflection.Binder
    - id: args
      type: System.Object[]
    - id: culture
      type: System.Globalization.CultureInfo
    - id: activationAttributes
      type: System.Object[]
    return:
      type: System.Runtime.Remoting.ObjectHandle
- uid: System.Activator.CreateInstance(System.AppDomain,System.String,System.String)
  id: CreateInstance(System.AppDomain,System.String,System.String)
  parent: System.Activator
  href: System.Activator.yml
  name: CreateInstance(AppDomain, String, String)
  fullName: System.Activator.CreateInstance(System.AppDomain, System.String, System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Activator.cs
    startLine: 451
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public static ObjectHandle CreateInstance(AppDomain domain, string assemblyName, string typeName)
    content.vb: Public Shared Function CreateInstance(domain As AppDomain, assemblyName As String, typeName As String) As ObjectHandle
    parameters:
    - id: domain
      type: System.AppDomain
    - id: assemblyName
      type: System.String
    - id: typeName
      type: System.String
    return:
      type: System.Runtime.Remoting.ObjectHandle
- uid: System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  id: CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  parent: System.Activator
  href: System.Activator.yml
  name: CreateInstance(AppDomain, String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[], Evidence)
  name.vb: CreateInstance(AppDomain, String, String, Boolean, BindingFlags, Binder, Object(), CultureInfo, Object(), Evidence)
  fullName: System.Activator.CreateInstance(System.AppDomain, System.String, System.String, System.Boolean, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[], System.Security.Policy.Evidence)
  fullName.vb: System.Activator.CreateInstance(System.AppDomain, System.String, System.String, System.Boolean, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object(), System.Globalization.CultureInfo, System.Object(), System.Security.Policy.Evidence)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Activator.cs
    startLine: 459
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public static ObjectHandle CreateInstance(AppDomain domain, string assemblyName, string typeName, bool ignoreCase, BindingFlags bindingAttr, Binder binder, object[] args, CultureInfo culture, object[] activationAttributes, Evidence securityAttributes)
    content.vb: Public Shared Function CreateInstance(domain As AppDomain, assemblyName As String, typeName As String, ignoreCase As Boolean, bindingAttr As BindingFlags, binder As Binder, args As Object(), culture As CultureInfo, activationAttributes As Object(), securityAttributes As Evidence) As ObjectHandle
    parameters:
    - id: domain
      type: System.AppDomain
    - id: assemblyName
      type: System.String
    - id: typeName
      type: System.String
    - id: ignoreCase
      type: System.Boolean
    - id: bindingAttr
      type: System.Reflection.BindingFlags
    - id: binder
      type: System.Reflection.Binder
    - id: args
      type: System.Object[]
    - id: culture
      type: System.Globalization.CultureInfo
    - id: activationAttributes
      type: System.Object[]
    - id: securityAttributes
      type: System.Security.Policy.Evidence
    return:
      type: System.Runtime.Remoting.ObjectHandle
- uid: System.Activator.CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  id: CreateInstance(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  parent: System.Activator
  href: System.Activator.yml
  name: CreateInstance(AppDomain, String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[])
  name.vb: CreateInstance(AppDomain, String, String, Boolean, BindingFlags, Binder, Object(), CultureInfo, Object())
  fullName: System.Activator.CreateInstance(System.AppDomain, System.String, System.String, System.Boolean, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[])
  fullName.vb: System.Activator.CreateInstance(System.AppDomain, System.String, System.String, System.Boolean, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object(), System.Globalization.CultureInfo, System.Object())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Activator.cs
    startLine: 485
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public static ObjectHandle CreateInstance(AppDomain domain, string assemblyName, string typeName, bool ignoreCase, BindingFlags bindingAttr, Binder binder, object[] args, CultureInfo culture, object[] activationAttributes)
    content.vb: Public Shared Function CreateInstance(domain As AppDomain, assemblyName As String, typeName As String, ignoreCase As Boolean, bindingAttr As BindingFlags, binder As Binder, args As Object(), culture As CultureInfo, activationAttributes As Object()) As ObjectHandle
    parameters:
    - id: domain
      type: System.AppDomain
    - id: assemblyName
      type: System.String
    - id: typeName
      type: System.String
    - id: ignoreCase
      type: System.Boolean
    - id: bindingAttr
      type: System.Reflection.BindingFlags
    - id: binder
      type: System.Reflection.Binder
    - id: args
      type: System.Object[]
    - id: culture
      type: System.Globalization.CultureInfo
    - id: activationAttributes
      type: System.Object[]
    return:
      type: System.Runtime.Remoting.ObjectHandle
- uid: System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String)
  id: CreateInstanceFrom(System.AppDomain,System.String,System.String)
  parent: System.Activator
  href: System.Activator.yml
  name: CreateInstanceFrom(AppDomain, String, String)
  fullName: System.Activator.CreateInstanceFrom(System.AppDomain, System.String, System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Activator.cs
    startLine: 518
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public static ObjectHandle CreateInstanceFrom(AppDomain domain, string assemblyFile, string typeName)
    content.vb: Public Shared Function CreateInstanceFrom(domain As AppDomain, assemblyFile As String, typeName As String) As ObjectHandle
    parameters:
    - id: domain
      type: System.AppDomain
    - id: assemblyFile
      type: System.String
    - id: typeName
      type: System.String
    return:
      type: System.Runtime.Remoting.ObjectHandle
- uid: System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  id: CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[],System.Security.Policy.Evidence)
  parent: System.Activator
  href: System.Activator.yml
  name: CreateInstanceFrom(AppDomain, String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[], Evidence)
  name.vb: CreateInstanceFrom(AppDomain, String, String, Boolean, BindingFlags, Binder, Object(), CultureInfo, Object(), Evidence)
  fullName: System.Activator.CreateInstanceFrom(System.AppDomain, System.String, System.String, System.Boolean, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[], System.Security.Policy.Evidence)
  fullName.vb: System.Activator.CreateInstanceFrom(System.AppDomain, System.String, System.String, System.Boolean, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object(), System.Globalization.CultureInfo, System.Object(), System.Security.Policy.Evidence)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Activator.cs
    startLine: 526
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public static ObjectHandle CreateInstanceFrom(AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, BindingFlags bindingAttr, Binder binder, object[] args, CultureInfo culture, object[] activationAttributes, Evidence securityAttributes)
    content.vb: Public Shared Function CreateInstanceFrom(domain As AppDomain, assemblyFile As String, typeName As String, ignoreCase As Boolean, bindingAttr As BindingFlags, binder As Binder, args As Object(), culture As CultureInfo, activationAttributes As Object(), securityAttributes As Evidence) As ObjectHandle
    parameters:
    - id: domain
      type: System.AppDomain
    - id: assemblyFile
      type: System.String
    - id: typeName
      type: System.String
    - id: ignoreCase
      type: System.Boolean
    - id: bindingAttr
      type: System.Reflection.BindingFlags
    - id: binder
      type: System.Reflection.Binder
    - id: args
      type: System.Object[]
    - id: culture
      type: System.Globalization.CultureInfo
    - id: activationAttributes
      type: System.Object[]
    - id: securityAttributes
      type: System.Security.Policy.Evidence
    return:
      type: System.Runtime.Remoting.ObjectHandle
- uid: System.Activator.CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  id: CreateInstanceFrom(System.AppDomain,System.String,System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])
  parent: System.Activator
  href: System.Activator.yml
  name: CreateInstanceFrom(AppDomain, String, String, Boolean, BindingFlags, Binder, Object[], CultureInfo, Object[])
  name.vb: CreateInstanceFrom(AppDomain, String, String, Boolean, BindingFlags, Binder, Object(), CultureInfo, Object())
  fullName: System.Activator.CreateInstanceFrom(System.AppDomain, System.String, System.String, System.Boolean, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object[], System.Globalization.CultureInfo, System.Object[])
  fullName.vb: System.Activator.CreateInstanceFrom(System.AppDomain, System.String, System.String, System.Boolean, System.Reflection.BindingFlags, System.Reflection.Binder, System.Object(), System.Globalization.CultureInfo, System.Object())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Activator.cs
    startLine: 552
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public static ObjectHandle CreateInstanceFrom(AppDomain domain, string assemblyFile, string typeName, bool ignoreCase, BindingFlags bindingAttr, Binder binder, object[] args, CultureInfo culture, object[] activationAttributes)
    content.vb: Public Shared Function CreateInstanceFrom(domain As AppDomain, assemblyFile As String, typeName As String, ignoreCase As Boolean, bindingAttr As BindingFlags, binder As Binder, args As Object(), culture As CultureInfo, activationAttributes As Object()) As ObjectHandle
    parameters:
    - id: domain
      type: System.AppDomain
    - id: assemblyFile
      type: System.String
    - id: typeName
      type: System.String
    - id: ignoreCase
      type: System.Boolean
    - id: bindingAttr
      type: System.Reflection.BindingFlags
    - id: binder
      type: System.Reflection.Binder
    - id: args
      type: System.Object[]
    - id: culture
      type: System.Globalization.CultureInfo
    - id: activationAttributes
      type: System.Object[]
    return:
      type: System.Runtime.Remoting.ObjectHandle
- uid: System.Activator.CreateComInstanceFrom(System.String,System.String)
  id: CreateComInstanceFrom(System.String,System.String)
  parent: System.Activator
  href: System.Activator.yml
  name: CreateComInstanceFrom(String, String)
  fullName: System.Activator.CreateComInstanceFrom(System.String, System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Activator.cs
    startLine: 599
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public static ObjectHandle CreateComInstanceFrom(string assemblyName, string typeName)
    content.vb: Public Shared Function CreateComInstanceFrom(assemblyName As String, typeName As String) As ObjectHandle
    parameters:
    - id: assemblyName
      type: System.String
    - id: typeName
      type: System.String
    return:
      type: System.Runtime.Remoting.ObjectHandle
- uid: System.Activator.CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)
  id: CreateComInstanceFrom(System.String,System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)
  parent: System.Activator
  href: System.Activator.yml
  name: CreateComInstanceFrom(String, String, Byte[], AssemblyHashAlgorithm)
  name.vb: CreateComInstanceFrom(String, String, Byte(), AssemblyHashAlgorithm)
  fullName: System.Activator.CreateComInstanceFrom(System.String, System.String, System.Byte[], System.Configuration.Assemblies.AssemblyHashAlgorithm)
  fullName.vb: System.Activator.CreateComInstanceFrom(System.String, System.String, System.Byte(), System.Configuration.Assemblies.AssemblyHashAlgorithm)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Activator.cs
    startLine: 609
  assemblies:
  - mscorlib
  namespace: System
  syntax:
    content: public static ObjectHandle CreateComInstanceFrom(string assemblyName, string typeName, byte[] hashValue, AssemblyHashAlgorithm hashAlgorithm)
    content.vb: Public Shared Function CreateComInstanceFrom(assemblyName As String, typeName As String, hashValue As Byte(), hashAlgorithm As AssemblyHashAlgorithm) As ObjectHandle
    parameters:
    - id: assemblyName
      type: System.String
    - id: typeName
      type: System.String
    - id: hashValue
      type: System.Byte[]
    - id: hashAlgorithm
      type: System.Configuration.Assemblies.AssemblyHashAlgorithm
    return:
      type: System.Runtime.Remoting.ObjectHandle
references:
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Type
  parent: System
  isExternal: false
  href: System.Type.yml
  name: Type
  fullName: System.Type
  type: Class
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.BindingFlags.yml
  name: BindingFlags
  fullName: System.Reflection.BindingFlags
  type: Enum
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.Binder.yml
  name: Binder
  fullName: System.Reflection.Binder
  type: Class
- uid: System.Object[]
  isExternal: false
  href: System.Object.yml
  name: Object[]
  name.vb: Object()
  fullName: System.Object[]
  fullName.vb: System.Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ()
    fullName: ()
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: false
  href: System.Globalization.CultureInfo.yml
  name: CultureInfo
  fullName: System.Globalization.CultureInfo
  type: Class
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
  type: Namespace
- uid: System.Globalization
  isExternal: false
  name: System.Globalization
  fullName: System.Globalization
  type: Namespace
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
  type: Class
- uid: System.Runtime.Remoting.ObjectHandle
  parent: System.Runtime.Remoting
  isExternal: false
  href: System.Runtime.Remoting.ObjectHandle.yml
  name: ObjectHandle
  fullName: System.Runtime.Remoting.ObjectHandle
  type: Class
- uid: System.Runtime.Remoting
  isExternal: false
  name: System.Runtime.Remoting
  fullName: System.Runtime.Remoting
  type: Namespace
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
  type: Struct
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  href: System.Security.Policy.Evidence.yml
  name: Evidence
  fullName: System.Security.Policy.Evidence
  type: Class
  summary: >-
    The Evidence class keeps track of information that can be used to make security decisions about

    an assembly or an AppDomain.  There are two types of evidence, one is supplied by the CLR or a

    host, the other supplied by the assembly itself.



    We keep a dictionary that maps each type of possbile evidence to an EvidenceTypeDescriptor which

    contains the evidence objects themselves if they exist as well as some extra metadata about that

    type of evidence.  This dictionary is fully populated with keys for host evidence at all times and

    for assembly evidence the first time the application evidence is touched.  This means that if a

    Type key does not exist in the dictionary, then that particular type of evidence will never be

    given to the assembly or AppDomain in question as host evidence.  The only exception is if the

    user later manually adds host evidence via the AddHostEvidence API.



    Assembly supplied evidence is created up front, however host supplied evidence may be lazily

    created.  In the lazy creation case, the Type will map to either an EvidenceTypeDescriptor that does

    not contain any evidence data or null.  As requests come in for that evidence, we'll populate the

    EvidenceTypeDescriptor appropriately.
- uid: System.Security.Policy
  isExternal: false
  name: System.Security.Policy
  fullName: System.Security.Policy
  type: Namespace
- uid: System.AppDomain
  parent: System
  isExternal: false
  href: System.AppDomain.yml
  name: AppDomain
  fullName: System.AppDomain
  type: Class
- uid: System.Byte[]
  isExternal: false
  href: System.Byte.yml
  name: Byte[]
  name.vb: Byte()
  fullName: System.Byte[]
  fullName.vb: System.Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    href: System.Byte.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    href: System.Byte.yml
  - name: ()
    fullName: ()
- uid: System.Configuration.Assemblies.AssemblyHashAlgorithm
  parent: System.Configuration.Assemblies
  isExternal: false
  href: System.Configuration.Assemblies.AssemblyHashAlgorithm.yml
  name: AssemblyHashAlgorithm
  fullName: System.Configuration.Assemblies.AssemblyHashAlgorithm
  type: Enum
- uid: System.Configuration.Assemblies
  isExternal: false
  name: System.Configuration.Assemblies
  fullName: System.Configuration.Assemblies
  type: Namespace
