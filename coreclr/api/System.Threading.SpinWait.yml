items:
- uid: System.Threading.SpinWait
  id: SpinWait
  parent: System.Threading
  children:
  - System.Threading.SpinWait.Count
  - System.Threading.SpinWait.NextSpinWillYield
  - System.Threading.SpinWait.Reset
  - System.Threading.SpinWait.SpinOnce
  - System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean})
  - System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.Int32)
  - System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.TimeSpan)
  href: System.Threading.SpinWait.yml
  name: SpinWait
  fullName: System.Threading.SpinWait
  type: Struct
  source:
    remote: &o0
      path: src/mscorlib/src/System/Threading/SpinWait.cs
      branch: master
      repo: https://github.com/chenkennt/coreclr.git
      key: 6c42ef8d
    path: src/mscorlib/src/System/Threading/SpinWait.cs
    startLine: 70
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: Provides support for spin-based waiting.
  remarks: "<para>\r\n<see cref=\"T:System.Threading.SpinWait\" /> encapsulates common spinning logic. On single-processor machines, yields are\r\nalways used instead of busy waits, and on computers with Intel™ processors employing Hyper-Threading™\r\ntechnology, it helps to prevent hardware thread starvation. SpinWait encapsulates a good mixture of\r\nspinning and true yielding.\r\n</para>\r\n<para>\r\n<see cref=\"T:System.Threading.SpinWait\" /> is a value type, which means that low-level code can utilize SpinWait without\r\nfear of unnecessary allocation overheads. SpinWait is not generally useful for ordinary applications.\r\nIn most cases, you should use the synchronization classes provided by the .NET Framework, such as\r\n<see cref=\"T:System.Threading.Monitor\" />. For most purposes where spin waiting is required, however,\r\nthe <see cref=\"T:System.Threading.SpinWait\" /> type should be preferred over the <see cref=\"M:System.Threading.Thread.SpinWait(System.Int32)\" /> method.\r\n</para>\r\n<para>\r\nWhile SpinWait is designed to be used in concurrent applications, it is not designed to be\r\nused from multiple threads concurrently.  SpinWait's members are not thread-safe.  If multiple\r\nthreads must spin, each should use its own instance of SpinWait.\r\n</para>"
  syntax:
    content: public struct SpinWait
    content.vb: Public Structure SpinWait
  inheritedMembers:
  - System.ValueType.Equals(System.Object)
  - System.ValueType.GetHashCode
  - System.ValueType.ToString
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetType
- uid: System.Threading.SpinWait.Count
  id: Count
  parent: System.Threading.SpinWait
  href: System.Threading.SpinWait.yml
  name: Count
  fullName: System.Threading.SpinWait.Count
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/SpinWait.cs
    startLine: 88
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: Gets the number of times [System.Threading.SpinWait.SpinOnce](System.Threading.SpinWait.yml) has been called on this instance.
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
- uid: System.Threading.SpinWait.NextSpinWillYield
  id: NextSpinWillYield
  parent: System.Threading.SpinWait
  href: System.Threading.SpinWait.yml
  name: NextSpinWillYield
  fullName: System.Threading.SpinWait.NextSpinWillYield
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/SpinWait.cs
    startLine: 103
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: >-
    Gets whether the next call to [System.Threading.SpinWait.SpinOnce](System.Threading.SpinWait.yml) will yield the processor, triggering a

    forced context switch.
  remarks: >-
    On a single-CPU machine, <see cref="M:System.Threading.SpinWait.SpinOnce" /> always yields the processor. On machines with

    multiple CPUs, <see cref="M:System.Threading.SpinWait.SpinOnce" /> may yield after an unspecified number of calls.
  syntax:
    content: public bool NextSpinWillYield { get; }
    content.vb: Public ReadOnly Property NextSpinWillYield As Boolean
    parameters: []
    return:
      type: System.Boolean
- uid: System.Threading.SpinWait.SpinOnce
  id: SpinOnce
  parent: System.Threading.SpinWait
  href: System.Threading.SpinWait.yml
  name: SpinOnce()
  fullName: System.Threading.SpinWait.SpinOnce()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/SpinWait.cs
    startLine: 115
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: Performs a single spin.
  remarks: >-
    This is typically called in a loop, and may change in behavior based on the number of times a

    [System.Threading.SpinWait.SpinOnce](System.Threading.SpinWait.yml) has been called thus far on this instance.
  syntax:
    content: public void SpinOnce()
    content.vb: Public Sub SpinOnce
- uid: System.Threading.SpinWait.Reset
  id: Reset
  parent: System.Threading.SpinWait
  href: System.Threading.SpinWait.yml
  name: Reset()
  fullName: System.Threading.SpinWait.Reset()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/SpinWait.cs
    startLine: 180
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: Resets the spin counter.
  remarks: >-
    This makes <see cref="M:System.Threading.SpinWait.SpinOnce" /> and <see cref="P:System.Threading.SpinWait.NextSpinWillYield" /> behave as though no calls

    to <see cref="M:System.Threading.SpinWait.SpinOnce" /> had been issued on this instance. If a <see cref="T:System.Threading.SpinWait" /> instance

    is reused many times, it may be useful to reset it to avoid yielding too soon.
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
- uid: System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean})
  id: SpinUntil(System.Func{System.Boolean})
  parent: System.Threading.SpinWait
  href: System.Threading.SpinWait.yml
  name: SpinUntil(Func<Boolean>)
  name.vb: SpinUntil(Func(Of Boolean))
  fullName: System.Threading.SpinWait.SpinUntil(System.Func<System.Boolean>)
  fullName.vb: System.Threading.SpinWait.SpinUntil(System.Func(Of System.Boolean))
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/SpinWait.cs
    startLine: 191
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: Spins until the specified condition is satisfied.
  syntax:
    content: public static void SpinUntil(Func<bool> condition)
    content.vb: Public Shared Sub SpinUntil(condition As Func(Of Boolean))
    parameters:
    - id: condition
      type: System.Func{System.Boolean}
      description: A delegate to be executed over and over until it returns true.
  exceptions:
  - type: System.ArgumentNullException
    description: The  argument is null.
- uid: System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.TimeSpan)
  id: SpinUntil(System.Func{System.Boolean},System.TimeSpan)
  parent: System.Threading.SpinWait
  href: System.Threading.SpinWait.yml
  name: SpinUntil(Func<Boolean>, TimeSpan)
  name.vb: SpinUntil(Func(Of Boolean), TimeSpan)
  fullName: System.Threading.SpinWait.SpinUntil(System.Func<System.Boolean>, System.TimeSpan)
  fullName.vb: System.Threading.SpinWait.SpinUntil(System.Func(Of System.Boolean), System.TimeSpan)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/SpinWait.cs
    startLine: 214
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: Spins until the specified condition is satisfied or until the specified timeout is expired.
  syntax:
    content: public static bool SpinUntil(Func<bool> condition, TimeSpan timeout)
    content.vb: Public Shared Function SpinUntil(condition As Func(Of Boolean), timeout As TimeSpan) As Boolean
    parameters:
    - id: condition
      type: System.Func{System.Boolean}
      description: A delegate to be executed over and over until it returns true.
    - id: timeout
      type: System.TimeSpan
      description: >-
        A [System.TimeSpan](System.TimeSpan.yml) that represents the number of milliseconds to wait,

        or a TimeSpan that represents -1 milliseconds to wait indefinitely.
    return:
      type: System.Boolean
      description: True if the condition is satisfied within the timeout; otherwise, false
  exceptions:
  - type: System.ArgumentNullException
    description: The  argument is null.
  - type: System.ArgumentOutOfRangeException
    description: >-
      is a negative number

      other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than

      .
- uid: System.Threading.SpinWait.SpinUntil(System.Func{System.Boolean},System.Int32)
  id: SpinUntil(System.Func{System.Boolean},System.Int32)
  parent: System.Threading.SpinWait
  href: System.Threading.SpinWait.yml
  name: SpinUntil(Func<Boolean>, Int32)
  name.vb: SpinUntil(Func(Of Boolean), Int32)
  fullName: System.Threading.SpinWait.SpinUntil(System.Func<System.Boolean>, System.Int32)
  fullName.vb: System.Threading.SpinWait.SpinUntil(System.Func(Of System.Boolean), System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/SpinWait.cs
    startLine: 238
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: Spins until the specified condition is satisfied or until the specified timeout is expired.
  syntax:
    content: public static bool SpinUntil(Func<bool> condition, int millisecondsTimeout)
    content.vb: Public Shared Function SpinUntil(condition As Func(Of Boolean), millisecondsTimeout As Integer) As Boolean
    parameters:
    - id: condition
      type: System.Func{System.Boolean}
      description: A delegate to be executed over and over until it returns true.
    - id: millisecondsTimeout
      type: System.Int32
      description: The number of milliseconds to wait, or [System.Threading.Timeout.Infinite](System.Threading.Timeout.yml) (-1) to wait indefinitely.
    return:
      type: System.Boolean
      description: True if the condition is satisfied within the timeout; otherwise, false
  exceptions:
  - type: System.ArgumentNullException
    description: The  argument is null.
  - type: System.ArgumentOutOfRangeException
    description: >-
      is a

      negative number other than -1, which represents an infinite time-out.
references:
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
  type: Namespace
- uid: System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: false
  href: System.ValueType.yml
  name: Equals(Object)
  fullName: System.ValueType.Equals(System.Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    href: System.ValueType.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    fullName: System.ValueType.Equals
    href: System.ValueType.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  name: GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    fullName: System.ValueType.GetHashCode
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType.ToString
  parent: System.ValueType
  isExternal: false
  href: System.ValueType.yml
  name: ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    href: System.ValueType.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    fullName: System.ValueType.ToString
    href: System.ValueType.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.ValueType
  parent: System
  isExternal: false
  href: System.ValueType.yml
  name: ValueType
  fullName: System.ValueType
  type: Class
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Threading.SpinWait.SpinOnce
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
  type: Struct
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
  type: Struct
- uid: System.Threading.SpinWait.NextSpinWillYield
- uid: System.ArgumentNullException
  isExternal: false
  href: System.ArgumentNullException.yml
  name: ArgumentNullException
  fullName: System.ArgumentNullException
  type: Class
- uid: System.Func{System.Boolean}
  parent: System
  definition: System.Func`1
  href: System.Func`1.yml
  name: Func<Boolean>
  name.vb: Func(Of Boolean)
  fullName: System.Func<System.Boolean>
  fullName.vb: System.Func(Of System.Boolean)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    href: System.Func`1.yml
  - name: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    href: System.Boolean.yml
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    href: System.Func`1.yml
  - name: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    fullName: System.Boolean
    href: System.Boolean.yml
  - name: )
    fullName: )
- uid: System.Func`1
  isExternal: false
  href: System.Func`1.yml
  name: Func<TResult>
  name.vb: Func(Of TResult)
  fullName: System.Func<TResult>
  fullName.vb: System.Func(Of TResult)
  type: Delegate
  spec.csharp:
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    href: System.Func`1.yml
  - name: <
    fullName: <
  - name: TResult
    fullName: TResult
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    fullName: System.Func
    href: System.Func`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TResult
    fullName: TResult
  - name: )
    fullName: )
- uid: System.TimeSpan
  parent: System
  isExternal: false
  href: System.TimeSpan.yml
  name: TimeSpan
  fullName: System.TimeSpan
  type: Struct
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  href: System.ArgumentOutOfRangeException.yml
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  type: Class
- uid: System.Threading.Timeout.Infinite
