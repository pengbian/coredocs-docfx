items:
- uid: System.Security.HostSecurityManager
  id: HostSecurityManager
  parent: System.Security
  children:
  - System.Security.HostSecurityManager.#ctor
  - System.Security.HostSecurityManager.Flags
  - System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)
  - System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)
  - System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes
  - System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)
  - System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)
  - System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)
  href: System.Security.HostSecurityManager.yml
  name: HostSecurityManager
  fullName: System.Security.HostSecurityManager
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Security/HostSecurityManager.cs
      branch: master
      repo: https://github.com/chenkennt/coreclr.git
      key: 6c42ef8d
    path: src/mscorlib/src/System/Security/HostSecurityManager.cs
    startLine: 39
  assemblies:
  - mscorlib
  namespace: System.Security
  syntax:
    content: public class HostSecurityManager
    content.vb: Public Class HostSecurityManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Security.HostSecurityManager.#ctor
  id: '#ctor'
  parent: System.Security.HostSecurityManager
  href: System.Security.HostSecurityManager.yml
  name: HostSecurityManager()
  fullName: System.Security.HostSecurityManager.HostSecurityManager()
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/HostSecurityManager.cs
    startLine: 46
  assemblies:
  - mscorlib
  namespace: System.Security
  syntax:
    content: public HostSecurityManager()
    content.vb: Public Sub New
- uid: System.Security.HostSecurityManager.Flags
  id: Flags
  parent: System.Security.HostSecurityManager
  href: System.Security.HostSecurityManager.yml
  name: Flags
  fullName: System.Security.HostSecurityManager.Flags
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/HostSecurityManager.cs
    startLine: 50
  assemblies:
  - mscorlib
  namespace: System.Security
  syntax:
    content: public virtual HostSecurityManagerOptions Flags { get; }
    content.vb: Public Overridable ReadOnly Property Flags As HostSecurityManagerOptions
    parameters: []
    return:
      type: System.Security.HostSecurityManagerOptions
- uid: System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)
  id: ProvideAppDomainEvidence(System.Security.Policy.Evidence)
  parent: System.Security.HostSecurityManager
  href: System.Security.HostSecurityManager.yml
  name: ProvideAppDomainEvidence(Evidence)
  fullName: System.Security.HostSecurityManager.ProvideAppDomainEvidence(System.Security.Policy.Evidence)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/HostSecurityManager.cs
    startLine: 71
  assemblies:
  - mscorlib
  namespace: System.Security
  syntax:
    content: public virtual Evidence ProvideAppDomainEvidence(Evidence inputEvidence)
    content.vb: Public Overridable Function ProvideAppDomainEvidence(inputEvidence As Evidence) As Evidence
    parameters:
    - id: inputEvidence
      type: System.Security.Policy.Evidence
    return:
      type: System.Security.Policy.Evidence
- uid: System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)
  id: ProvideAssemblyEvidence(System.Reflection.Assembly,System.Security.Policy.Evidence)
  parent: System.Security.HostSecurityManager
  href: System.Security.HostSecurityManager.yml
  name: ProvideAssemblyEvidence(Assembly, Evidence)
  fullName: System.Security.HostSecurityManager.ProvideAssemblyEvidence(System.Reflection.Assembly, System.Security.Policy.Evidence)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/HostSecurityManager.cs
    startLine: 76
  assemblies:
  - mscorlib
  namespace: System.Security
  syntax:
    content: public virtual Evidence ProvideAssemblyEvidence(Assembly loadedAssembly, Evidence inputEvidence)
    content.vb: Public Overridable Function ProvideAssemblyEvidence(loadedAssembly As Assembly, inputEvidence As Evidence) As Evidence
    parameters:
    - id: loadedAssembly
      type: System.Reflection.Assembly
    - id: inputEvidence
      type: System.Security.Policy.Evidence
    return:
      type: System.Security.Policy.Evidence
- uid: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes
  id: GetHostSuppliedAppDomainEvidenceTypes
  parent: System.Security.HostSecurityManager
  href: System.Security.HostSecurityManager.yml
  name: GetHostSuppliedAppDomainEvidenceTypes()
  fullName: System.Security.HostSecurityManager.GetHostSuppliedAppDomainEvidenceTypes()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/HostSecurityManager.cs
    startLine: 188
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Determine what types of evidence the host might be able to supply for the AppDomain if requested
  syntax:
    content: public virtual Type[] GetHostSuppliedAppDomainEvidenceTypes()
    content.vb: Public Overridable Function GetHostSuppliedAppDomainEvidenceTypes As Type()
    return:
      type: System.Type[]
- uid: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)
  id: GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)
  parent: System.Security.HostSecurityManager
  href: System.Security.HostSecurityManager.yml
  name: GetHostSuppliedAssemblyEvidenceTypes(Assembly)
  fullName: System.Security.HostSecurityManager.GetHostSuppliedAssemblyEvidenceTypes(System.Reflection.Assembly)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/HostSecurityManager.cs
    startLine: 195
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Determine what types of evidence the host might be able to supply for an assembly if requested
  syntax:
    content: public virtual Type[] GetHostSuppliedAssemblyEvidenceTypes(Assembly assembly)
    content.vb: Public Overridable Function GetHostSuppliedAssemblyEvidenceTypes(assembly As Assembly) As Type()
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
    return:
      type: System.Type[]
- uid: System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)
  id: GenerateAppDomainEvidence(System.Type)
  parent: System.Security.HostSecurityManager
  href: System.Security.HostSecurityManager.yml
  name: GenerateAppDomainEvidence(Type)
  fullName: System.Security.HostSecurityManager.GenerateAppDomainEvidence(System.Type)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/HostSecurityManager.cs
    startLine: 202
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Ask the host to supply a specific type of evidence for the AppDomain
  syntax:
    content: public virtual EvidenceBase GenerateAppDomainEvidence(Type evidenceType)
    content.vb: Public Overridable Function GenerateAppDomainEvidence(evidenceType As Type) As EvidenceBase
    parameters:
    - id: evidenceType
      type: System.Type
    return:
      type: System.Security.Policy.EvidenceBase
- uid: System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)
  id: GenerateAssemblyEvidence(System.Type,System.Reflection.Assembly)
  parent: System.Security.HostSecurityManager
  href: System.Security.HostSecurityManager.yml
  name: GenerateAssemblyEvidence(Type, Assembly)
  fullName: System.Security.HostSecurityManager.GenerateAssemblyEvidence(System.Type, System.Reflection.Assembly)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/HostSecurityManager.cs
    startLine: 209
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: Ask the host to supply a specific type of evidence for an assembly
  syntax:
    content: public virtual EvidenceBase GenerateAssemblyEvidence(Type evidenceType, Assembly assembly)
    content.vb: Public Overridable Function GenerateAssemblyEvidence(evidenceType As Type, assembly As Assembly) As EvidenceBase
    parameters:
    - id: evidenceType
      type: System.Type
    - id: assembly
      type: System.Reflection.Assembly
    return:
      type: System.Security.Policy.EvidenceBase
references:
- uid: System.Security
  isExternal: false
  name: System.Security
  fullName: System.Security
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Security.HostSecurityManagerOptions
  parent: System.Security
  isExternal: false
  href: System.Security.HostSecurityManagerOptions.yml
  name: HostSecurityManagerOptions
  fullName: System.Security.HostSecurityManagerOptions
  type: Enum
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  href: System.Security.Policy.Evidence.yml
  name: Evidence
  fullName: System.Security.Policy.Evidence
  type: Class
  summary: >-
    The Evidence class keeps track of information that can be used to make security decisions about

    an assembly or an AppDomain.  There are two types of evidence, one is supplied by the CLR or a

    host, the other supplied by the assembly itself.



    We keep a dictionary that maps each type of possbile evidence to an EvidenceTypeDescriptor which

    contains the evidence objects themselves if they exist as well as some extra metadata about that

    type of evidence.  This dictionary is fully populated with keys for host evidence at all times and

    for assembly evidence the first time the application evidence is touched.  This means that if a

    Type key does not exist in the dictionary, then that particular type of evidence will never be

    given to the assembly or AppDomain in question as host evidence.  The only exception is if the

    user later manually adds host evidence via the AddHostEvidence API.



    Assembly supplied evidence is created up front, however host supplied evidence may be lazily

    created.  In the lazy creation case, the Type will map to either an EvidenceTypeDescriptor that does

    not contain any evidence data or null.  As requests come in for that evidence, we'll populate the

    EvidenceTypeDescriptor appropriately.
- uid: System.Security.Policy
  isExternal: false
  name: System.Security.Policy
  fullName: System.Security.Policy
  type: Namespace
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: false
  href: System.Reflection.Assembly.yml
  name: Assembly
  fullName: System.Reflection.Assembly
  type: Class
- uid: System.Reflection
  isExternal: false
  name: System.Reflection
  fullName: System.Reflection
  type: Namespace
- uid: System.Type[]
  isExternal: false
  href: System.Type.yml
  name: Type[]
  name.vb: Type()
  fullName: System.Type[]
  fullName.vb: System.Type()
  spec.csharp:
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Type
    name: Type
    fullName: System.Type
    href: System.Type.yml
  - name: ()
    fullName: ()
- uid: System.Type
  parent: System
  isExternal: false
  href: System.Type.yml
  name: Type
  fullName: System.Type
  type: Class
- uid: System.Security.Policy.EvidenceBase
  parent: System.Security.Policy
  isExternal: false
  href: System.Security.Policy.EvidenceBase.yml
  name: EvidenceBase
  fullName: System.Security.Policy.EvidenceBase
  type: Class
  summary: Base class from which all objects to be used as Evidence must derive
