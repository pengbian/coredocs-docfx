items:
- uid: System.Collections.Generic.IList`1
  id: IList`1
  parent: System.Collections.Generic
  children:
  - System.Collections.Generic.IList`1.IndexOf(`0)
  - System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  - System.Collections.Generic.IList`1.Item(System.Int32)
  - System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  href: System.Collections.Generic.IList`1.yml
  name: IList<T>
  name.vb: IList(Of T)
  fullName: System.Collections.Generic.IList<T>
  fullName.vb: System.Collections.Generic.IList(Of T)
  type: Interface
  source:
    remote: &o0
      path: src/mscorlib/src/System/Collections/Generic/IList.cs
      branch: master
      repo: https://github.com/chenkennt/coreclr.git
      key: 6c42ef8d
    path: src/mscorlib/src/System/Collections/Generic/IList.cs
    startLine: 30
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: 'public interface IList<T> : ICollection<T>, IEnumerable<T>, IEnumerable'
    content.vb: Public Interface IList(Of T) Inherits ICollection(Of T)
    typeParameters:
    - id: T
  inheritedMembers:
  - System.Collections.Generic.ICollection{{T}}.Count
  - System.Collections.Generic.ICollection{{T}}.IsReadOnly
  - System.Collections.Generic.ICollection{{T}}.Add({T})
  - System.Collections.Generic.ICollection{{T}}.Clear
  - System.Collections.Generic.ICollection{{T}}.Contains({T})
  - System.Collections.Generic.ICollection{{T}}.CopyTo({T}[],System.Int32)
  - System.Collections.Generic.ICollection{{T}}.Remove({T})
  - System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
- uid: System.Collections.Generic.IList`1.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Collections.Generic.IList`1
  href: System.Collections.Generic.IList`1.yml
  name: Item[Int32]
  name.vb: Item(Int32)
  fullName: System.Collections.Generic.IList<T>.Item[System.Int32]
  fullName.vb: System.Collections.Generic.IList(Of T).Item(System.Int32)
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/IList.cs
    startLine: 37
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: T this[int index] { get; set; }
    content.vb: Property Item(index As Integer) As T
    parameters:
    - id: index
      type: System.Int32
    return:
      type: '{T}'
      description: 
- uid: System.Collections.Generic.IList`1.IndexOf(`0)
  id: IndexOf(`0)
  parent: System.Collections.Generic.IList`1
  href: System.Collections.Generic.IList`1.yml
  name: IndexOf(T)
  fullName: System.Collections.Generic.IList<T>.IndexOf(T)
  fullName.vb: System.Collections.Generic.IList(Of T).IndexOf(T)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/IList.cs
    startLine: 44
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: int IndexOf(T item)
    content.vb: Function IndexOf(item As T) As Integer
    parameters:
    - id: item
      type: '{T}'
    return:
      type: System.Int32
      description: 
- uid: System.Collections.Generic.IList`1.Insert(System.Int32,`0)
  id: Insert(System.Int32,`0)
  parent: System.Collections.Generic.IList`1
  href: System.Collections.Generic.IList`1.yml
  name: Insert(Int32, T)
  fullName: System.Collections.Generic.IList<T>.Insert(System.Int32, T)
  fullName.vb: System.Collections.Generic.IList(Of T).Insert(System.Int32, T)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/IList.cs
    startLine: 50
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: void Insert(int index, T item)
    content.vb: Sub Insert(index As Integer, item As T)
    parameters:
    - id: index
      type: System.Int32
    - id: item
      type: '{T}'
- uid: System.Collections.Generic.IList`1.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Collections.Generic.IList`1
  href: System.Collections.Generic.IList`1.yml
  name: RemoveAt(Int32)
  fullName: System.Collections.Generic.IList<T>.RemoveAt(System.Int32)
  fullName.vb: System.Collections.Generic.IList(Of T).RemoveAt(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/IList.cs
    startLine: 53
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: void RemoveAt(int index)
    content.vb: Sub RemoveAt(index As Integer)
    parameters:
    - id: index
      type: System.Int32
references:
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
  type: Namespace
- uid: System.Collections.Generic.ICollection{{T}}.Count
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Count
  href: System.Collections.Generic.ICollection`1.yml
  name: Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: System.Collections.Generic.ICollection{{T}}.IsReadOnly
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.IsReadOnly
  href: System.Collections.Generic.ICollection`1.yml
  name: IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: System.Collections.Generic.ICollection{{T}}.Add({T})
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Add({T})
  href: System.Collections.Generic.ICollection`1.yml
  name: Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    href: System.Collections.Generic.ICollection`1.yml
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    href: System.Collections.Generic.ICollection`1.yml
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.ICollection{{T}}.Clear
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Clear
  href: System.Collections.Generic.ICollection`1.yml
  name: Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    fullName: System.Collections.Generic.ICollection<T>.Clear
    href: System.Collections.Generic.ICollection`1.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    fullName: System.Collections.Generic.ICollection(Of T).Clear
    href: System.Collections.Generic.ICollection`1.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.Generic.ICollection{{T}}.Contains({T})
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Contains({T})
  href: System.Collections.Generic.ICollection`1.yml
  name: Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
    href: System.Collections.Generic.ICollection`1.yml
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
    href: System.Collections.Generic.ICollection`1.yml
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.ICollection{{T}}.CopyTo({T}[],System.Int32)
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.CopyTo({T}[],System.Int32)
  href: System.Collections.Generic.ICollection`1.yml
  name: CopyTo(T[], Int32)
  name.vb: CopyTo(T(), Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
    href: System.Collections.Generic.ICollection`1.yml
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    href: System.Int32.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
    href: System.Collections.Generic.ICollection`1.yml
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    href: System.Int32.yml
  - name: )
    fullName: )
- uid: System.Collections.Generic.ICollection{{T}}.Remove({T})
  parent: System.Collections.Generic.ICollection{{T}}
  definition: System.Collections.Generic.ICollection`1.Remove({T})
  href: System.Collections.Generic.ICollection`1.yml
  name: Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    href: System.Collections.Generic.ICollection`1.yml
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    href: System.Collections.Generic.ICollection`1.yml
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{T}}.GetEnumerator
  parent: System.Collections.Generic.IEnumerable{{T}}
  definition: System.Collections.Generic.IEnumerable`1.GetEnumerator
  href: System.Collections.Generic.IEnumerable`1.yml
  name: GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Count
  parent: System.Collections.Generic.ICollection`1
  isExternal: false
  href: System.Collections.Generic.ICollection`1.yml
  name: Count
  fullName: System.Collections.Generic.ICollection<T>.Count
  fullName.vb: System.Collections.Generic.ICollection(Of T).Count
- uid: System.Collections.Generic.ICollection{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: System.Collections.Generic.ICollection`1.yml
  name: ICollection<T>
  name.vb: ICollection(Of T)
  fullName: System.Collections.Generic.ICollection<T>
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    href: System.Collections.Generic.ICollection`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    href: System.Collections.Generic.ICollection`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.IsReadOnly
  parent: System.Collections.Generic.ICollection`1
  isExternal: false
  href: System.Collections.Generic.ICollection`1.yml
  name: IsReadOnly
  fullName: System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.Generic.ICollection(Of T).IsReadOnly
- uid: System.Collections.Generic.ICollection`1.Add({T})
  parent: System.Collections.Generic.ICollection`1
  isExternal: false
  href: System.Collections.Generic.ICollection`1.yml
  name: Add(T)
  fullName: System.Collections.Generic.ICollection<T>.Add(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Add(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    fullName: System.Collections.Generic.ICollection<T>.Add
    href: System.Collections.Generic.ICollection`1.yml
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Add(`0)
    name: Add
    fullName: System.Collections.Generic.ICollection(Of T).Add
    href: System.Collections.Generic.ICollection`1.yml
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Clear
  parent: System.Collections.Generic.ICollection`1
  isExternal: false
  href: System.Collections.Generic.ICollection`1.yml
  name: Clear()
  fullName: System.Collections.Generic.ICollection<T>.Clear()
  fullName.vb: System.Collections.Generic.ICollection(Of T).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    fullName: System.Collections.Generic.ICollection<T>.Clear
    href: System.Collections.Generic.ICollection`1.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Clear
    name: Clear
    fullName: System.Collections.Generic.ICollection(Of T).Clear
    href: System.Collections.Generic.ICollection`1.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Contains({T})
  parent: System.Collections.Generic.ICollection`1
  isExternal: false
  href: System.Collections.Generic.ICollection`1.yml
  name: Contains(T)
  fullName: System.Collections.Generic.ICollection<T>.Contains(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Contains(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    fullName: System.Collections.Generic.ICollection<T>.Contains
    href: System.Collections.Generic.ICollection`1.yml
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Contains(`0)
    name: Contains
    fullName: System.Collections.Generic.ICollection(Of T).Contains
    href: System.Collections.Generic.ICollection`1.yml
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.CopyTo({T}[],System.Int32)
  parent: System.Collections.Generic.ICollection`1
  isExternal: false
  href: System.Collections.Generic.ICollection`1.yml
  name: CopyTo(T[], Int32)
  name.vb: CopyTo(T(), Int32)
  fullName: System.Collections.Generic.ICollection<T>.CopyTo(T[], System.Int32)
  fullName.vb: System.Collections.Generic.ICollection(Of T).CopyTo(T(), System.Int32)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    fullName: System.Collections.Generic.ICollection<T>.CopyTo
    href: System.Collections.Generic.ICollection`1.yml
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: '[]'
    fullName: '[]'
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    href: System.Int32.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)
    name: CopyTo
    fullName: System.Collections.Generic.ICollection(Of T).CopyTo
    href: System.Collections.Generic.ICollection`1.yml
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: ()
    fullName: ()
  - name: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    fullName: System.Int32
    href: System.Int32.yml
  - name: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1.Remove({T})
  parent: System.Collections.Generic.ICollection`1
  isExternal: false
  href: System.Collections.Generic.ICollection`1.yml
  name: Remove(T)
  fullName: System.Collections.Generic.ICollection<T>.Remove(T)
  fullName.vb: System.Collections.Generic.ICollection(Of T).Remove(T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    fullName: System.Collections.Generic.ICollection<T>.Remove
    href: System.Collections.Generic.ICollection`1.yml
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1.Remove(`0)
    name: Remove
    fullName: System.Collections.Generic.ICollection(Of T).Remove
    href: System.Collections.Generic.ICollection`1.yml
  - name: (
    fullName: (
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
  parent: System.Collections.Generic.IEnumerable`1
  isExternal: false
  href: System.Collections.Generic.IEnumerable`1.yml
  name: GetEnumerator()
  fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName.vb: System.Collections.Generic.IEnumerable(Of T).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable<T>.GetEnumerator
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1.GetEnumerator
    name: GetEnumerator
    fullName: System.Collections.Generic.IEnumerable(Of T).GetEnumerator
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: System.Collections.Generic.IEnumerable`1.yml
  name: IEnumerable<T>
  name.vb: IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  parent: System.Collections.Generic
  isExternal: false
  href: System.Collections.Generic.ICollection`1.yml
  name: ICollection<T>
  name.vb: ICollection(Of T)
  fullName: System.Collections.Generic.ICollection<T>
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  type: Interface
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    href: System.Collections.Generic.ICollection`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    fullName: System.Collections.Generic.ICollection
    href: System.Collections.Generic.ICollection`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  href: System.Collections.Generic.IEnumerable`1.yml
  name: IEnumerable<T>
  name.vb: IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  type: Interface
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
  type: Struct
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
