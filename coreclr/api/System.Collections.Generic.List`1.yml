items:
- uid: System.Collections.Generic.List`1
  id: List`1
  parent: System.Collections.Generic
  children:
  - System.Collections.Generic.List`1.#ctor
  - System.Collections.Generic.List`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Generic.List`1.#ctor(System.Int32)
  - System.Collections.Generic.List`1.Add(`0)
  - System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Generic.List`1.AsReadOnly
  - System.Collections.Generic.List`1.BinarySearch(`0)
  - System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  - System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
  - System.Collections.Generic.List`1.Capacity
  - System.Collections.Generic.List`1.Clear
  - System.Collections.Generic.List`1.Contains(`0)
  - System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
  - System.Collections.Generic.List`1.CopyTo(`0[])
  - System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
  - System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  - System.Collections.Generic.List`1.Count
  - System.Collections.Generic.List`1.Exists(System.Predicate{`0})
  - System.Collections.Generic.List`1.Find(System.Predicate{`0})
  - System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
  - System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  - System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
  - System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
  - System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
  - System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  - System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
  - System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
  - System.Collections.Generic.List`1.ForEach(System.Action{`0})
  - System.Collections.Generic.List`1.GetEnumerator
  - System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
  - System.Collections.Generic.List`1.IndexOf(`0)
  - System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
  - System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
  - System.Collections.Generic.List`1.Insert(System.Int32,`0)
  - System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  - System.Collections.Generic.List`1.Item(System.Int32)
  - System.Collections.Generic.List`1.LastIndexOf(`0)
  - System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
  - System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
  - System.Collections.Generic.List`1.Remove(`0)
  - System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
  - System.Collections.Generic.List`1.RemoveAt(System.Int32)
  - System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
  - System.Collections.Generic.List`1.Reverse
  - System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
  - System.Collections.Generic.List`1.Sort
  - System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
  - System.Collections.Generic.List`1.Sort(System.Comparison{`0})
  - System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  - System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  - System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  - System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized
  - System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot
  - System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
  - System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
  - System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
  - System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize
  - System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly
  - System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
  - System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
  - System.Collections.Generic.List`1.ToArray
  - System.Collections.Generic.List`1.TrimExcess
  - System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
  href: System.Collections.Generic.List`1.yml
  name: List<T>
  name.vb: List(Of T)
  fullName: System.Collections.Generic.List<T>
  fullName.vb: System.Collections.Generic.List(Of T)
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Collections/Generic/List.cs
      branch: master
      repo: https://github.com/chenkennt/coreclr.git
      key: 6c42ef8d
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 29
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: 'public class List<T> : IList<T>, ICollection<T>, IList, ICollection, IReadOnlyList<T>, IReadOnlyCollection<T>, IEnumerable<T>, IEnumerable'
    content.vb: Public Class List(Of T) Implements IList(Of T), ICollection(Of T), IList, ICollection, IReadOnlyList(Of T), IReadOnlyCollection(Of T), IEnumerable(Of T), IEnumerable
    typeParameters:
    - id: T
  inheritance:
  - System.Object
  implements:
  - System.Collections.Generic.IList{{T}}
  - System.Collections.Generic.ICollection{{T}}
  - System.Collections.IList
  - System.Collections.ICollection
  - System.Collections.Generic.IReadOnlyList{{T}}
  - System.Collections.Generic.IReadOnlyCollection{{T}}
  - System.Collections.Generic.IEnumerable{{T}}
  - System.Collections.IEnumerable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Collections.Generic.List`1.#ctor
  id: '#ctor'
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: List()
  fullName: System.Collections.Generic.List<T>.List()
  fullName.vb: System.Collections.Generic.List(Of T).List()
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 48
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public List()
    content.vb: Public Sub New
- uid: System.Collections.Generic.List`1.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: List(Int32)
  fullName: System.Collections.Generic.List<T>.List(System.Int32)
  fullName.vb: System.Collections.Generic.List(Of T).List(System.Int32)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 56
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public List(int capacity)
    content.vb: Public Sub New(capacity As Integer)
    parameters:
    - id: capacity
      type: System.Int32
- uid: System.Collections.Generic.List`1.#ctor(System.Collections.Generic.IEnumerable{`0})
  id: '#ctor(System.Collections.Generic.IEnumerable{`0})'
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: List(IEnumerable<T>)
  name.vb: List(IEnumerable(Of T))
  fullName: System.Collections.Generic.List<T>.List(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: System.Collections.Generic.List(Of T).List(System.Collections.Generic.IEnumerable(Of T))
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 70
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public List(IEnumerable<T> collection)
    content.vb: Public Sub New(collection As IEnumerable(Of T))
    parameters:
    - id: collection
      type: System.Collections.Generic.IEnumerable{{T}}
- uid: System.Collections.Generic.List`1.Capacity
  id: Capacity
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: Capacity
  fullName: System.Collections.Generic.List<T>.Capacity
  fullName.vb: System.Collections.Generic.List(Of T).Capacity
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 106
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public int Capacity { get; set; }
    content.vb: Public Property Capacity As Integer
    parameters: []
    return:
      type: System.Int32
      description: 
- uid: System.Collections.Generic.List`1.Count
  id: Count
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: Count
  fullName: System.Collections.Generic.List<T>.Count
  fullName.vb: System.Collections.Generic.List(Of T).Count
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 133
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public int Count { get; }
    content.vb: Public ReadOnly Property Count As Integer
    parameters: []
    return:
      type: System.Int32
      description: 
- uid: System.Collections.Generic.List`1.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: IList.IsFixedSize
  name.vb: System.Collections.IList.IsFixedSize
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.IsFixedSize
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.IsFixedSize
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 140
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: bool IList.IsFixedSize { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IList.IsFixedSize As Boolean Implements IList.IsFixedSize
    parameters: []
    return:
      type: System.Boolean
      description: 
- uid: System.Collections.Generic.List`1.System#Collections#Generic#ICollection{T}#IsReadOnly
  id: System#Collections#Generic#ICollection{T}#IsReadOnly
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: ICollection<T>.IsReadOnly
  name.vb: System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName: System.Collections.Generic.List<T>.System.Collections.Generic.ICollection<T>.IsReadOnly
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.Generic.ICollection<T>.IsReadOnly
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 146
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: bool ICollection<T>.IsReadOnly { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.Generic.ICollection<T>.IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly
    parameters: []
    return:
      type: System.Boolean
      description: 
- uid: System.Collections.Generic.List`1.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: IList.IsReadOnly
  name.vb: System.Collections.IList.IsReadOnly
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.IsReadOnly
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.IsReadOnly
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 150
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: bool IList.IsReadOnly { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IList.IsReadOnly As Boolean Implements IList.IsReadOnly
    parameters: []
    return:
      type: System.Boolean
      description: 
- uid: System.Collections.Generic.List`1.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: ICollection.IsSynchronized
  name.vb: System.Collections.ICollection.IsSynchronized
  fullName: System.Collections.Generic.List<T>.System.Collections.ICollection.IsSynchronized
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.ICollection.IsSynchronized
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 155
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: bool ICollection.IsSynchronized { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.IsSynchronized As Boolean Implements ICollection.IsSynchronized
    parameters: []
    return:
      type: System.Boolean
      description: 
- uid: System.Collections.Generic.List`1.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: ICollection.SyncRoot
  name.vb: System.Collections.ICollection.SyncRoot
  fullName: System.Collections.Generic.List<T>.System.Collections.ICollection.SyncRoot
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.ICollection.SyncRoot
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 160
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: object ICollection.SyncRoot { get; }
    content.vb: ReadOnly WriteOnly Property System.Collections.ICollection.SyncRoot As Object Implements ICollection.SyncRoot
    parameters: []
    return:
      type: System.Object
      description: 
- uid: System.Collections.Generic.List`1.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: Item[Int32]
  name.vb: Item(Int32)
  fullName: System.Collections.Generic.List<T>.Item[System.Int32]
  fullName.vb: System.Collections.Generic.List(Of T).Item(System.Int32)
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 170
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public T this[int index] { get; set; }
    content.vb: Public Property Item(index As Integer) As T
    parameters:
    - id: index
      type: System.Int32
    return:
      type: '{T}'
      description: 
- uid: System.Collections.Generic.List`1.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: IList.Item[Int32]
  name.vb: System.Collections.IList.Item(Int32)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Item[System.Int32]
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Item(System.Int32)
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 196
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: object IList.this[int index] { get; set; }
    content.vb: ReadOnly WriteOnly Property System.Collections.IList.Item(index As Integer) As Object Implements IList.this
    parameters:
    - id: index
      type: System.Int32
    return:
      type: System.Object
      description: 
- uid: System.Collections.Generic.List`1.Add(`0)
  id: Add(`0)
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: Add(T)
  fullName: System.Collections.Generic.List<T>.Add(T)
  fullName.vb: System.Collections.Generic.List(Of T).Add(T)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 216
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public void Add(T item)
    content.vb: Public Sub Add(item As T)
    parameters:
    - id: item
      type: '{T}'
- uid: System.Collections.Generic.List`1.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: IList.Add(Object)
  name.vb: System.Collections.IList.Add(Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Add(System.Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Add(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 222
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: int IList.Add(object item)
    content.vb: Function System.Collections.IList.Add(item As Object) As Integer Implements IList.Add
    parameters:
    - id: item
      type: System.Object
    return:
      type: System.Int32
      description: 
- uid: System.Collections.Generic.List`1.AddRange(System.Collections.Generic.IEnumerable{`0})
  id: AddRange(System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: AddRange(IEnumerable<T>)
  name.vb: AddRange(IEnumerable(Of T))
  fullName: System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)
  fullName.vb: System.Collections.Generic.List(Of T).AddRange(System.Collections.Generic.IEnumerable(Of T))
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 241
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public void AddRange(IEnumerable<T> collection)
    content.vb: Public Sub AddRange(collection As IEnumerable(Of T))
    parameters:
    - id: collection
      type: System.Collections.Generic.IEnumerable{{T}}
- uid: System.Collections.Generic.List`1.AsReadOnly
  id: AsReadOnly
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: AsReadOnly()
  fullName: System.Collections.Generic.List<T>.AsReadOnly()
  fullName.vb: System.Collections.Generic.List(Of T).AsReadOnly()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 247
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public ReadOnlyCollection<T> AsReadOnly()
    content.vb: Public Function AsReadOnly As ReadOnlyCollection(Of T)
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
      description: 
- uid: System.Collections.Generic.List`1.BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
  id: BinarySearch(System.Int32,System.Int32,`0,System.Collections.Generic.IComparer{`0})
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: BinarySearch(Int32, Int32, T, IComparer<T>)
  name.vb: BinarySearch(Int32, Int32, T, IComparer(Of T))
  fullName: System.Collections.Generic.List<T>.BinarySearch(System.Int32, System.Int32, T, System.Collections.Generic.IComparer<T>)
  fullName.vb: System.Collections.Generic.List(Of T).BinarySearch(System.Int32, System.Int32, T, System.Collections.Generic.IComparer(Of T))
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 272
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public int BinarySearch(int index, int count, T item, IComparer<T> comparer)
    content.vb: Public Function BinarySearch(index As Integer, count As Integer, item As T, comparer As IComparer(Of T)) As Integer
    parameters:
    - id: index
      type: System.Int32
    - id: count
      type: System.Int32
    - id: item
      type: '{T}'
    - id: comparer
      type: System.Collections.Generic.IComparer{{T}}
    return:
      type: System.Int32
      description: 
- uid: System.Collections.Generic.List`1.BinarySearch(`0)
  id: BinarySearch(`0)
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: BinarySearch(T)
  fullName: System.Collections.Generic.List<T>.BinarySearch(T)
  fullName.vb: System.Collections.Generic.List(Of T).BinarySearch(T)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 285
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public int BinarySearch(T item)
    content.vb: Public Function BinarySearch(item As T) As Integer
    parameters:
    - id: item
      type: '{T}'
    return:
      type: System.Int32
      description: 
- uid: System.Collections.Generic.List`1.BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  id: BinarySearch(`0,System.Collections.Generic.IComparer{`0})
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: BinarySearch(T, IComparer<T>)
  name.vb: BinarySearch(T, IComparer(Of T))
  fullName: System.Collections.Generic.List<T>.BinarySearch(T, System.Collections.Generic.IComparer<T>)
  fullName.vb: System.Collections.Generic.List(Of T).BinarySearch(T, System.Collections.Generic.IComparer(Of T))
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 291
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public int BinarySearch(T item, IComparer<T> comparer)
    content.vb: Public Function BinarySearch(item As T, comparer As IComparer(Of T)) As Integer
    parameters:
    - id: item
      type: '{T}'
    - id: comparer
      type: System.Collections.Generic.IComparer{{T}}
    return:
      type: System.Int32
      description: 
- uid: System.Collections.Generic.List`1.Clear
  id: Clear
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: Clear()
  fullName: System.Collections.Generic.List<T>.Clear()
  fullName.vb: System.Collections.Generic.List(Of T).Clear()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 299
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public void Clear()
    content.vb: Public Sub Clear
- uid: System.Collections.Generic.List`1.Contains(`0)
  id: Contains(`0)
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: Contains(T)
  fullName: System.Collections.Generic.List<T>.Contains(T)
  fullName.vb: System.Collections.Generic.List(Of T).Contains(T)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 312
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public bool Contains(T item)
    content.vb: Public Function Contains(item As T) As Boolean
    parameters:
    - id: item
      type: '{T}'
    return:
      type: System.Boolean
      description: 
- uid: System.Collections.Generic.List`1.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: IList.Contains(Object)
  name.vb: System.Collections.IList.Contains(Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Contains(System.Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Contains(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 328
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: bool IList.Contains(object item)
    content.vb: Function System.Collections.IList.Contains(item As Object) As Boolean Implements IList.Contains
    parameters:
    - id: item
      type: System.Object
    return:
      type: System.Boolean
      description: 
- uid: System.Collections.Generic.List`1.ConvertAll``1(System.Converter{`0,``0})
  id: ConvertAll``1(System.Converter{`0,``0})
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: ConvertAll<TOutput>(Converter<T, TOutput>)
  name.vb: ConvertAll(Of TOutput)(Converter(Of T, TOutput))
  fullName: System.Collections.Generic.List<T>.ConvertAll<TOutput>(System.Converter<T, TOutput>)
  fullName.vb: System.Collections.Generic.List(Of T).ConvertAll(Of TOutput)(System.Converter(Of T, TOutput))
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 336
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public List<TOutput> ConvertAll<TOutput>(Converter<T, TOutput> converter)
    content.vb: Public Function ConvertAll(Of TOutput)(converter As Converter(Of T, TOutput)) As List(Of TOutput)
    parameters:
    - id: converter
      type: System.Converter{{T},{TOutput}}
    typeParameters:
    - id: TOutput
    return:
      type: System.Collections.Generic.List{{TOutput}}
      description: 
- uid: System.Collections.Generic.List`1.CopyTo(`0[])
  id: CopyTo(`0[])
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: CopyTo(T[])
  name.vb: CopyTo(T())
  fullName: System.Collections.Generic.List<T>.CopyTo(T[])
  fullName.vb: System.Collections.Generic.List(Of T).CopyTo(T())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 354
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public void CopyTo(T[] array)
    content.vb: Public Sub CopyTo(array As T())
    parameters:
    - id: array
      type: '{T}[]'
- uid: System.Collections.Generic.List`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: ICollection.CopyTo(Array, Int32)
  name.vb: System.Collections.ICollection.CopyTo(Array, Int32)
  fullName: System.Collections.Generic.List<T>.System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.ICollection.CopyTo(System.Array, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 361
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: void ICollection.CopyTo(Array array, int arrayIndex)
    content.vb: Sub System.Collections.ICollection.CopyTo(array As Array, arrayIndex As Integer) Implements ICollection.CopyTo
    parameters:
    - id: array
      type: System.Array
    - id: arrayIndex
      type: System.Int32
- uid: System.Collections.Generic.List`1.CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  id: CopyTo(System.Int32,`0[],System.Int32,System.Int32)
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: CopyTo(Int32, T[], Int32, Int32)
  name.vb: CopyTo(Int32, T(), Int32, Int32)
  fullName: System.Collections.Generic.List<T>.CopyTo(System.Int32, T[], System.Int32, System.Int32)
  fullName.vb: System.Collections.Generic.List(Of T).CopyTo(System.Int32, T(), System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 380
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public void CopyTo(int index, T[] array, int arrayIndex, int count)
    content.vb: Public Sub CopyTo(index As Integer, array As T(), arrayIndex As Integer, count As Integer)
    parameters:
    - id: index
      type: System.Int32
    - id: array
      type: '{T}[]'
    - id: arrayIndex
      type: System.Int32
    - id: count
      type: System.Int32
- uid: System.Collections.Generic.List`1.CopyTo(`0[],System.Int32)
  id: CopyTo(`0[],System.Int32)
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: CopyTo(T[], Int32)
  name.vb: CopyTo(T(), Int32)
  fullName: System.Collections.Generic.List<T>.CopyTo(T[], System.Int32)
  fullName.vb: System.Collections.Generic.List(Of T).CopyTo(T(), System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 390
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public void CopyTo(T[] array, int arrayIndex)
    content.vb: Public Sub CopyTo(array As T(), arrayIndex As Integer)
    parameters:
    - id: array
      type: '{T}[]'
    - id: arrayIndex
      type: System.Int32
- uid: System.Collections.Generic.List`1.Exists(System.Predicate{`0})
  id: Exists(System.Predicate{`0})
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: Exists(Predicate<T>)
  name.vb: Exists(Predicate(Of T))
  fullName: System.Collections.Generic.List<T>.Exists(System.Predicate<T>)
  fullName.vb: System.Collections.Generic.List(Of T).Exists(System.Predicate(Of T))
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 410
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public bool Exists(Predicate<T> match)
    content.vb: Public Function Exists(match As Predicate(Of T)) As Boolean
    parameters:
    - id: match
      type: System.Predicate{{T}}
    return:
      type: System.Boolean
      description: 
- uid: System.Collections.Generic.List`1.Find(System.Predicate{`0})
  id: Find(System.Predicate{`0})
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: Find(Predicate<T>)
  name.vb: Find(Predicate(Of T))
  fullName: System.Collections.Generic.List<T>.Find(System.Predicate<T>)
  fullName.vb: System.Collections.Generic.List(Of T).Find(System.Predicate(Of T))
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 414
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public T Find(Predicate<T> match)
    content.vb: Public Function Find(match As Predicate(Of T)) As T
    parameters:
    - id: match
      type: System.Predicate{{T}}
    return:
      type: '{T}'
      description: 
- uid: System.Collections.Generic.List`1.FindAll(System.Predicate{`0})
  id: FindAll(System.Predicate{`0})
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: FindAll(Predicate<T>)
  name.vb: FindAll(Predicate(Of T))
  fullName: System.Collections.Generic.List<T>.FindAll(System.Predicate<T>)
  fullName.vb: System.Collections.Generic.List(Of T).FindAll(System.Predicate(Of T))
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 428
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public List<T> FindAll(Predicate<T> match)
    content.vb: Public Function FindAll(match As Predicate(Of T)) As List(Of T)
    parameters:
    - id: match
      type: System.Predicate{{T}}
    return:
      type: System.Collections.Generic.List`1
      description: 
- uid: System.Collections.Generic.List`1.FindIndex(System.Predicate{`0})
  id: FindIndex(System.Predicate{`0})
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: FindIndex(Predicate<T>)
  name.vb: FindIndex(Predicate(Of T))
  fullName: System.Collections.Generic.List<T>.FindIndex(System.Predicate<T>)
  fullName.vb: System.Collections.Generic.List(Of T).FindIndex(System.Predicate(Of T))
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 443
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public int FindIndex(Predicate<T> match)
    content.vb: Public Function FindIndex(match As Predicate(Of T)) As Integer
    parameters:
    - id: match
      type: System.Predicate{{T}}
    return:
      type: System.Int32
      description: 
- uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Predicate{`0})
  id: FindIndex(System.Int32,System.Predicate{`0})
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: FindIndex(Int32, Predicate<T>)
  name.vb: FindIndex(Int32, Predicate(Of T))
  fullName: System.Collections.Generic.List<T>.FindIndex(System.Int32, System.Predicate<T>)
  fullName.vb: System.Collections.Generic.List(Of T).FindIndex(System.Int32, System.Predicate(Of T))
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 449
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public int FindIndex(int startIndex, Predicate<T> match)
    content.vb: Public Function FindIndex(startIndex As Integer, match As Predicate(Of T)) As Integer
    parameters:
    - id: startIndex
      type: System.Int32
    - id: match
      type: System.Predicate{{T}}
    return:
      type: System.Int32
      description: 
- uid: System.Collections.Generic.List`1.FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  id: FindIndex(System.Int32,System.Int32,System.Predicate{`0})
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: FindIndex(Int32, Int32, Predicate<T>)
  name.vb: FindIndex(Int32, Int32, Predicate(Of T))
  fullName: System.Collections.Generic.List<T>.FindIndex(System.Int32, System.Int32, System.Predicate<T>)
  fullName.vb: System.Collections.Generic.List(Of T).FindIndex(System.Int32, System.Int32, System.Predicate(Of T))
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 455
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public int FindIndex(int startIndex, int count, Predicate<T> match)
    content.vb: Public Function FindIndex(startIndex As Integer, count As Integer, match As Predicate(Of T)) As Integer
    parameters:
    - id: startIndex
      type: System.Int32
    - id: count
      type: System.Int32
    - id: match
      type: System.Predicate{{T}}
    return:
      type: System.Int32
      description: 
- uid: System.Collections.Generic.List`1.FindLast(System.Predicate{`0})
  id: FindLast(System.Predicate{`0})
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: FindLast(Predicate<T>)
  name.vb: FindLast(Predicate(Of T))
  fullName: System.Collections.Generic.List<T>.FindLast(System.Predicate<T>)
  fullName.vb: System.Collections.Generic.List(Of T).FindLast(System.Predicate(Of T))
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 478
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public T FindLast(Predicate<T> match)
    content.vb: Public Function FindLast(match As Predicate(Of T)) As T
    parameters:
    - id: match
      type: System.Predicate{{T}}
    return:
      type: '{T}'
      description: 
- uid: System.Collections.Generic.List`1.FindLastIndex(System.Predicate{`0})
  id: FindLastIndex(System.Predicate{`0})
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: FindLastIndex(Predicate<T>)
  name.vb: FindLastIndex(Predicate(Of T))
  fullName: System.Collections.Generic.List<T>.FindLastIndex(System.Predicate<T>)
  fullName.vb: System.Collections.Generic.List(Of T).FindLastIndex(System.Predicate(Of T))
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 492
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public int FindLastIndex(Predicate<T> match)
    content.vb: Public Function FindLastIndex(match As Predicate(Of T)) As Integer
    parameters:
    - id: match
      type: System.Predicate{{T}}
    return:
      type: System.Int32
      description: 
- uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Predicate{`0})
  id: FindLastIndex(System.Int32,System.Predicate{`0})
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: FindLastIndex(Int32, Predicate<T>)
  name.vb: FindLastIndex(Int32, Predicate(Of T))
  fullName: System.Collections.Generic.List<T>.FindLastIndex(System.Int32, System.Predicate<T>)
  fullName.vb: System.Collections.Generic.List(Of T).FindLastIndex(System.Int32, System.Predicate(Of T))
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 498
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public int FindLastIndex(int startIndex, Predicate<T> match)
    content.vb: Public Function FindLastIndex(startIndex As Integer, match As Predicate(Of T)) As Integer
    parameters:
    - id: startIndex
      type: System.Int32
    - id: match
      type: System.Predicate{{T}}
    return:
      type: System.Int32
      description: 
- uid: System.Collections.Generic.List`1.FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  id: FindLastIndex(System.Int32,System.Int32,System.Predicate{`0})
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: FindLastIndex(Int32, Int32, Predicate<T>)
  name.vb: FindLastIndex(Int32, Int32, Predicate(Of T))
  fullName: System.Collections.Generic.List<T>.FindLastIndex(System.Int32, System.Int32, System.Predicate<T>)
  fullName.vb: System.Collections.Generic.List(Of T).FindLastIndex(System.Int32, System.Int32, System.Predicate(Of T))
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 504
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public int FindLastIndex(int startIndex, int count, Predicate<T> match)
    content.vb: Public Function FindLastIndex(startIndex As Integer, count As Integer, match As Predicate(Of T)) As Integer
    parameters:
    - id: startIndex
      type: System.Int32
    - id: count
      type: System.Int32
    - id: match
      type: System.Predicate{{T}}
    return:
      type: System.Int32
      description: 
- uid: System.Collections.Generic.List`1.ForEach(System.Action{`0})
  id: ForEach(System.Action{`0})
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: ForEach(Action<T>)
  name.vb: ForEach(Action(Of T))
  fullName: System.Collections.Generic.List<T>.ForEach(System.Action<T>)
  fullName.vb: System.Collections.Generic.List(Of T).ForEach(System.Action(Of T))
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 539
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public void ForEach(Action<T> action)
    content.vb: Public Sub ForEach(action As Action(Of T))
    parameters:
    - id: action
      type: System.Action{{T}}
- uid: System.Collections.Generic.List`1.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: GetEnumerator()
  fullName: System.Collections.Generic.List<T>.GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of T).GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 563
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public List<T>.Enumerator GetEnumerator()
    content.vb: Public Function GetEnumerator As List(Of T).Enumerator
    return:
      type: System.Collections.Generic.List`1.Enumerator
      description: 
- uid: System.Collections.Generic.List`1.System#Collections#Generic#IEnumerable{T}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{T}#GetEnumerator
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: IEnumerable<T>.GetEnumerator()
  name.vb: System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName: System.Collections.Generic.List<T>.System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.Generic.IEnumerable<T>.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 568
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: IEnumerator<T> IEnumerable<T>.GetEnumerator()
    content.vb: Function System.Collections.Generic.IEnumerable<T>.GetEnumerator As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator
    return:
      type: System.Collections.Generic.IEnumerator{{T}}
- uid: System.Collections.Generic.List`1.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: IEnumerable.GetEnumerator()
  name.vb: System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.Generic.List<T>.System.Collections.IEnumerable.GetEnumerator()
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IEnumerable.GetEnumerator()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 572
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: IEnumerator IEnumerable.GetEnumerator()
    content.vb: Function System.Collections.IEnumerable.GetEnumerator As IEnumerator Implements IEnumerable.GetEnumerator
    return:
      type: System.Collections.IEnumerator
      description: 
- uid: System.Collections.Generic.List`1.GetRange(System.Int32,System.Int32)
  id: GetRange(System.Int32,System.Int32)
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: GetRange(Int32, Int32)
  fullName: System.Collections.Generic.List<T>.GetRange(System.Int32, System.Int32)
  fullName.vb: System.Collections.Generic.List(Of T).GetRange(System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 576
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public List<T> GetRange(int index, int count)
    content.vb: Public Function GetRange(index As Integer, count As Integer) As List(Of T)
    parameters:
    - id: index
      type: System.Int32
    - id: count
      type: System.Int32
    return:
      type: System.Collections.Generic.List`1
      description: 
- uid: System.Collections.Generic.List`1.IndexOf(`0)
  id: IndexOf(`0)
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: IndexOf(T)
  fullName: System.Collections.Generic.List<T>.IndexOf(T)
  fullName.vb: System.Collections.Generic.List(Of T).IndexOf(T)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 606
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public int IndexOf(T item)
    content.vb: Public Function IndexOf(item As T) As Integer
    parameters:
    - id: item
      type: '{T}'
    return:
      type: System.Int32
      description: 
- uid: System.Collections.Generic.List`1.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: IList.IndexOf(Object)
  name.vb: System.Collections.IList.IndexOf(Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.IndexOf(System.Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.IndexOf(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 612
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: int IList.IndexOf(object item)
    content.vb: Function System.Collections.IList.IndexOf(item As Object) As Integer Implements IList.IndexOf
    parameters:
    - id: item
      type: System.Object
    return:
      type: System.Int32
      description: 
- uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32)
  id: IndexOf(`0,System.Int32)
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: IndexOf(T, Int32)
  fullName: System.Collections.Generic.List<T>.IndexOf(T, System.Int32)
  fullName.vb: System.Collections.Generic.List(Of T).IndexOf(T, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 629
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public int IndexOf(T item, int index)
    content.vb: Public Function IndexOf(item As T, index As Integer) As Integer
    parameters:
    - id: item
      type: '{T}'
    - id: index
      type: System.Int32
    return:
      type: System.Int32
      description: 
- uid: System.Collections.Generic.List`1.IndexOf(`0,System.Int32,System.Int32)
  id: IndexOf(`0,System.Int32,System.Int32)
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: IndexOf(T, Int32, Int32)
  fullName: System.Collections.Generic.List<T>.IndexOf(T, System.Int32, System.Int32)
  fullName.vb: System.Collections.Generic.List(Of T).IndexOf(T, System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 647
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public int IndexOf(T item, int index, int count)
    content.vb: Public Function IndexOf(item As T, index As Integer, count As Integer) As Integer
    parameters:
    - id: item
      type: '{T}'
    - id: index
      type: System.Int32
    - id: count
      type: System.Int32
    return:
      type: System.Int32
      description: 
- uid: System.Collections.Generic.List`1.Insert(System.Int32,`0)
  id: Insert(System.Int32,`0)
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: Insert(Int32, T)
  fullName: System.Collections.Generic.List<T>.Insert(System.Int32, T)
  fullName.vb: System.Collections.Generic.List(Of T).Insert(System.Int32, T)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 663
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public void Insert(int index, T item)
    content.vb: Public Sub Insert(index As Integer, item As T)
    parameters:
    - id: index
      type: System.Int32
    - id: item
      type: '{T}'
- uid: System.Collections.Generic.List`1.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: IList.Insert(Int32, Object)
  name.vb: System.Collections.IList.Insert(Int32, Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Insert(System.Int32, System.Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Insert(System.Int32, System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 678
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: void IList.Insert(int index, object item)
    content.vb: Sub System.Collections.IList.Insert(index As Integer, item As Object) Implements IList.Insert
    parameters:
    - id: index
      type: System.Int32
    - id: item
      type: System.Object
- uid: System.Collections.Generic.List`1.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  id: InsertRange(System.Int32,System.Collections.Generic.IEnumerable{`0})
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: InsertRange(Int32, IEnumerable<T>)
  name.vb: InsertRange(Int32, IEnumerable(Of T))
  fullName: System.Collections.Generic.List<T>.InsertRange(System.Int32, System.Collections.Generic.IEnumerable<T>)
  fullName.vb: System.Collections.Generic.List(Of T).InsertRange(System.Int32, System.Collections.Generic.IEnumerable(Of T))
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 695
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public void InsertRange(int index, IEnumerable<T> collection)
    content.vb: Public Sub InsertRange(index As Integer, collection As IEnumerable(Of T))
    parameters:
    - id: index
      type: System.Int32
    - id: collection
      type: System.Collections.Generic.IEnumerable{{T}}
- uid: System.Collections.Generic.List`1.LastIndexOf(`0)
  id: LastIndexOf(`0)
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: LastIndexOf(T)
  fullName: System.Collections.Generic.List<T>.LastIndexOf(T)
  fullName.vb: System.Collections.Generic.List(Of T).LastIndexOf(T)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 747
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public int LastIndexOf(T item)
    content.vb: Public Function LastIndexOf(item As T) As Integer
    parameters:
    - id: item
      type: '{T}'
    return:
      type: System.Int32
      description: 
- uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32)
  id: LastIndexOf(`0,System.Int32)
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: LastIndexOf(T, Int32)
  fullName: System.Collections.Generic.List<T>.LastIndexOf(T, System.Int32)
  fullName.vb: System.Collections.Generic.List(Of T).LastIndexOf(T, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 768
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public int LastIndexOf(T item, int index)
    content.vb: Public Function LastIndexOf(item As T, index As Integer) As Integer
    parameters:
    - id: item
      type: '{T}'
    - id: index
      type: System.Int32
    return:
      type: System.Int32
      description: 
- uid: System.Collections.Generic.List`1.LastIndexOf(`0,System.Int32,System.Int32)
  id: LastIndexOf(`0,System.Int32,System.Int32)
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: LastIndexOf(T, Int32, Int32)
  fullName: System.Collections.Generic.List<T>.LastIndexOf(T, System.Int32, System.Int32)
  fullName.vb: System.Collections.Generic.List(Of T).LastIndexOf(T, System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 787
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public int LastIndexOf(T item, int index, int count)
    content.vb: Public Function LastIndexOf(item As T, index As Integer, count As Integer) As Integer
    parameters:
    - id: item
      type: '{T}'
    - id: index
      type: System.Int32
    - id: count
      type: System.Int32
    return:
      type: System.Int32
      description: 
- uid: System.Collections.Generic.List`1.Remove(`0)
  id: Remove(`0)
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: Remove(T)
  fullName: System.Collections.Generic.List<T>.Remove(T)
  fullName.vb: System.Collections.Generic.List(Of T).Remove(T)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 817
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public bool Remove(T item)
    content.vb: Public Function Remove(item As T) As Boolean
    parameters:
    - id: item
      type: '{T}'
    return:
      type: System.Boolean
      description: 
- uid: System.Collections.Generic.List`1.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: IList.Remove(Object)
  name.vb: System.Collections.IList.Remove(Object)
  fullName: System.Collections.Generic.List<T>.System.Collections.IList.Remove(System.Object)
  fullName.vb: System.Collections.Generic.List(Of T).System.Collections.IList.Remove(System.Object)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 827
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: void IList.Remove(object item)
    content.vb: Sub System.Collections.IList.Remove(item As Object) Implements IList.Remove
    parameters:
    - id: item
      type: System.Object
- uid: System.Collections.Generic.List`1.RemoveAll(System.Predicate{`0})
  id: RemoveAll(System.Predicate{`0})
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: RemoveAll(Predicate<T>)
  name.vb: RemoveAll(Predicate(Of T))
  fullName: System.Collections.Generic.List<T>.RemoveAll(System.Predicate<T>)
  fullName.vb: System.Collections.Generic.List(Of T).RemoveAll(System.Predicate(Of T))
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 836
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public int RemoveAll(Predicate<T> match)
    content.vb: Public Function RemoveAll(match As Predicate(Of T)) As Integer
    parameters:
    - id: match
      type: System.Predicate{{T}}
    return:
      type: System.Int32
      description: 
- uid: System.Collections.Generic.List`1.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: RemoveAt(Int32)
  fullName: System.Collections.Generic.List<T>.RemoveAt(System.Int32)
  fullName.vb: System.Collections.Generic.List(Of T).RemoveAt(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 871
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public void RemoveAt(int index)
    content.vb: Public Sub RemoveAt(index As Integer)
    parameters:
    - id: index
      type: System.Int32
- uid: System.Collections.Generic.List`1.RemoveRange(System.Int32,System.Int32)
  id: RemoveRange(System.Int32,System.Int32)
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: RemoveRange(Int32, Int32)
  fullName: System.Collections.Generic.List<T>.RemoveRange(System.Int32, System.Int32)
  fullName.vb: System.Collections.Generic.List(Of T).RemoveRange(System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 886
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public void RemoveRange(int index, int count)
    content.vb: Public Sub RemoveRange(index As Integer, count As Integer)
    parameters:
    - id: index
      type: System.Int32
    - id: count
      type: System.Int32
- uid: System.Collections.Generic.List`1.Reverse
  id: Reverse
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: Reverse()
  fullName: System.Collections.Generic.List<T>.Reverse()
  fullName.vb: System.Collections.Generic.List(Of T).Reverse()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 911
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public void Reverse()
    content.vb: Public Sub Reverse
- uid: System.Collections.Generic.List`1.Reverse(System.Int32,System.Int32)
  id: Reverse(System.Int32,System.Int32)
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: Reverse(Int32, Int32)
  fullName: System.Collections.Generic.List<T>.Reverse(System.Int32, System.Int32)
  fullName.vb: System.Collections.Generic.List(Of T).Reverse(System.Int32, System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 920
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public void Reverse(int index, int count)
    content.vb: Public Sub Reverse(index As Integer, count As Integer)
    parameters:
    - id: index
      type: System.Int32
    - id: count
      type: System.Int32
- uid: System.Collections.Generic.List`1.Sort
  id: Sort
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: Sort()
  fullName: System.Collections.Generic.List<T>.Sort()
  fullName.vb: System.Collections.Generic.List(Of T).Sort()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 954
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public void Sort()
    content.vb: Public Sub Sort
- uid: System.Collections.Generic.List`1.Sort(System.Collections.Generic.IComparer{`0})
  id: Sort(System.Collections.Generic.IComparer{`0})
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: Sort(IComparer<T>)
  name.vb: Sort(IComparer(Of T))
  fullName: System.Collections.Generic.List<T>.Sort(System.Collections.Generic.IComparer<T>)
  fullName.vb: System.Collections.Generic.List(Of T).Sort(System.Collections.Generic.IComparer(Of T))
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 961
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public void Sort(IComparer<T> comparer)
    content.vb: Public Sub Sort(comparer As IComparer(Of T))
    parameters:
    - id: comparer
      type: System.Collections.Generic.IComparer{{T}}
- uid: System.Collections.Generic.List`1.Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  id: Sort(System.Int32,System.Int32,System.Collections.Generic.IComparer{`0})
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: Sort(Int32, Int32, IComparer<T>)
  name.vb: Sort(Int32, Int32, IComparer(Of T))
  fullName: System.Collections.Generic.List<T>.Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer<T>)
  fullName.vb: System.Collections.Generic.List(Of T).Sort(System.Int32, System.Int32, System.Collections.Generic.IComparer(Of T))
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 974
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public void Sort(int index, int count, IComparer<T> comparer)
    content.vb: Public Sub Sort(index As Integer, count As Integer, comparer As IComparer(Of T))
    parameters:
    - id: index
      type: System.Int32
    - id: count
      type: System.Int32
    - id: comparer
      type: System.Collections.Generic.IComparer{{T}}
- uid: System.Collections.Generic.List`1.Sort(System.Comparison{`0})
  id: Sort(System.Comparison{`0})
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: Sort(Comparison<T>)
  name.vb: Sort(Comparison(Of T))
  fullName: System.Collections.Generic.List<T>.Sort(System.Comparison<T>)
  fullName.vb: System.Collections.Generic.List(Of T).Sort(System.Comparison(Of T))
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 991
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public void Sort(Comparison<T> comparison)
    content.vb: Public Sub Sort(comparison As Comparison(Of T))
    parameters:
    - id: comparison
      type: System.Comparison{{T}}
- uid: System.Collections.Generic.List`1.ToArray
  id: ToArray
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: ToArray()
  fullName: System.Collections.Generic.List<T>.ToArray()
  fullName.vb: System.Collections.Generic.List(Of T).ToArray()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 1005
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public T[] ToArray()
    content.vb: Public Function ToArray As T()
    return:
      type: '{T}[]'
      description: 
- uid: System.Collections.Generic.List`1.TrimExcess
  id: TrimExcess
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: TrimExcess()
  fullName: System.Collections.Generic.List<T>.TrimExcess()
  fullName.vb: System.Collections.Generic.List(Of T).TrimExcess()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 1023
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public void TrimExcess()
    content.vb: Public Sub TrimExcess
- uid: System.Collections.Generic.List`1.TrueForAll(System.Predicate{`0})
  id: TrueForAll(System.Predicate{`0})
  parent: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: TrueForAll(Predicate<T>)
  name.vb: TrueForAll(Predicate(Of T))
  fullName: System.Collections.Generic.List<T>.TrueForAll(System.Predicate<T>)
  fullName.vb: System.Collections.Generic.List(Of T).TrueForAll(System.Predicate(Of T))
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Collections/Generic/List.cs
    startLine: 1030
  assemblies:
  - mscorlib
  namespace: System.Collections.Generic
  syntax:
    content: public bool TrueForAll(Predicate<T> match)
    content.vb: Public Function TrueForAll(match As Predicate(Of T)) As Boolean
    parameters:
    - id: match
      type: System.Predicate{{T}}
    return:
      type: System.Boolean
      description: 
references:
- uid: System.Collections.Generic
  isExternal: false
  name: System.Collections.Generic
  fullName: System.Collections.Generic
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
  type: Struct
- uid: System.Collections.Generic.IEnumerable{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: System.Collections.Generic.IEnumerable`1.yml
  name: IEnumerable<T>
  name.vb: IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  parent: System.Collections.Generic
  isExternal: false
  href: System.Collections.Generic.IEnumerable`1.yml
  name: IEnumerable<T>
  name.vb: IEnumerable(Of T)
  fullName: System.Collections.Generic.IEnumerable<T>
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  type: Interface
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    href: System.Collections.Generic.IEnumerable`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
  type: Struct
- uid: '{T}'
  isExternal: false
  name: T
  fullName: T
- uid: System.Collections.ObjectModel.ReadOnlyCollection{{T}}
  parent: System.Collections.ObjectModel
  definition: System.Collections.ObjectModel.ReadOnlyCollection`1
  href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  name: ReadOnlyCollection<T>
  name.vb: ReadOnlyCollection(Of T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel.ReadOnlyCollection`1
  parent: System.Collections.ObjectModel
  isExternal: false
  href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  name: ReadOnlyCollection<T>
  name.vb: ReadOnlyCollection(Of T)
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>
  fullName.vb: System.Collections.ObjectModel.ReadOnlyCollection(Of T)
  type: Class
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    fullName: System.Collections.ObjectModel.ReadOnlyCollection
    href: System.Collections.ObjectModel.ReadOnlyCollection`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.ObjectModel
  isExternal: false
  name: System.Collections.ObjectModel
  fullName: System.Collections.ObjectModel
  type: Namespace
- uid: System.Collections.Generic.IComparer{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IComparer`1
  href: System.Collections.Generic.IComparer`1.yml
  name: IComparer<T>
  name.vb: IComparer(Of T)
  fullName: System.Collections.Generic.IComparer<T>
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    href: System.Collections.Generic.IComparer`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    href: System.Collections.Generic.IComparer`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IComparer`1
  parent: System.Collections.Generic
  isExternal: false
  href: System.Collections.Generic.IComparer`1.yml
  name: IComparer<T>
  name.vb: IComparer(Of T)
  fullName: System.Collections.Generic.IComparer<T>
  fullName.vb: System.Collections.Generic.IComparer(Of T)
  type: Interface
  spec.csharp:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    href: System.Collections.Generic.IComparer`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IComparer`1
    name: IComparer
    fullName: System.Collections.Generic.IComparer
    href: System.Collections.Generic.IComparer`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Converter{{T},{TOutput}}
  parent: System
  definition: System.Converter`2
  href: System.Converter`2.yml
  name: Converter<T, TOutput>
  name.vb: Converter(Of T, TOutput)
  fullName: System.Converter<T, TOutput>
  fullName.vb: System.Converter(Of T, TOutput)
  spec.csharp:
  - uid: System.Converter`2
    name: Converter
    fullName: System.Converter
    href: System.Converter`2.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: ', '
    fullName: ', '
  - name: TOutput
    fullName: TOutput
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Converter`2
    name: Converter
    fullName: System.Converter
    href: System.Converter`2.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: ', '
    fullName: ', '
  - name: TOutput
    fullName: TOutput
  - name: )
    fullName: )
- uid: System.Collections.Generic.List{{TOutput}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: System.Collections.Generic.List`1.yml
  name: List<TOutput>
  name.vb: List(Of TOutput)
  fullName: System.Collections.Generic.List<TOutput>
  fullName.vb: System.Collections.Generic.List(Of TOutput)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    href: System.Collections.Generic.List`1.yml
  - name: <
    fullName: <
  - name: TOutput
    fullName: TOutput
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    href: System.Collections.Generic.List`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TOutput
    fullName: TOutput
  - name: )
    fullName: )
- uid: System.Converter`2
  isExternal: false
  href: System.Converter`2.yml
  name: Converter<TInput, TOutput>
  name.vb: Converter(Of TInput, TOutput)
  fullName: System.Converter<TInput, TOutput>
  fullName.vb: System.Converter(Of TInput, TOutput)
  type: Delegate
  spec.csharp:
  - uid: System.Converter`2
    name: Converter
    fullName: System.Converter
    href: System.Converter`2.yml
  - name: <
    fullName: <
  - name: TInput
    fullName: TInput
  - name: ', '
    fullName: ', '
  - name: TOutput
    fullName: TOutput
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Converter`2
    name: Converter
    fullName: System.Converter
    href: System.Converter`2.yml
  - name: '(Of '
    fullName: '(Of '
  - name: TInput
    fullName: TInput
  - name: ', '
    fullName: ', '
  - name: TOutput
    fullName: TOutput
  - name: )
    fullName: )
- uid: System.Collections.Generic.List`1
  parent: System.Collections.Generic
  isExternal: false
  href: System.Collections.Generic.List`1.yml
  name: List<T>
  name.vb: List(Of T)
  fullName: System.Collections.Generic.List<T>
  fullName.vb: System.Collections.Generic.List(Of T)
  type: Class
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    href: System.Collections.Generic.List`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    fullName: System.Collections.Generic.List
    href: System.Collections.Generic.List`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: '{T}[]'
  isExternal: false
  name: T[]
  name.vb: T()
  fullName: T[]
  fullName.vb: T()
  spec.csharp:
  - name: T
    fullName: T
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - name: T
    fullName: T
  - name: ()
    fullName: ()
- uid: System.Array
  parent: System
  isExternal: false
  href: System.Array.yml
  name: Array
  fullName: System.Array
  type: Class
- uid: System.Predicate{{T}}
  parent: System
  definition: System.Predicate`1
  href: System.Predicate`1.yml
  name: Predicate<T>
  name.vb: Predicate(Of T)
  fullName: System.Predicate<T>
  fullName.vb: System.Predicate(Of T)
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    fullName: System.Predicate
    href: System.Predicate`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    fullName: System.Predicate
    href: System.Predicate`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Predicate`1
  isExternal: false
  href: System.Predicate`1.yml
  name: Predicate<T>
  name.vb: Predicate(Of T)
  fullName: System.Predicate<T>
  fullName.vb: System.Predicate(Of T)
  type: Delegate
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    fullName: System.Predicate
    href: System.Predicate`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Predicate`1
    name: Predicate
    fullName: System.Predicate
    href: System.Predicate`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Action{{T}}
  parent: System
  definition: System.Action`1
  href: System.Action`1.yml
  name: Action<T>
  name.vb: Action(Of T)
  fullName: System.Action<T>
  fullName.vb: System.Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    href: System.Action`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    href: System.Action`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Action`1
  isExternal: false
  href: System.Action`1.yml
  name: Action<T>
  name.vb: Action(Of T)
  fullName: System.Action<T>
  fullName.vb: System.Action(Of T)
  type: Delegate
  spec.csharp:
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    href: System.Action`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    fullName: System.Action
    href: System.Action`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.List`1.Enumerator
  parent: System.Collections.Generic
  isExternal: false
  href: System.Collections.Generic.List`1.Enumerator.yml
  name: List.Enumerator<>
  name.vb: List.Enumerator(Of )
  fullName: System.Collections.Generic.List.Enumerator<>
  fullName.vb: System.Collections.Generic.List.Enumerator(Of )
  type: Struct
  spec.csharp:
  - uid: System.Collections.Generic.List`1.Enumerator
    name: List.Enumerator
    fullName: System.Collections.Generic.List.Enumerator
    href: System.Collections.Generic.List`1.Enumerator.yml
  - name: <
    fullName: <
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1.Enumerator
    name: List.Enumerator
    fullName: System.Collections.Generic.List.Enumerator
    href: System.Collections.Generic.List`1.Enumerator.yml
  - name: '(Of '
    fullName: '(Of '
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator{{T}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerator`1
  href: System.Collections.Generic.IEnumerator`1.yml
  name: IEnumerator<T>
  name.vb: IEnumerator(Of T)
  fullName: System.Collections.Generic.IEnumerator<T>
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    href: System.Collections.Generic.IEnumerator`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    href: System.Collections.Generic.IEnumerator`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.Generic.IEnumerator`1
  parent: System.Collections.Generic
  isExternal: false
  href: System.Collections.Generic.IEnumerator`1.yml
  name: IEnumerator<T>
  name.vb: IEnumerator(Of T)
  fullName: System.Collections.Generic.IEnumerator<T>
  fullName.vb: System.Collections.Generic.IEnumerator(Of T)
  type: Interface
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    href: System.Collections.Generic.IEnumerator`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    fullName: System.Collections.Generic.IEnumerator
    href: System.Collections.Generic.IEnumerator`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  href: System.Collections.IEnumerator.yml
  name: IEnumerator
  fullName: System.Collections.IEnumerator
  type: Interface
- uid: System.Collections
  isExternal: false
  name: System.Collections
  fullName: System.Collections
  type: Namespace
- uid: System.Comparison{{T}}
  parent: System
  definition: System.Comparison`1
  href: System.Comparison`1.yml
  name: Comparison<T>
  name.vb: Comparison(Of T)
  fullName: System.Comparison<T>
  fullName.vb: System.Comparison(Of T)
  spec.csharp:
  - uid: System.Comparison`1
    name: Comparison
    fullName: System.Comparison
    href: System.Comparison`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Comparison`1
    name: Comparison
    fullName: System.Comparison
    href: System.Comparison`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
- uid: System.Comparison`1
  isExternal: false
  href: System.Comparison`1.yml
  name: Comparison<T>
  name.vb: Comparison(Of T)
  fullName: System.Comparison<T>
  fullName.vb: System.Comparison(Of T)
  type: Delegate
  spec.csharp:
  - uid: System.Comparison`1
    name: Comparison
    fullName: System.Comparison
    href: System.Comparison`1.yml
  - name: <
    fullName: <
  - name: T
    fullName: T
  - name: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Comparison`1
    name: Comparison
    fullName: System.Comparison
    href: System.Comparison`1.yml
  - name: '(Of '
    fullName: '(Of '
  - name: T
    fullName: T
  - name: )
    fullName: )
