items:
- uid: System.Security.Cryptography.CryptoConfig
  id: CryptoConfig
  parent: System.Security.Cryptography
  children:
  - System.Security.Cryptography.CryptoConfig.AddAlgorithm(System.Type,System.String[])
  - System.Security.Cryptography.CryptoConfig.AddOID(System.String,System.String[])
  - System.Security.Cryptography.CryptoConfig.AllowOnlyFipsAlgorithms
  - System.Security.Cryptography.CryptoConfig.CreateFromName(System.String)
  - System.Security.Cryptography.CryptoConfig.CreateFromName(System.String,System.Object[])
  - System.Security.Cryptography.CryptoConfig.EncodeOID(System.String)
  - System.Security.Cryptography.CryptoConfig.MapNameToOID(System.String)
  href: System.Security.Cryptography.CryptoConfig.yml
  name: CryptoConfig
  fullName: System.Security.Cryptography.CryptoConfig
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Security/Cryptography/CryptoConfig.cs
      branch: master
      repo: https://github.com/chenkennt/coreclr.git
      key: 6c42ef8d
    path: src/mscorlib/src/System/Security/Cryptography/CryptoConfig.cs
    startLine: 17
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: public class CryptoConfig
    content.vb: Public Class CryptoConfig
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Security.Cryptography.CryptoConfig.AllowOnlyFipsAlgorithms
  id: AllowOnlyFipsAlgorithms
  parent: System.Security.Cryptography.CryptoConfig
  href: System.Security.Cryptography.CryptoConfig.yml
  name: AllowOnlyFipsAlgorithms
  fullName: System.Security.Cryptography.CryptoConfig.AllowOnlyFipsAlgorithms
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/CryptoConfig.cs
    startLine: 38
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: >-
    Determine if the runtime should enforce that only FIPS certified algorithms are created. This

    property returns true if this policy should be enforced, false if any algorithm may be created.
  syntax:
    content: public static bool AllowOnlyFipsAlgorithms { get; }
    content.vb: Public Shared ReadOnly Property AllowOnlyFipsAlgorithms As Boolean
    parameters: []
    return:
      type: System.Boolean
- uid: System.Security.Cryptography.CryptoConfig.AddAlgorithm(System.Type,System.String[])
  id: AddAlgorithm(System.Type,System.String[])
  parent: System.Security.Cryptography.CryptoConfig
  href: System.Security.Cryptography.CryptoConfig.yml
  name: AddAlgorithm(Type, String[])
  name.vb: AddAlgorithm(Type, String())
  fullName: System.Security.Cryptography.CryptoConfig.AddAlgorithm(System.Type, System.String[])
  fullName.vb: System.Security.Cryptography.CryptoConfig.AddAlgorithm(System.Type, System.String())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/CryptoConfig.cs
    startLine: 510
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: >-
    Add a set of name -&gt; algorithm mappings to be used for the current AppDomain.  These mappings

    take precidense over the built-in mappings and the mappings in machine.config.  This API is

    critical to prevent partial trust code from hooking trusted crypto operations.
  syntax:
    content: public static void AddAlgorithm(Type algorithm, params string[] names)
    content.vb: Public Shared Sub AddAlgorithm(algorithm As Type, ParamArray names As String())
    parameters:
    - id: algorithm
      type: System.Type
    - id: names
      type: System.String[]
- uid: System.Security.Cryptography.CryptoConfig.CreateFromName(System.String,System.Object[])
  id: CreateFromName(System.String,System.Object[])
  parent: System.Security.Cryptography.CryptoConfig
  href: System.Security.Cryptography.CryptoConfig.yml
  name: CreateFromName(String, Object[])
  name.vb: CreateFromName(String, Object())
  fullName: System.Security.Cryptography.CryptoConfig.CreateFromName(System.String, System.Object[])
  fullName.vb: System.Security.Cryptography.CryptoConfig.CreateFromName(System.String, System.Object())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/CryptoConfig.cs
    startLine: 539
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: public static object CreateFromName(string name, params object[] args)
    content.vb: Public Shared Function CreateFromName(name As String, ParamArray args As Object()) As Object
    parameters:
    - id: name
      type: System.String
    - id: args
      type: System.Object[]
    return:
      type: System.Object
- uid: System.Security.Cryptography.CryptoConfig.CreateFromName(System.String)
  id: CreateFromName(System.String)
  parent: System.Security.Cryptography.CryptoConfig
  href: System.Security.Cryptography.CryptoConfig.yml
  name: CreateFromName(String)
  fullName: System.Security.Cryptography.CryptoConfig.CreateFromName(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/CryptoConfig.cs
    startLine: 648
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: public static object CreateFromName(string name)
    content.vb: Public Shared Function CreateFromName(name As String) As Object
    parameters:
    - id: name
      type: System.String
    return:
      type: System.Object
- uid: System.Security.Cryptography.CryptoConfig.AddOID(System.String,System.String[])
  id: AddOID(System.String,System.String[])
  parent: System.Security.Cryptography.CryptoConfig
  href: System.Security.Cryptography.CryptoConfig.yml
  name: AddOID(String, String[])
  name.vb: AddOID(String, String())
  fullName: System.Security.Cryptography.CryptoConfig.AddOID(System.String, System.String[])
  fullName.vb: System.Security.Cryptography.CryptoConfig.AddOID(System.String, System.String())
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/CryptoConfig.cs
    startLine: 657
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  summary: >-
    Add a set of name -&gt; OID mappings to be used for the current AppDomain.  These mappings

    take precidense over the built-in mappings and the mappings in machine.config.  This API is

    critical to prevent partial trust code from hooking trusted crypto operations.
  syntax:
    content: public static void AddOID(string oid, params string[] names)
    content.vb: Public Shared Sub AddOID(oid As String, ParamArray names As String())
    parameters:
    - id: oid
      type: System.String
    - id: names
      type: System.String[]
- uid: System.Security.Cryptography.CryptoConfig.MapNameToOID(System.String)
  id: MapNameToOID(System.String)
  parent: System.Security.Cryptography.CryptoConfig
  href: System.Security.Cryptography.CryptoConfig.yml
  name: MapNameToOID(String)
  fullName: System.Security.Cryptography.CryptoConfig.MapNameToOID(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/CryptoConfig.cs
    startLine: 684
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: public static string MapNameToOID(string name)
    content.vb: Public Shared Function MapNameToOID(name As String) As String
    parameters:
    - id: name
      type: System.String
    return:
      type: System.String
- uid: System.Security.Cryptography.CryptoConfig.EncodeOID(System.String)
  id: EncodeOID(System.String)
  parent: System.Security.Cryptography.CryptoConfig
  href: System.Security.Cryptography.CryptoConfig.yml
  name: EncodeOID(String)
  fullName: System.Security.Cryptography.CryptoConfig.EncodeOID(System.String)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Security/Cryptography/CryptoConfig.cs
    startLine: 721
  assemblies:
  - mscorlib
  namespace: System.Security.Cryptography
  syntax:
    content: public static byte[] EncodeOID(string str)
    content.vb: Public Shared Function EncodeOID(str As String) As Byte()
    parameters:
    - id: str
      type: System.String
    return:
      type: System.Byte[]
references:
- uid: System.Security.Cryptography
  isExternal: false
  name: System.Security.Cryptography
  fullName: System.Security.Cryptography
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
  type: Struct
- uid: System.Type
  parent: System
  isExternal: false
  href: System.Type.yml
  name: Type
  fullName: System.Type
  type: Class
- uid: System.String[]
  isExternal: false
  href: System.String.yml
  name: String[]
  name.vb: String()
  fullName: System.String[]
  fullName.vb: System.String()
  spec.csharp:
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    fullName: System.String
    href: System.String.yml
  - name: ()
    fullName: ()
- uid: System.String
  parent: System
  isExternal: false
  href: System.String.yml
  name: String
  fullName: System.String
  type: Class
- uid: System.Object[]
  isExternal: false
  href: System.Object.yml
  name: Object[]
  name.vb: Object()
  fullName: System.Object[]
  fullName.vb: System.Object()
  spec.csharp:
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ()
    fullName: ()
- uid: System.Byte[]
  isExternal: false
  href: System.Byte.yml
  name: Byte[]
  name.vb: Byte()
  fullName: System.Byte[]
  fullName.vb: System.Byte()
  spec.csharp:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    href: System.Byte.yml
  - name: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Byte
    name: Byte
    fullName: System.Byte
    href: System.Byte.yml
  - name: ()
    fullName: ()
