items:
- uid: System.Threading.ManualResetEventSlim
  id: ManualResetEventSlim
  parent: System.Threading
  children:
  - System.Threading.ManualResetEventSlim.#ctor
  - System.Threading.ManualResetEventSlim.#ctor(System.Boolean)
  - System.Threading.ManualResetEventSlim.#ctor(System.Boolean,System.Int32)
  - System.Threading.ManualResetEventSlim.Dispose
  - System.Threading.ManualResetEventSlim.Dispose(System.Boolean)
  - System.Threading.ManualResetEventSlim.IsSet
  - System.Threading.ManualResetEventSlim.Reset
  - System.Threading.ManualResetEventSlim.Set
  - System.Threading.ManualResetEventSlim.SpinCount
  - System.Threading.ManualResetEventSlim.Wait
  - System.Threading.ManualResetEventSlim.Wait(System.Int32)
  - System.Threading.ManualResetEventSlim.Wait(System.Int32,System.Threading.CancellationToken)
  - System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)
  - System.Threading.ManualResetEventSlim.Wait(System.TimeSpan)
  - System.Threading.ManualResetEventSlim.Wait(System.TimeSpan,System.Threading.CancellationToken)
  - System.Threading.ManualResetEventSlim.WaitHandle
  href: System.Threading.ManualResetEventSlim.yml
  name: ManualResetEventSlim
  fullName: System.Threading.ManualResetEventSlim
  type: Class
  source:
    remote: &o0
      path: src/mscorlib/src/System/Threading/ManualResetEventSlim.cs
      branch: master
      repo: https://github.com/chenkennt/coreclr.git
      key: 6c42ef8d
    path: src/mscorlib/src/System/Threading/ManualResetEventSlim.cs
    startLine: 46
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: Provides a slimmed down version of [System.Threading.ManualResetEvent](System.Threading.ManualResetEvent.yml).
  remarks: >-
    All public and protected members of <see cref="T:System.Threading.ManualResetEventSlim" /> are thread-safe and may be used

    concurrently from multiple threads, with the exception of Dispose, which

    must only be used when all other operations on the <see cref="T:System.Threading.ManualResetEventSlim" /> have

    completed, and Reset, which should only be used when no other threads are

    accessing the event.
  syntax:
    content: 'public class ManualResetEventSlim : IDisposable'
    content.vb: Public Class ManualResetEventSlim Implements IDisposable
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: System.Threading.ManualResetEventSlim.WaitHandle
  id: WaitHandle
  parent: System.Threading.ManualResetEventSlim
  href: System.Threading.ManualResetEventSlim.yml
  name: WaitHandle
  fullName: System.Threading.ManualResetEventSlim.WaitHandle
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/ManualResetEventSlim.cs
    startLine: 100
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: Gets the underlying [System.Threading.WaitHandle](System.Threading.WaitHandle.yml) object for this [System.Threading.ManualResetEventSlim](System.Threading.ManualResetEventSlim.yml).
  remarks: >-
    Accessing this property forces initialization of an underlying event object if one hasn't

    already been created.  To simply wait on this <see cref="T:System.Threading.ManualResetEventSlim" />,

    the public Wait methods should be preferred.
  syntax:
    content: public WaitHandle WaitHandle { get; }
    content.vb: Public ReadOnly Property WaitHandle As WaitHandle
    parameters: []
    return:
      type: System.Threading.WaitHandle
- uid: System.Threading.ManualResetEventSlim.IsSet
  id: IsSet
  parent: System.Threading.ManualResetEventSlim
  href: System.Threading.ManualResetEventSlim.yml
  name: IsSet
  fullName: System.Threading.ManualResetEventSlim.IsSet
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/ManualResetEventSlim.cs
    startLine: 120
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: Gets whether the event is set.
  syntax:
    content: public bool IsSet { get; }
    content.vb: Public ReadOnly Property IsSet As Boolean
    parameters: []
    return:
      type: System.Boolean
- uid: System.Threading.ManualResetEventSlim.SpinCount
  id: SpinCount
  parent: System.Threading.ManualResetEventSlim
  href: System.Threading.ManualResetEventSlim.yml
  name: SpinCount
  fullName: System.Threading.ManualResetEventSlim.SpinCount
  type: Property
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/ManualResetEventSlim.cs
    startLine: 136
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: Gets the number of spin waits that will be occur before falling back to a true wait.
  syntax:
    content: public int SpinCount { get; }
    content.vb: Public ReadOnly Property SpinCount As Integer
    parameters: []
    return:
      type: System.Int32
- uid: System.Threading.ManualResetEventSlim.#ctor
  id: '#ctor'
  parent: System.Threading.ManualResetEventSlim
  href: System.Threading.ManualResetEventSlim.yml
  name: ManualResetEventSlim()
  fullName: System.Threading.ManualResetEventSlim.ManualResetEventSlim()
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/ManualResetEventSlim.cs
    startLine: 185
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: >-
    Initializes a new instance of the [System.Threading.ManualResetEventSlim](System.Threading.ManualResetEventSlim.yml)

    class with an initial state of nonsignaled.
  syntax:
    content: public ManualResetEventSlim()
    content.vb: Public Sub New
- uid: System.Threading.ManualResetEventSlim.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Threading.ManualResetEventSlim
  href: System.Threading.ManualResetEventSlim.yml
  name: ManualResetEventSlim(Boolean)
  fullName: System.Threading.ManualResetEventSlim.ManualResetEventSlim(System.Boolean)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/ManualResetEventSlim.cs
    startLine: 197
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: >-
    Initializes a new instance of the [System.Threading.ManualResetEventSlim](System.Threading.ManualResetEventSlim.yml)

    class with a Boolen value indicating whether to set the intial state to signaled.
  syntax:
    content: public ManualResetEventSlim(bool initialState)
    content.vb: Public Sub New(initialState As Boolean)
    parameters:
    - id: initialState
      type: System.Boolean
      description: >-
        true to set the initial state signaled; false to set the initial state

        to nonsignaled.
- uid: System.Threading.ManualResetEventSlim.#ctor(System.Boolean,System.Int32)
  id: '#ctor(System.Boolean,System.Int32)'
  parent: System.Threading.ManualResetEventSlim
  href: System.Threading.ManualResetEventSlim.yml
  name: ManualResetEventSlim(Boolean, Int32)
  fullName: System.Threading.ManualResetEventSlim.ManualResetEventSlim(System.Boolean, System.Int32)
  type: Constructor
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/ManualResetEventSlim.cs
    startLine: 215
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: >-
    Initializes a new instance of the [System.Threading.ManualResetEventSlim](System.Threading.ManualResetEventSlim.yml)

    class with a Boolen value indicating whether to set the intial state to signaled and a specified

    spin count.
  syntax:
    content: public ManualResetEventSlim(bool initialState, int spinCount)
    content.vb: Public Sub New(initialState As Boolean, spinCount As Integer)
    parameters:
    - id: initialState
      type: System.Boolean
      description: >-
        true to set the initial state to signaled; false to set the initial state

        to nonsignaled.
    - id: spinCount
      type: System.Int32
      description: >-
        The number of spin waits that will occur before falling back to a true

        wait.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: >-
      is less than

      0 or greater than the maximum allowed value.
- uid: System.Threading.ManualResetEventSlim.Set
  id: Set
  parent: System.Threading.ManualResetEventSlim
  href: System.Threading.ManualResetEventSlim.yml
  name: Set()
  fullName: System.Threading.ManualResetEventSlim.Set()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/ManualResetEventSlim.cs
    startLine: 318
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: >-
    Sets the state of the event to signaled, which allows one or more threads waiting on the event to

    proceed.
  syntax:
    content: public void Set()
    content.vb: Public Sub Set
- uid: System.Threading.ManualResetEventSlim.Reset
  id: Reset
  parent: System.Threading.ManualResetEventSlim
  href: System.Threading.ManualResetEventSlim.yml
  name: Reset()
  fullName: System.Threading.ManualResetEventSlim.Reset()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/ManualResetEventSlim.cs
    startLine: 386
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: Sets the state of the event to nonsignaled, which causes threads to block.
  remarks: >-
    Unlike most of the members of [System.Threading.ManualResetEventSlim](System.Threading.ManualResetEventSlim.yml), [System.Threading.ManualResetEventSlim.Reset](System.Threading.ManualResetEventSlim.yml) is not

    thread-safe and may not be used concurrently with other members of this instance.
  syntax:
    content: public void Reset()
    content.vb: Public Sub Reset
- uid: System.Threading.ManualResetEventSlim.Wait
  id: Wait
  parent: System.Threading.ManualResetEventSlim
  href: System.Threading.ManualResetEventSlim.yml
  name: Wait()
  fullName: System.Threading.ManualResetEventSlim.Wait()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/ManualResetEventSlim.cs
    startLine: 420
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: Blocks the current thread until the current [System.Threading.ManualResetEventSlim](System.Threading.ManualResetEventSlim.yml) is set.
  remarks: >-
    The caller of this method blocks indefinitely until the current instance is set. The caller will

    return immediately if the event is currently in a set state.
  syntax:
    content: public void Wait()
    content.vb: Public Sub Wait
  exceptions:
  - type: System.InvalidOperationException
    description: The maximum number of waiters has been exceeded.
- uid: System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)
  id: Wait(System.Threading.CancellationToken)
  parent: System.Threading.ManualResetEventSlim
  href: System.Threading.ManualResetEventSlim.yml
  name: Wait(CancellationToken)
  fullName: System.Threading.ManualResetEventSlim.Wait(System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/ManualResetEventSlim.cs
    startLine: 440
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: >-
    Blocks the current thread until the current [System.Threading.ManualResetEventSlim](System.Threading.ManualResetEventSlim.yml) receives a signal,

    while observing a [System.Threading.CancellationToken](System.Threading.CancellationToken.yml).
  remarks: >-
    The caller of this method blocks indefinitely until the current instance is set. The caller will

    return immediately if the event is currently in a set state.
  syntax:
    content: public void Wait(CancellationToken cancellationToken)
    content.vb: Public Sub Wait(cancellationToken As CancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: >-
        The <see cref="T:System.Threading.CancellationToken" /> to

        observe.
  exceptions:
  - type: System.InvalidOperationException
    description: The maximum number of waiters has been exceeded.
  - type: System.OperationCanceledExcepton
    description: >-
      was

      canceled.
- uid: System.Threading.ManualResetEventSlim.Wait(System.TimeSpan)
  id: Wait(System.TimeSpan)
  parent: System.Threading.ManualResetEventSlim
  href: System.Threading.ManualResetEventSlim.yml
  name: Wait(TimeSpan)
  fullName: System.Threading.ManualResetEventSlim.Wait(System.TimeSpan)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/ManualResetEventSlim.cs
    startLine: 460
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: >-
    Blocks the current thread until the current [System.Threading.ManualResetEventSlim](System.Threading.ManualResetEventSlim.yml) is set, using a

    [System.TimeSpan](System.TimeSpan.yml) to measure the time interval.
  syntax:
    content: public bool Wait(TimeSpan timeout)
    content.vb: Public Function Wait(timeout As TimeSpan) As Boolean
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: >-
        A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds

        to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.
    return:
      type: System.Boolean
      description: >-
        true if the <see cref="T:System.Threading.ManualResetEventSlim" /> was set; otherwise,

        false.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: >-
      is a negative

      number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater

      than .
  - type: System.InvalidOperationException
    description: The maximum number of waiters has been exceeded.
- uid: System.Threading.ManualResetEventSlim.Wait(System.TimeSpan,System.Threading.CancellationToken)
  id: Wait(System.TimeSpan,System.Threading.CancellationToken)
  parent: System.Threading.ManualResetEventSlim
  href: System.Threading.ManualResetEventSlim.yml
  name: Wait(TimeSpan, CancellationToken)
  fullName: System.Threading.ManualResetEventSlim.Wait(System.TimeSpan, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/ManualResetEventSlim.cs
    startLine: 491
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: >-
    Blocks the current thread until the current [System.Threading.ManualResetEventSlim](System.Threading.ManualResetEventSlim.yml) is set, using a

    [System.TimeSpan](System.TimeSpan.yml) to measure the time interval, while observing a [System.Threading.CancellationToken](System.Threading.CancellationToken.yml).
  syntax:
    content: public bool Wait(TimeSpan timeout, CancellationToken cancellationToken)
    content.vb: Public Function Wait(timeout As TimeSpan, cancellationToken As CancellationToken) As Boolean
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: >-
        A <see cref="T:System.TimeSpan" /> that represents the number of milliseconds

        to wait, or a <see cref="T:System.TimeSpan" /> that represents -1 milliseconds to wait indefinitely.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: >-
        The <see cref="T:System.Threading.CancellationToken" /> to

        observe.
    return:
      type: System.Boolean
      description: >-
        true if the <see cref="T:System.Threading.ManualResetEventSlim" /> was set; otherwise,

        false.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: >-
      is a negative

      number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater

      than .
  - type: System.Threading.OperationCanceledException
    description: was canceled.
  - type: System.InvalidOperationException
    description: The maximum number of waiters has been exceeded.
- uid: System.Threading.ManualResetEventSlim.Wait(System.Int32)
  id: Wait(System.Int32)
  parent: System.Threading.ManualResetEventSlim
  href: System.Threading.ManualResetEventSlim.yml
  name: Wait(Int32)
  fullName: System.Threading.ManualResetEventSlim.Wait(System.Int32)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/ManualResetEventSlim.cs
    startLine: 515
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: >-
    Blocks the current thread until the current [System.Threading.ManualResetEventSlim](System.Threading.ManualResetEventSlim.yml) is set, using a

    32-bit signed integer to measure the time interval.
  syntax:
    content: public bool Wait(int millisecondsTimeout)
    content.vb: Public Function Wait(millisecondsTimeout As Integer) As Boolean
    parameters:
    - id: millisecondsTimeout
      type: System.Int32
      description: The number of milliseconds to wait, or [System.Threading.Timeout.Infinite](System.Threading.Timeout.yml)(-1) to wait indefinitely.
    return:
      type: System.Boolean
      description: >-
        true if the <see cref="T:System.Threading.ManualResetEventSlim" /> was set; otherwise,

        false.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: >-
      is a

      negative number other than -1, which represents an infinite time-out.
  - type: System.InvalidOperationException
    description: The maximum number of waiters has been exceeded.
- uid: System.Threading.ManualResetEventSlim.Wait(System.Int32,System.Threading.CancellationToken)
  id: Wait(System.Int32,System.Threading.CancellationToken)
  parent: System.Threading.ManualResetEventSlim
  href: System.Threading.ManualResetEventSlim.yml
  name: Wait(Int32, CancellationToken)
  fullName: System.Threading.ManualResetEventSlim.Wait(System.Int32, System.Threading.CancellationToken)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/ManualResetEventSlim.cs
    startLine: 538
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: >-
    Blocks the current thread until the current [System.Threading.ManualResetEventSlim](System.Threading.ManualResetEventSlim.yml) is set, using a

    32-bit signed integer to measure the time interval, while observing a [System.Threading.CancellationToken](System.Threading.CancellationToken.yml).
  syntax:
    content: public bool Wait(int millisecondsTimeout, CancellationToken cancellationToken)
    content.vb: Public Function Wait(millisecondsTimeout As Integer, cancellationToken As CancellationToken) As Boolean
    parameters:
    - id: millisecondsTimeout
      type: System.Int32
      description: The number of milliseconds to wait, or [System.Threading.Timeout.Infinite](System.Threading.Timeout.yml)(-1) to wait indefinitely.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: >-
        The <see cref="T:System.Threading.CancellationToken" /> to

        observe.
    return:
      type: System.Boolean
      description: >-
        true if the <see cref="T:System.Threading.ManualResetEventSlim" /> was set; otherwise,

        false.
  exceptions:
  - type: System.ArgumentOutOfRangeException
    description: >-
      is a

      negative number other than -1, which represents an infinite time-out.
  - type: System.InvalidOperationException
    description: The maximum number of waiters has been exceeded.
  - type: System.Threading.OperationCanceledException
    description: was canceled.
- uid: System.Threading.ManualResetEventSlim.Dispose
  id: Dispose
  parent: System.Threading.ManualResetEventSlim
  href: System.Threading.ManualResetEventSlim.yml
  name: Dispose()
  fullName: System.Threading.ManualResetEventSlim.Dispose()
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/ManualResetEventSlim.cs
    startLine: 685
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: Releases all resources used by the current instance of [System.Threading.ManualResetEventSlim](System.Threading.ManualResetEventSlim.yml).
  remarks: >-
    Unlike most of the members of <see cref="T:System.Threading.ManualResetEventSlim" />, <see cref="M:System.Threading.ManualResetEventSlim.Dispose" /> is not

    thread-safe and may not be used concurrently with other members of this instance.
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose
- uid: System.Threading.ManualResetEventSlim.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Threading.ManualResetEventSlim
  href: System.Threading.ManualResetEventSlim.yml
  name: Dispose(Boolean)
  fullName: System.Threading.ManualResetEventSlim.Dispose(System.Boolean)
  type: Method
  source:
    remote: *o0
    path: src/mscorlib/src/System/Threading/ManualResetEventSlim.cs
    startLine: 701
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: >-
    When overridden in a derived class, releases the unmanaged resources used by the

    [System.Threading.ManualResetEventSlim](System.Threading.ManualResetEventSlim.yml), and optionally releases the managed resources.
  remarks: >-
    Unlike most of the members of <see cref="T:System.Threading.ManualResetEventSlim" />, <see cref="M:System.Threading.ManualResetEventSlim.Dispose(System.Boolean)" /> is not

    thread-safe and may not be used concurrently with other members of this instance.
  syntax:
    content: protected virtual void Dispose(bool disposing)
    content.vb: Protected Overridable Sub Dispose(disposing As Boolean)
    parameters:
    - id: disposing
      type: System.Boolean
      description: >-
        true to release both managed and unmanaged resources;

        false to release only unmanaged resources.
references:
- uid: System.Threading.ManualResetEvent
  isExternal: false
  href: System.Threading.ManualResetEvent.yml
  name: ManualResetEvent
  fullName: System.Threading.ManualResetEvent
  type: Class
- uid: System.Threading.ManualResetEventSlim
  isExternal: false
  href: System.Threading.ManualResetEventSlim.yml
  name: ManualResetEventSlim
  fullName: System.Threading.ManualResetEventSlim
  type: Class
  summary: Provides a slimmed down version of @'System.Threading.ManualResetEvent'.
- uid: System.Threading
  isExternal: false
  name: System.Threading
  fullName: System.Threading
  type: Namespace
- uid: System.Object
  parent: System
  isExternal: false
  href: System.Object.yml
  name: Object
  fullName: System.Object
  type: Class
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    fullName: System.Object.ToString
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    fullName: System.Object.Equals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    fullName: System.Object.ReferenceEquals
    href: System.Object.yml
  - name: (
    fullName: (
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    fullName: System.Object
    href: System.Object.yml
  - name: )
    fullName: )
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  href: System.Object.yml
  name: GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    fullName: System.Object.GetHashCode
    href: System.Object.yml
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    fullName: (
  - name: )
    fullName: )
- uid: System
  isExternal: false
  name: System
  fullName: System
  type: Namespace
- uid: System.Threading.WaitHandle
  parent: System.Threading
  isExternal: false
  href: System.Threading.WaitHandle.yml
  name: WaitHandle
  fullName: System.Threading.WaitHandle
  type: Class
- uid: System.Boolean
  parent: System
  isExternal: false
  href: System.Boolean.yml
  name: Boolean
  fullName: System.Boolean
  type: Struct
- uid: System.Int32
  parent: System
  isExternal: false
  href: System.Int32.yml
  name: Int32
  fullName: System.Int32
  type: Struct
- uid: System.ArgumentOutOfRangeException
  isExternal: false
  href: System.ArgumentOutOfRangeException.yml
  name: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
  type: Class
- uid: System.Threading.ManualResetEventSlim.Reset
- uid: System.InvalidOperationException
  isExternal: false
  href: System.InvalidOperationException.yml
  name: InvalidOperationException
  fullName: System.InvalidOperationException
  type: Class
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  href: System.Threading.CancellationToken.yml
  name: CancellationToken
  fullName: System.Threading.CancellationToken
  type: Struct
  summary: Propagates notification that operations should be canceled.
- uid: System.OperationCanceledExcepton
- uid: System.TimeSpan
  parent: System
  isExternal: false
  href: System.TimeSpan.yml
  name: TimeSpan
  fullName: System.TimeSpan
  type: Struct
- uid: System.Threading.OperationCanceledException
- uid: System.Threading.Timeout.Infinite
